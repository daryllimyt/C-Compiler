int x = 1;

li    $v0, 1
sw    $v0, x($sp)

x += 2;

lw    $t0, x($sp)    #
addi  $t0, $t0, 2   #  =  +

x = y + z

lw    $t1, y($sp)    #
lw    $t2, z($sp)    #

addi  $t0, $t0, 2   #  =  +


int main(){

}

main:
addiu   $sp,$sp,-8
sw      $fp,4($sp)
move    $fp,$sp

move    $v1,$0
move    $sp,$fp
lw      $fp,4($sp)
addiu   $sp,$sp,8
j       $31
nop


if(compile(expression1) -> t1){
  compile(multistatements1)
}
else if (compile(expression2)-> t1){
  compile(multistatements2) -> t0
}
else {
  compile(multistatements3)
}

if_10:
    (expression1)
    beq $t0, $0, else_if_1_10
    nop
    (multistatements1)
    b if_end_10
    nop

else_if_1_10:
    (expression2)
    beq $t0, $0, else_10
    nop
    (multistatements1)
    b if_end_10
    nop

else_10:
    (expression3)
    b if_end_10
    nop

if_end_10:

for(init; assi; cond){
  statement;
}

(init) # int i = 0;
while_10:
  (cond) -> $t0 #i < 2 = true/false
  beq $t0, $0, while_end_10 #branch if cond = false
  nop
  (statement)
  (assi) #i++;
  b while_10
  nop

while_end_10:

while(cond){
  statement
}

while_11:
    (cond) -> $t0 #i < 2 = true/false
    beq $t0, $0, while_end_10 #branch if cond = false
    nop
    (statement)
    b while_11
    nop

while_end_11:


switch(expr){
  case val1:
    statement1
    break;
  case val2:
    statement2
    break;
  default:
    statement3
}

switch_10:
  (expr) -> $v1

                              li $t0, val1
                              bne $t0, $v1, case_val1_end_10
                              nop

                            case_val1_10:

                              (statement1)

                            case_val1_end_10:

  li $t0, val1
  bne $t0, $v1, case_val2_end_10
  nop


case_val2_10:

    (statement2)

case_val2_end_10:


                            case_default_10:


                            case_end_10:
