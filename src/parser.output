Terminals unused in grammar

    T_AUTO
    T_BREAK
    T_CASE
    T_CONST
    T_CONTINUE
    T_DEFAULT
    T_DO
    T_ELSE
    T_ENUM
    T_EXTERN
    T_GOTO
    T_IF
    T_REGISTER
    T_SIZEOF
    T_STATIC
    T_STRUCT
    T_SWITCH
    T_TYPEDEF
    T_UNION
    T_AND
    T_NOT
    T_INVERT
    T_MINUS
    T_PLUS
    T_DIV
    T_MOD
    T_LT
    T_GT
    T_XOR
    T_OR
    T_QUESTION
    T_DOT
    T_ELLIPSIS
    T_RSHIFT_ASSIGN
    T_LSHIFT_ASSIGN
    T_ADD_ASSIGN
    T_SUB_ASSIGN
    T_MUL_ASSIGN
    T_DIV_ASSIGN
    T_MOD_ASSIGN
    T_AND_ASSIGN
    T_XOR_ASSIGN
    T_OR_ASSIGN
    T_RSHIFT_OP
    T_LSHIFT_OP
    T_INC_OP
    T_DEC_OP
    T_PTR_OP
    T_AND_OP
    T_OR_OP
    T_LE_OP
    T_GE_OP
    T_EQ_OP
    T_NE_OP
    T_COMMA
    T_COLON
    T_L_BRACKET
    T_R_BRACKET
    T_FLOAT_CONST
    T_CHAR_CONST
    T_STRING_CONST


Grammar

    0 $accept: ROOT $end

    1 ROOT: FRAME

    2 FRAME: FUNCTION_DEFINITION
    3      | FUNCTION_DECLARATION
    4      | FRAME FUNCTION_DEFINITION
    5      | FRAME FUNCTION_DECLARATION

    6 FUNCTION_DECLARATION: TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS T_SEMICOLON

    7 FUNCTION_DEFINITION: TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS SCOPE

    8 WRAPPED_ARGUMENTS: T_L_PARENTHESIS T_R_PARENTHESIS

    9 SCOPE: T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE
   10      | T_L_BRACE T_R_BRACE

   11 MULTIPLE_STATEMENTS: SINGLE_STATEMENT MULTIPLE_STATEMENTS
   12                    | SINGLE_STATEMENT

   13 SINGLE_STATEMENT: SCOPE
   14                 | EXPRESSION_STATEMENT
   15                 | JUMP_STATEMENT
   16                 | ITERATION_STATEMENT

   17 ITERATION_STATEMENT: T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT
   18                    | T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT

   19 JUMP_STATEMENT: T_RETURN T_SEMICOLON
   20               | T_RETURN EXPRESSION T_SEMICOLON

   21 EXPRESSION_STATEMENT: EXPRESSION T_SEMICOLON

   22 EXPRESSION: VARIABLE_DECLARATION
   23           | ASSIGNMENT_STATEMENT
   24           | MATH_OR_BITWISE_EXPRESSION

   25 VARIABLE_DECLARATION: TYPE_SPECIFIER ASSIGNMENT_STATEMENT

   26 ASSIGNMENT_STATEMENT: DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION
   27                     | DECLARATOR

   28 MATH_OR_BITWISE_EXPRESSION: CONDITIONAL_EXPRESSION

   29 PRIMARY_EXPRESSION: T_INT_CONST

   30 POSTFIX_EXPRESSION: PRIMARY_EXPRESSION

   31 UNARY_EXPRESSION: POSTFIX_EXPRESSION

   32 MULTIPLICATIVE_EXPRESSION: UNARY_EXPRESSION

   33 ADDITIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION

   34 SHIFT_EXPRESSION: ADDITIVE_EXPRESSION

   35 RELATIONAL_EXPRESSION: SHIFT_EXPRESSION

   36 EQUALITY_EXPRESSION: RELATIONAL_EXPRESSION

   37 BITWISE_AND_EXPRESSION: EQUALITY_EXPRESSION

   38 BITWISE_XOR_EXPRESSION: BITWISE_AND_EXPRESSION

   39 BITWISE_OR_EXPRESSION: BITWISE_XOR_EXPRESSION

   40 BOOLEAN_AND_EXPRESSION: BITWISE_OR_EXPRESSION

   41 BOOLEAN_OR_EXPRESSION: BOOLEAN_AND_EXPRESSION

   42 CONDITIONAL_EXPRESSION: BOOLEAN_OR_EXPRESSION

   43 DECLARATOR: T_IDENTIFIER
   44           | T_MULT T_IDENTIFIER

   45 TYPE_SPECIFIER: T_VOID
   46               | T_CHAR
   47               | T_SHORT
   48               | T_INT
   49               | T_LONG
   50               | T_FLOAT
   51               | T_DOUBLE
   52               | T_SIGNED
   53               | T_UNSIGNED


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_AUTO (258)
    T_BREAK (259)
    T_CASE (260)
    T_CHAR (261) 46
    T_CONST (262)
    T_CONTINUE (263)
    T_DEFAULT (264)
    T_DO (265)
    T_DOUBLE (266) 51
    T_ELSE (267)
    T_ENUM (268)
    T_EXTERN (269)
    T_FLOAT (270) 50
    T_FOR (271) 18
    T_GOTO (272)
    T_IF (273)
    T_INT (274) 48
    T_LONG (275) 49
    T_REGISTER (276)
    T_RETURN (277) 19 20
    T_SHORT (278) 47
    T_SIGNED (279) 52
    T_SIZEOF (280)
    T_STATIC (281)
    T_STRUCT (282)
    T_SWITCH (283)
    T_TYPEDEF (284)
    T_UNION (285)
    T_UNSIGNED (286) 53
    T_VOID (287) 45
    T_WHILE (288) 17
    T_AND (289)
    T_NOT (290)
    T_INVERT (291)
    T_MINUS (292)
    T_PLUS (293)
    T_MULT (294) 44
    T_DIV (295)
    T_MOD (296)
    T_LT (297)
    T_GT (298)
    T_XOR (299)
    T_OR (300)
    T_QUESTION (301)
    T_DOT (302)
    T_ELLIPSIS (303)
    T_RSHIFT_ASSIGN (304)
    T_LSHIFT_ASSIGN (305)
    T_ADD_ASSIGN (306)
    T_SUB_ASSIGN (307)
    T_MUL_ASSIGN (308)
    T_DIV_ASSIGN (309)
    T_MOD_ASSIGN (310)
    T_AND_ASSIGN (311)
    T_XOR_ASSIGN (312)
    T_OR_ASSIGN (313)
    T_EQ_ASSIGN <node> (314) 26
    T_RSHIFT_OP (315)
    T_LSHIFT_OP (316)
    T_INC_OP (317)
    T_DEC_OP (318)
    T_PTR_OP (319)
    T_AND_OP (320)
    T_OR_OP (321)
    T_LE_OP (322)
    T_GE_OP (323)
    T_EQ_OP (324)
    T_NE_OP (325)
    T_SEMICOLON (326) 6 19 20 21
    T_COMMA (327)
    T_COLON (328)
    T_L_BRACE (329) 9 10
    T_R_BRACE (330) 9 10
    T_L_PARENTHESIS (331) 8 17 18
    T_R_PARENTHESIS (332) 8 17 18
    T_L_BRACKET (333)
    T_R_BRACKET (334)
    T_IDENTIFIER <string> (335) 43 44
    T_INT_CONST <integer_constant> (336) 29
    T_FLOAT_CONST <float_constant> (337)
    T_CHAR_CONST <string> (338)
    T_STRING_CONST <string> (339)


Nonterminals, with rules where they appear

    $accept (85)
        on left: 0
    ROOT <node> (86)
        on left: 1
        on right: 0
    FRAME <node> (87)
        on left: 2 3 4 5
        on right: 1 4 5
    FUNCTION_DECLARATION <node> (88)
        on left: 6
        on right: 3 5
    FUNCTION_DEFINITION <node> (89)
        on left: 7
        on right: 2 4
    WRAPPED_ARGUMENTS <node> (90)
        on left: 8
        on right: 6 7
    SCOPE <node> (91)
        on left: 9 10
        on right: 7 13
    MULTIPLE_STATEMENTS <node> (92)
        on left: 11 12
        on right: 9 11
    SINGLE_STATEMENT <node> (93)
        on left: 13 14 15 16
        on right: 11 12 17 18
    ITERATION_STATEMENT <node> (94)
        on left: 17 18
        on right: 16
    JUMP_STATEMENT <node> (95)
        on left: 19 20
        on right: 15
    EXPRESSION_STATEMENT <node> (96)
        on left: 21
        on right: 14 18
    EXPRESSION <node> (97)
        on left: 22 23 24
        on right: 17 18 20 21
    VARIABLE_DECLARATION <node> (98)
        on left: 25
        on right: 22
    ASSIGNMENT_STATEMENT <node> (99)
        on left: 26 27
        on right: 23 25
    MATH_OR_BITWISE_EXPRESSION <node> (100)
        on left: 28
        on right: 24 26
    PRIMARY_EXPRESSION <node> (101)
        on left: 29
        on right: 30
    POSTFIX_EXPRESSION <node> (102)
        on left: 30
        on right: 31
    UNARY_EXPRESSION <node> (103)
        on left: 31
        on right: 32
    MULTIPLICATIVE_EXPRESSION <node> (104)
        on left: 32
        on right: 33
    ADDITIVE_EXPRESSION <node> (105)
        on left: 33
        on right: 34
    SHIFT_EXPRESSION <node> (106)
        on left: 34
        on right: 35
    RELATIONAL_EXPRESSION <node> (107)
        on left: 35
        on right: 36
    EQUALITY_EXPRESSION <node> (108)
        on left: 36
        on right: 37
    BITWISE_AND_EXPRESSION <node> (109)
        on left: 37
        on right: 38
    BITWISE_XOR_EXPRESSION <node> (110)
        on left: 38
        on right: 39
    BITWISE_OR_EXPRESSION <node> (111)
        on left: 39
        on right: 40
    BOOLEAN_AND_EXPRESSION <node> (112)
        on left: 40
        on right: 41
    BOOLEAN_OR_EXPRESSION <node> (113)
        on left: 41
        on right: 42
    CONDITIONAL_EXPRESSION <node> (114)
        on left: 42
        on right: 28
    DECLARATOR <node> (115)
        on left: 43 44
        on right: 6 7 26 27
    TYPE_SPECIFIER <node> (116)
        on left: 45 46 47 48 49 50 51 52 53
        on right: 6 7 25


State 0

    0 $accept: . ROOT $end
    1 ROOT: . FRAME
    2 FRAME: . FUNCTION_DEFINITION
    3      | . FUNCTION_DECLARATION
    4      | . FRAME FUNCTION_DEFINITION
    5      | . FRAME FUNCTION_DECLARATION
    6 FUNCTION_DECLARATION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS T_SEMICOLON
    7 FUNCTION_DEFINITION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS SCOPE
   45 TYPE_SPECIFIER: . T_VOID
   46               | . T_CHAR
   47               | . T_SHORT
   48               | . T_INT
   49               | . T_LONG
   50               | . T_FLOAT
   51               | . T_DOUBLE
   52               | . T_SIGNED
   53               | . T_UNSIGNED

    T_CHAR      shift, and go to state 1
    T_DOUBLE    shift, and go to state 2
    T_FLOAT     shift, and go to state 3
    T_INT       shift, and go to state 4
    T_LONG      shift, and go to state 5
    T_SHORT     shift, and go to state 6
    T_SIGNED    shift, and go to state 7
    T_UNSIGNED  shift, and go to state 8
    T_VOID      shift, and go to state 9

    ROOT                  go to state 10
    FRAME                 go to state 11
    FUNCTION_DECLARATION  go to state 12
    FUNCTION_DEFINITION   go to state 13
    TYPE_SPECIFIER        go to state 14


State 1

   46 TYPE_SPECIFIER: T_CHAR .

    $default  reduce using rule 46 (TYPE_SPECIFIER)


State 2

   51 TYPE_SPECIFIER: T_DOUBLE .

    $default  reduce using rule 51 (TYPE_SPECIFIER)


State 3

   50 TYPE_SPECIFIER: T_FLOAT .

    $default  reduce using rule 50 (TYPE_SPECIFIER)


State 4

   48 TYPE_SPECIFIER: T_INT .

    $default  reduce using rule 48 (TYPE_SPECIFIER)


State 5

   49 TYPE_SPECIFIER: T_LONG .

    $default  reduce using rule 49 (TYPE_SPECIFIER)


State 6

   47 TYPE_SPECIFIER: T_SHORT .

    $default  reduce using rule 47 (TYPE_SPECIFIER)


State 7

   52 TYPE_SPECIFIER: T_SIGNED .

    $default  reduce using rule 52 (TYPE_SPECIFIER)


State 8

   53 TYPE_SPECIFIER: T_UNSIGNED .

    $default  reduce using rule 53 (TYPE_SPECIFIER)


State 9

   45 TYPE_SPECIFIER: T_VOID .

    $default  reduce using rule 45 (TYPE_SPECIFIER)


State 10

    0 $accept: ROOT . $end

    $end  shift, and go to state 15


State 11

    1 ROOT: FRAME .  [$end]
    4 FRAME: FRAME . FUNCTION_DEFINITION
    5      | FRAME . FUNCTION_DECLARATION
    6 FUNCTION_DECLARATION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS T_SEMICOLON
    7 FUNCTION_DEFINITION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS SCOPE
   45 TYPE_SPECIFIER: . T_VOID
   46               | . T_CHAR
   47               | . T_SHORT
   48               | . T_INT
   49               | . T_LONG
   50               | . T_FLOAT
   51               | . T_DOUBLE
   52               | . T_SIGNED
   53               | . T_UNSIGNED

    T_CHAR      shift, and go to state 1
    T_DOUBLE    shift, and go to state 2
    T_FLOAT     shift, and go to state 3
    T_INT       shift, and go to state 4
    T_LONG      shift, and go to state 5
    T_SHORT     shift, and go to state 6
    T_SIGNED    shift, and go to state 7
    T_UNSIGNED  shift, and go to state 8
    T_VOID      shift, and go to state 9

    $default  reduce using rule 1 (ROOT)

    FUNCTION_DECLARATION  go to state 16
    FUNCTION_DEFINITION   go to state 17
    TYPE_SPECIFIER        go to state 14


State 12

    3 FRAME: FUNCTION_DECLARATION .

    $default  reduce using rule 3 (FRAME)


State 13

    2 FRAME: FUNCTION_DEFINITION .

    $default  reduce using rule 2 (FRAME)


State 14

    6 FUNCTION_DECLARATION: TYPE_SPECIFIER . DECLARATOR WRAPPED_ARGUMENTS T_SEMICOLON
    7 FUNCTION_DEFINITION: TYPE_SPECIFIER . DECLARATOR WRAPPED_ARGUMENTS SCOPE
   43 DECLARATOR: . T_IDENTIFIER
   44           | . T_MULT T_IDENTIFIER

    T_MULT        shift, and go to state 18
    T_IDENTIFIER  shift, and go to state 19

    DECLARATOR  go to state 20


State 15

    0 $accept: ROOT $end .

    $default  accept


State 16

    5 FRAME: FRAME FUNCTION_DECLARATION .

    $default  reduce using rule 5 (FRAME)


State 17

    4 FRAME: FRAME FUNCTION_DEFINITION .

    $default  reduce using rule 4 (FRAME)


State 18

   44 DECLARATOR: T_MULT . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 21


State 19

   43 DECLARATOR: T_IDENTIFIER .

    $default  reduce using rule 43 (DECLARATOR)


State 20

    6 FUNCTION_DECLARATION: TYPE_SPECIFIER DECLARATOR . WRAPPED_ARGUMENTS T_SEMICOLON
    7 FUNCTION_DEFINITION: TYPE_SPECIFIER DECLARATOR . WRAPPED_ARGUMENTS SCOPE
    8 WRAPPED_ARGUMENTS: . T_L_PARENTHESIS T_R_PARENTHESIS

    T_L_PARENTHESIS  shift, and go to state 22

    WRAPPED_ARGUMENTS  go to state 23


State 21

   44 DECLARATOR: T_MULT T_IDENTIFIER .

    $default  reduce using rule 44 (DECLARATOR)


State 22

    8 WRAPPED_ARGUMENTS: T_L_PARENTHESIS . T_R_PARENTHESIS

    T_R_PARENTHESIS  shift, and go to state 24


State 23

    6 FUNCTION_DECLARATION: TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS . T_SEMICOLON
    7 FUNCTION_DEFINITION: TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS . SCOPE
    9 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE
   10      | . T_L_BRACE T_R_BRACE

    T_SEMICOLON  shift, and go to state 25
    T_L_BRACE    shift, and go to state 26

    SCOPE  go to state 27


State 24

    8 WRAPPED_ARGUMENTS: T_L_PARENTHESIS T_R_PARENTHESIS .

    $default  reduce using rule 8 (WRAPPED_ARGUMENTS)


State 25

    6 FUNCTION_DECLARATION: TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS T_SEMICOLON .

    $default  reduce using rule 6 (FUNCTION_DECLARATION)


State 26

    9 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE
    9      | T_L_BRACE . MULTIPLE_STATEMENTS T_R_BRACE
   10      | . T_L_BRACE T_R_BRACE
   10      | T_L_BRACE . T_R_BRACE
   11 MULTIPLE_STATEMENTS: . SINGLE_STATEMENT MULTIPLE_STATEMENTS
   12                    | . SINGLE_STATEMENT
   13 SINGLE_STATEMENT: . SCOPE
   14                 | . EXPRESSION_STATEMENT
   15                 | . JUMP_STATEMENT
   16                 | . ITERATION_STATEMENT
   17 ITERATION_STATEMENT: . T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT
   18                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT
   19 JUMP_STATEMENT: . T_RETURN T_SEMICOLON
   20               | . T_RETURN EXPRESSION T_SEMICOLON
   21 EXPRESSION_STATEMENT: . EXPRESSION T_SEMICOLON
   22 EXPRESSION: . VARIABLE_DECLARATION
   23           | . ASSIGNMENT_STATEMENT
   24           | . MATH_OR_BITWISE_EXPRESSION
   25 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT
   26 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION
   27                     | . DECLARATOR
   28 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION
   29 PRIMARY_EXPRESSION: . T_INT_CONST
   30 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION
   31 UNARY_EXPRESSION: . POSTFIX_EXPRESSION
   32 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION
   33 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION
   34 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION
   35 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION
   36 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION
   37 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION
   38 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION
   39 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION
   40 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION
   41 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION
   42 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION
   43 DECLARATOR: . T_IDENTIFIER
   44           | . T_MULT T_IDENTIFIER
   45 TYPE_SPECIFIER: . T_VOID
   46               | . T_CHAR
   47               | . T_SHORT
   48               | . T_INT
   49               | . T_LONG
   50               | . T_FLOAT
   51               | . T_DOUBLE
   52               | . T_SIGNED
   53               | . T_UNSIGNED

    T_CHAR        shift, and go to state 1
    T_DOUBLE      shift, and go to state 2
    T_FLOAT       shift, and go to state 3
    T_FOR         shift, and go to state 28
    T_INT         shift, and go to state 4
    T_LONG        shift, and go to state 5
    T_RETURN      shift, and go to state 29
    T_SHORT       shift, and go to state 6
    T_SIGNED      shift, and go to state 7
    T_UNSIGNED    shift, and go to state 8
    T_VOID        shift, and go to state 9
    T_WHILE       shift, and go to state 30
    T_MULT        shift, and go to state 18
    T_L_BRACE     shift, and go to state 26
    T_R_BRACE     shift, and go to state 31
    T_IDENTIFIER  shift, and go to state 19
    T_INT_CONST   shift, and go to state 32

    SCOPE                       go to state 33
    MULTIPLE_STATEMENTS         go to state 34
    SINGLE_STATEMENT            go to state 35
    ITERATION_STATEMENT         go to state 36
    JUMP_STATEMENT              go to state 37
    EXPRESSION_STATEMENT        go to state 38
    EXPRESSION                  go to state 39
    VARIABLE_DECLARATION        go to state 40
    ASSIGNMENT_STATEMENT        go to state 41
    MATH_OR_BITWISE_EXPRESSION  go to state 42
    PRIMARY_EXPRESSION          go to state 43
    POSTFIX_EXPRESSION          go to state 44
    UNARY_EXPRESSION            go to state 45
    MULTIPLICATIVE_EXPRESSION   go to state 46
    ADDITIVE_EXPRESSION         go to state 47
    SHIFT_EXPRESSION            go to state 48
    RELATIONAL_EXPRESSION       go to state 49
    EQUALITY_EXPRESSION         go to state 50
    BITWISE_AND_EXPRESSION      go to state 51
    BITWISE_XOR_EXPRESSION      go to state 52
    BITWISE_OR_EXPRESSION       go to state 53
    BOOLEAN_AND_EXPRESSION      go to state 54
    BOOLEAN_OR_EXPRESSION       go to state 55
    CONDITIONAL_EXPRESSION      go to state 56
    DECLARATOR                  go to state 57
    TYPE_SPECIFIER              go to state 58


State 27

    7 FUNCTION_DEFINITION: TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS SCOPE .

    $default  reduce using rule 7 (FUNCTION_DEFINITION)


State 28

   18 ITERATION_STATEMENT: T_FOR . T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT

    T_L_PARENTHESIS  shift, and go to state 59


State 29

   19 JUMP_STATEMENT: T_RETURN . T_SEMICOLON
   20               | T_RETURN . EXPRESSION T_SEMICOLON
   22 EXPRESSION: . VARIABLE_DECLARATION
   23           | . ASSIGNMENT_STATEMENT
   24           | . MATH_OR_BITWISE_EXPRESSION
   25 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT
   26 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION
   27                     | . DECLARATOR
   28 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION
   29 PRIMARY_EXPRESSION: . T_INT_CONST
   30 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION
   31 UNARY_EXPRESSION: . POSTFIX_EXPRESSION
   32 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION
   33 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION
   34 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION
   35 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION
   36 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION
   37 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION
   38 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION
   39 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION
   40 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION
   41 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION
   42 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION
   43 DECLARATOR: . T_IDENTIFIER
   44           | . T_MULT T_IDENTIFIER
   45 TYPE_SPECIFIER: . T_VOID
   46               | . T_CHAR
   47               | . T_SHORT
   48               | . T_INT
   49               | . T_LONG
   50               | . T_FLOAT
   51               | . T_DOUBLE
   52               | . T_SIGNED
   53               | . T_UNSIGNED

    T_CHAR        shift, and go to state 1
    T_DOUBLE      shift, and go to state 2
    T_FLOAT       shift, and go to state 3
    T_INT         shift, and go to state 4
    T_LONG        shift, and go to state 5
    T_SHORT       shift, and go to state 6
    T_SIGNED      shift, and go to state 7
    T_UNSIGNED    shift, and go to state 8
    T_VOID        shift, and go to state 9
    T_MULT        shift, and go to state 18
    T_SEMICOLON   shift, and go to state 60
    T_IDENTIFIER  shift, and go to state 19
    T_INT_CONST   shift, and go to state 32

    EXPRESSION                  go to state 61
    VARIABLE_DECLARATION        go to state 40
    ASSIGNMENT_STATEMENT        go to state 41
    MATH_OR_BITWISE_EXPRESSION  go to state 42
    PRIMARY_EXPRESSION          go to state 43
    POSTFIX_EXPRESSION          go to state 44
    UNARY_EXPRESSION            go to state 45
    MULTIPLICATIVE_EXPRESSION   go to state 46
    ADDITIVE_EXPRESSION         go to state 47
    SHIFT_EXPRESSION            go to state 48
    RELATIONAL_EXPRESSION       go to state 49
    EQUALITY_EXPRESSION         go to state 50
    BITWISE_AND_EXPRESSION      go to state 51
    BITWISE_XOR_EXPRESSION      go to state 52
    BITWISE_OR_EXPRESSION       go to state 53
    BOOLEAN_AND_EXPRESSION      go to state 54
    BOOLEAN_OR_EXPRESSION       go to state 55
    CONDITIONAL_EXPRESSION      go to state 56
    DECLARATOR                  go to state 57
    TYPE_SPECIFIER              go to state 58


State 30

   17 ITERATION_STATEMENT: T_WHILE . T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT

    T_L_PARENTHESIS  shift, and go to state 62


State 31

   10 SCOPE: T_L_BRACE T_R_BRACE .

    $default  reduce using rule 10 (SCOPE)


State 32

   29 PRIMARY_EXPRESSION: T_INT_CONST .

    $default  reduce using rule 29 (PRIMARY_EXPRESSION)


State 33

   13 SINGLE_STATEMENT: SCOPE .

    $default  reduce using rule 13 (SINGLE_STATEMENT)


State 34

    9 SCOPE: T_L_BRACE MULTIPLE_STATEMENTS . T_R_BRACE

    T_R_BRACE  shift, and go to state 63


State 35

    9 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE
   10      | . T_L_BRACE T_R_BRACE
   11 MULTIPLE_STATEMENTS: . SINGLE_STATEMENT MULTIPLE_STATEMENTS
   11                    | SINGLE_STATEMENT . MULTIPLE_STATEMENTS
   12                    | . SINGLE_STATEMENT
   12                    | SINGLE_STATEMENT .  [T_R_BRACE]
   13 SINGLE_STATEMENT: . SCOPE
   14                 | . EXPRESSION_STATEMENT
   15                 | . JUMP_STATEMENT
   16                 | . ITERATION_STATEMENT
   17 ITERATION_STATEMENT: . T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT
   18                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT
   19 JUMP_STATEMENT: . T_RETURN T_SEMICOLON
   20               | . T_RETURN EXPRESSION T_SEMICOLON
   21 EXPRESSION_STATEMENT: . EXPRESSION T_SEMICOLON
   22 EXPRESSION: . VARIABLE_DECLARATION
   23           | . ASSIGNMENT_STATEMENT
   24           | . MATH_OR_BITWISE_EXPRESSION
   25 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT
   26 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION
   27                     | . DECLARATOR
   28 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION
   29 PRIMARY_EXPRESSION: . T_INT_CONST
   30 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION
   31 UNARY_EXPRESSION: . POSTFIX_EXPRESSION
   32 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION
   33 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION
   34 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION
   35 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION
   36 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION
   37 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION
   38 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION
   39 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION
   40 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION
   41 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION
   42 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION
   43 DECLARATOR: . T_IDENTIFIER
   44           | . T_MULT T_IDENTIFIER
   45 TYPE_SPECIFIER: . T_VOID
   46               | . T_CHAR
   47               | . T_SHORT
   48               | . T_INT
   49               | . T_LONG
   50               | . T_FLOAT
   51               | . T_DOUBLE
   52               | . T_SIGNED
   53               | . T_UNSIGNED

    T_CHAR        shift, and go to state 1
    T_DOUBLE      shift, and go to state 2
    T_FLOAT       shift, and go to state 3
    T_FOR         shift, and go to state 28
    T_INT         shift, and go to state 4
    T_LONG        shift, and go to state 5
    T_RETURN      shift, and go to state 29
    T_SHORT       shift, and go to state 6
    T_SIGNED      shift, and go to state 7
    T_UNSIGNED    shift, and go to state 8
    T_VOID        shift, and go to state 9
    T_WHILE       shift, and go to state 30
    T_MULT        shift, and go to state 18
    T_L_BRACE     shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 19
    T_INT_CONST   shift, and go to state 32

    $default  reduce using rule 12 (MULTIPLE_STATEMENTS)

    SCOPE                       go to state 33
    MULTIPLE_STATEMENTS         go to state 64
    SINGLE_STATEMENT            go to state 35
    ITERATION_STATEMENT         go to state 36
    JUMP_STATEMENT              go to state 37
    EXPRESSION_STATEMENT        go to state 38
    EXPRESSION                  go to state 39
    VARIABLE_DECLARATION        go to state 40
    ASSIGNMENT_STATEMENT        go to state 41
    MATH_OR_BITWISE_EXPRESSION  go to state 42
    PRIMARY_EXPRESSION          go to state 43
    POSTFIX_EXPRESSION          go to state 44
    UNARY_EXPRESSION            go to state 45
    MULTIPLICATIVE_EXPRESSION   go to state 46
    ADDITIVE_EXPRESSION         go to state 47
    SHIFT_EXPRESSION            go to state 48
    RELATIONAL_EXPRESSION       go to state 49
    EQUALITY_EXPRESSION         go to state 50
    BITWISE_AND_EXPRESSION      go to state 51
    BITWISE_XOR_EXPRESSION      go to state 52
    BITWISE_OR_EXPRESSION       go to state 53
    BOOLEAN_AND_EXPRESSION      go to state 54
    BOOLEAN_OR_EXPRESSION       go to state 55
    CONDITIONAL_EXPRESSION      go to state 56
    DECLARATOR                  go to state 57
    TYPE_SPECIFIER              go to state 58


State 36

   16 SINGLE_STATEMENT: ITERATION_STATEMENT .

    $default  reduce using rule 16 (SINGLE_STATEMENT)


State 37

   15 SINGLE_STATEMENT: JUMP_STATEMENT .

    $default  reduce using rule 15 (SINGLE_STATEMENT)


State 38

   14 SINGLE_STATEMENT: EXPRESSION_STATEMENT .

    $default  reduce using rule 14 (SINGLE_STATEMENT)


State 39

   21 EXPRESSION_STATEMENT: EXPRESSION . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 65


State 40

   22 EXPRESSION: VARIABLE_DECLARATION .

    $default  reduce using rule 22 (EXPRESSION)


State 41

   23 EXPRESSION: ASSIGNMENT_STATEMENT .

    $default  reduce using rule 23 (EXPRESSION)


State 42

   24 EXPRESSION: MATH_OR_BITWISE_EXPRESSION .

    $default  reduce using rule 24 (EXPRESSION)


State 43

   30 POSTFIX_EXPRESSION: PRIMARY_EXPRESSION .

    $default  reduce using rule 30 (POSTFIX_EXPRESSION)


State 44

   31 UNARY_EXPRESSION: POSTFIX_EXPRESSION .

    $default  reduce using rule 31 (UNARY_EXPRESSION)


State 45

   32 MULTIPLICATIVE_EXPRESSION: UNARY_EXPRESSION .

    $default  reduce using rule 32 (MULTIPLICATIVE_EXPRESSION)


State 46

   33 ADDITIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION .

    $default  reduce using rule 33 (ADDITIVE_EXPRESSION)


State 47

   34 SHIFT_EXPRESSION: ADDITIVE_EXPRESSION .

    $default  reduce using rule 34 (SHIFT_EXPRESSION)


State 48

   35 RELATIONAL_EXPRESSION: SHIFT_EXPRESSION .

    $default  reduce using rule 35 (RELATIONAL_EXPRESSION)


State 49

   36 EQUALITY_EXPRESSION: RELATIONAL_EXPRESSION .

    $default  reduce using rule 36 (EQUALITY_EXPRESSION)


State 50

   37 BITWISE_AND_EXPRESSION: EQUALITY_EXPRESSION .

    $default  reduce using rule 37 (BITWISE_AND_EXPRESSION)


State 51

   38 BITWISE_XOR_EXPRESSION: BITWISE_AND_EXPRESSION .

    $default  reduce using rule 38 (BITWISE_XOR_EXPRESSION)


State 52

   39 BITWISE_OR_EXPRESSION: BITWISE_XOR_EXPRESSION .

    $default  reduce using rule 39 (BITWISE_OR_EXPRESSION)


State 53

   40 BOOLEAN_AND_EXPRESSION: BITWISE_OR_EXPRESSION .

    $default  reduce using rule 40 (BOOLEAN_AND_EXPRESSION)


State 54

   41 BOOLEAN_OR_EXPRESSION: BOOLEAN_AND_EXPRESSION .

    $default  reduce using rule 41 (BOOLEAN_OR_EXPRESSION)


State 55

   42 CONDITIONAL_EXPRESSION: BOOLEAN_OR_EXPRESSION .

    $default  reduce using rule 42 (CONDITIONAL_EXPRESSION)


State 56

   28 MATH_OR_BITWISE_EXPRESSION: CONDITIONAL_EXPRESSION .

    $default  reduce using rule 28 (MATH_OR_BITWISE_EXPRESSION)


State 57

   26 ASSIGNMENT_STATEMENT: DECLARATOR . T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION
   27                     | DECLARATOR .  [T_SEMICOLON, T_R_PARENTHESIS]

    T_EQ_ASSIGN  shift, and go to state 66

    $default  reduce using rule 27 (ASSIGNMENT_STATEMENT)


State 58

   25 VARIABLE_DECLARATION: TYPE_SPECIFIER . ASSIGNMENT_STATEMENT
   26 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION
   27                     | . DECLARATOR
   43 DECLARATOR: . T_IDENTIFIER
   44           | . T_MULT T_IDENTIFIER

    T_MULT        shift, and go to state 18
    T_IDENTIFIER  shift, and go to state 19

    ASSIGNMENT_STATEMENT  go to state 67
    DECLARATOR            go to state 57


State 59

   18 ITERATION_STATEMENT: T_FOR T_L_PARENTHESIS . EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT
   21 EXPRESSION_STATEMENT: . EXPRESSION T_SEMICOLON
   22 EXPRESSION: . VARIABLE_DECLARATION
   23           | . ASSIGNMENT_STATEMENT
   24           | . MATH_OR_BITWISE_EXPRESSION
   25 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT
   26 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION
   27                     | . DECLARATOR
   28 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION
   29 PRIMARY_EXPRESSION: . T_INT_CONST
   30 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION
   31 UNARY_EXPRESSION: . POSTFIX_EXPRESSION
   32 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION
   33 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION
   34 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION
   35 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION
   36 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION
   37 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION
   38 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION
   39 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION
   40 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION
   41 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION
   42 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION
   43 DECLARATOR: . T_IDENTIFIER
   44           | . T_MULT T_IDENTIFIER
   45 TYPE_SPECIFIER: . T_VOID
   46               | . T_CHAR
   47               | . T_SHORT
   48               | . T_INT
   49               | . T_LONG
   50               | . T_FLOAT
   51               | . T_DOUBLE
   52               | . T_SIGNED
   53               | . T_UNSIGNED

    T_CHAR        shift, and go to state 1
    T_DOUBLE      shift, and go to state 2
    T_FLOAT       shift, and go to state 3
    T_INT         shift, and go to state 4
    T_LONG        shift, and go to state 5
    T_SHORT       shift, and go to state 6
    T_SIGNED      shift, and go to state 7
    T_UNSIGNED    shift, and go to state 8
    T_VOID        shift, and go to state 9
    T_MULT        shift, and go to state 18
    T_IDENTIFIER  shift, and go to state 19
    T_INT_CONST   shift, and go to state 32

    EXPRESSION_STATEMENT        go to state 68
    EXPRESSION                  go to state 39
    VARIABLE_DECLARATION        go to state 40
    ASSIGNMENT_STATEMENT        go to state 41
    MATH_OR_BITWISE_EXPRESSION  go to state 42
    PRIMARY_EXPRESSION          go to state 43
    POSTFIX_EXPRESSION          go to state 44
    UNARY_EXPRESSION            go to state 45
    MULTIPLICATIVE_EXPRESSION   go to state 46
    ADDITIVE_EXPRESSION         go to state 47
    SHIFT_EXPRESSION            go to state 48
    RELATIONAL_EXPRESSION       go to state 49
    EQUALITY_EXPRESSION         go to state 50
    BITWISE_AND_EXPRESSION      go to state 51
    BITWISE_XOR_EXPRESSION      go to state 52
    BITWISE_OR_EXPRESSION       go to state 53
    BOOLEAN_AND_EXPRESSION      go to state 54
    BOOLEAN_OR_EXPRESSION       go to state 55
    CONDITIONAL_EXPRESSION      go to state 56
    DECLARATOR                  go to state 57
    TYPE_SPECIFIER              go to state 58


State 60

   19 JUMP_STATEMENT: T_RETURN T_SEMICOLON .

    $default  reduce using rule 19 (JUMP_STATEMENT)


State 61

   20 JUMP_STATEMENT: T_RETURN EXPRESSION . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 69


State 62

   17 ITERATION_STATEMENT: T_WHILE T_L_PARENTHESIS . EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT
   22 EXPRESSION: . VARIABLE_DECLARATION
   23           | . ASSIGNMENT_STATEMENT
   24           | . MATH_OR_BITWISE_EXPRESSION
   25 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT
   26 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION
   27                     | . DECLARATOR
   28 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION
   29 PRIMARY_EXPRESSION: . T_INT_CONST
   30 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION
   31 UNARY_EXPRESSION: . POSTFIX_EXPRESSION
   32 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION
   33 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION
   34 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION
   35 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION
   36 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION
   37 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION
   38 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION
   39 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION
   40 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION
   41 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION
   42 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION
   43 DECLARATOR: . T_IDENTIFIER
   44           | . T_MULT T_IDENTIFIER
   45 TYPE_SPECIFIER: . T_VOID
   46               | . T_CHAR
   47               | . T_SHORT
   48               | . T_INT
   49               | . T_LONG
   50               | . T_FLOAT
   51               | . T_DOUBLE
   52               | . T_SIGNED
   53               | . T_UNSIGNED

    T_CHAR        shift, and go to state 1
    T_DOUBLE      shift, and go to state 2
    T_FLOAT       shift, and go to state 3
    T_INT         shift, and go to state 4
    T_LONG        shift, and go to state 5
    T_SHORT       shift, and go to state 6
    T_SIGNED      shift, and go to state 7
    T_UNSIGNED    shift, and go to state 8
    T_VOID        shift, and go to state 9
    T_MULT        shift, and go to state 18
    T_IDENTIFIER  shift, and go to state 19
    T_INT_CONST   shift, and go to state 32

    EXPRESSION                  go to state 70
    VARIABLE_DECLARATION        go to state 40
    ASSIGNMENT_STATEMENT        go to state 41
    MATH_OR_BITWISE_EXPRESSION  go to state 42
    PRIMARY_EXPRESSION          go to state 43
    POSTFIX_EXPRESSION          go to state 44
    UNARY_EXPRESSION            go to state 45
    MULTIPLICATIVE_EXPRESSION   go to state 46
    ADDITIVE_EXPRESSION         go to state 47
    SHIFT_EXPRESSION            go to state 48
    RELATIONAL_EXPRESSION       go to state 49
    EQUALITY_EXPRESSION         go to state 50
    BITWISE_AND_EXPRESSION      go to state 51
    BITWISE_XOR_EXPRESSION      go to state 52
    BITWISE_OR_EXPRESSION       go to state 53
    BOOLEAN_AND_EXPRESSION      go to state 54
    BOOLEAN_OR_EXPRESSION       go to state 55
    CONDITIONAL_EXPRESSION      go to state 56
    DECLARATOR                  go to state 57
    TYPE_SPECIFIER              go to state 58


State 63

    9 SCOPE: T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE .

    $default  reduce using rule 9 (SCOPE)


State 64

   11 MULTIPLE_STATEMENTS: SINGLE_STATEMENT MULTIPLE_STATEMENTS .

    $default  reduce using rule 11 (MULTIPLE_STATEMENTS)


State 65

   21 EXPRESSION_STATEMENT: EXPRESSION T_SEMICOLON .

    $default  reduce using rule 21 (EXPRESSION_STATEMENT)


State 66

   26 ASSIGNMENT_STATEMENT: DECLARATOR T_EQ_ASSIGN . MATH_OR_BITWISE_EXPRESSION
   28 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION
   29 PRIMARY_EXPRESSION: . T_INT_CONST
   30 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION
   31 UNARY_EXPRESSION: . POSTFIX_EXPRESSION
   32 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION
   33 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION
   34 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION
   35 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION
   36 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION
   37 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION
   38 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION
   39 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION
   40 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION
   41 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION
   42 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION

    T_INT_CONST  shift, and go to state 32

    MATH_OR_BITWISE_EXPRESSION  go to state 71
    PRIMARY_EXPRESSION          go to state 43
    POSTFIX_EXPRESSION          go to state 44
    UNARY_EXPRESSION            go to state 45
    MULTIPLICATIVE_EXPRESSION   go to state 46
    ADDITIVE_EXPRESSION         go to state 47
    SHIFT_EXPRESSION            go to state 48
    RELATIONAL_EXPRESSION       go to state 49
    EQUALITY_EXPRESSION         go to state 50
    BITWISE_AND_EXPRESSION      go to state 51
    BITWISE_XOR_EXPRESSION      go to state 52
    BITWISE_OR_EXPRESSION       go to state 53
    BOOLEAN_AND_EXPRESSION      go to state 54
    BOOLEAN_OR_EXPRESSION       go to state 55
    CONDITIONAL_EXPRESSION      go to state 56


State 67

   25 VARIABLE_DECLARATION: TYPE_SPECIFIER ASSIGNMENT_STATEMENT .

    $default  reduce using rule 25 (VARIABLE_DECLARATION)


State 68

   18 ITERATION_STATEMENT: T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT . EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT
   21 EXPRESSION_STATEMENT: . EXPRESSION T_SEMICOLON
   22 EXPRESSION: . VARIABLE_DECLARATION
   23           | . ASSIGNMENT_STATEMENT
   24           | . MATH_OR_BITWISE_EXPRESSION
   25 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT
   26 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION
   27                     | . DECLARATOR
   28 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION
   29 PRIMARY_EXPRESSION: . T_INT_CONST
   30 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION
   31 UNARY_EXPRESSION: . POSTFIX_EXPRESSION
   32 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION
   33 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION
   34 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION
   35 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION
   36 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION
   37 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION
   38 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION
   39 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION
   40 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION
   41 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION
   42 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION
   43 DECLARATOR: . T_IDENTIFIER
   44           | . T_MULT T_IDENTIFIER
   45 TYPE_SPECIFIER: . T_VOID
   46               | . T_CHAR
   47               | . T_SHORT
   48               | . T_INT
   49               | . T_LONG
   50               | . T_FLOAT
   51               | . T_DOUBLE
   52               | . T_SIGNED
   53               | . T_UNSIGNED

    T_CHAR        shift, and go to state 1
    T_DOUBLE      shift, and go to state 2
    T_FLOAT       shift, and go to state 3
    T_INT         shift, and go to state 4
    T_LONG        shift, and go to state 5
    T_SHORT       shift, and go to state 6
    T_SIGNED      shift, and go to state 7
    T_UNSIGNED    shift, and go to state 8
    T_VOID        shift, and go to state 9
    T_MULT        shift, and go to state 18
    T_IDENTIFIER  shift, and go to state 19
    T_INT_CONST   shift, and go to state 32

    EXPRESSION_STATEMENT        go to state 72
    EXPRESSION                  go to state 39
    VARIABLE_DECLARATION        go to state 40
    ASSIGNMENT_STATEMENT        go to state 41
    MATH_OR_BITWISE_EXPRESSION  go to state 42
    PRIMARY_EXPRESSION          go to state 43
    POSTFIX_EXPRESSION          go to state 44
    UNARY_EXPRESSION            go to state 45
    MULTIPLICATIVE_EXPRESSION   go to state 46
    ADDITIVE_EXPRESSION         go to state 47
    SHIFT_EXPRESSION            go to state 48
    RELATIONAL_EXPRESSION       go to state 49
    EQUALITY_EXPRESSION         go to state 50
    BITWISE_AND_EXPRESSION      go to state 51
    BITWISE_XOR_EXPRESSION      go to state 52
    BITWISE_OR_EXPRESSION       go to state 53
    BOOLEAN_AND_EXPRESSION      go to state 54
    BOOLEAN_OR_EXPRESSION       go to state 55
    CONDITIONAL_EXPRESSION      go to state 56
    DECLARATOR                  go to state 57
    TYPE_SPECIFIER              go to state 58


State 69

   20 JUMP_STATEMENT: T_RETURN EXPRESSION T_SEMICOLON .

    $default  reduce using rule 20 (JUMP_STATEMENT)


State 70

   17 ITERATION_STATEMENT: T_WHILE T_L_PARENTHESIS EXPRESSION . T_R_PARENTHESIS SINGLE_STATEMENT

    T_R_PARENTHESIS  shift, and go to state 73


State 71

   26 ASSIGNMENT_STATEMENT: DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION .

    $default  reduce using rule 26 (ASSIGNMENT_STATEMENT)


State 72

   18 ITERATION_STATEMENT: T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT . EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT
   22 EXPRESSION: . VARIABLE_DECLARATION
   23           | . ASSIGNMENT_STATEMENT
   24           | . MATH_OR_BITWISE_EXPRESSION
   25 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT
   26 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION
   27                     | . DECLARATOR
   28 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION
   29 PRIMARY_EXPRESSION: . T_INT_CONST
   30 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION
   31 UNARY_EXPRESSION: . POSTFIX_EXPRESSION
   32 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION
   33 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION
   34 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION
   35 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION
   36 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION
   37 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION
   38 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION
   39 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION
   40 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION
   41 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION
   42 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION
   43 DECLARATOR: . T_IDENTIFIER
   44           | . T_MULT T_IDENTIFIER
   45 TYPE_SPECIFIER: . T_VOID
   46               | . T_CHAR
   47               | . T_SHORT
   48               | . T_INT
   49               | . T_LONG
   50               | . T_FLOAT
   51               | . T_DOUBLE
   52               | . T_SIGNED
   53               | . T_UNSIGNED

    T_CHAR        shift, and go to state 1
    T_DOUBLE      shift, and go to state 2
    T_FLOAT       shift, and go to state 3
    T_INT         shift, and go to state 4
    T_LONG        shift, and go to state 5
    T_SHORT       shift, and go to state 6
    T_SIGNED      shift, and go to state 7
    T_UNSIGNED    shift, and go to state 8
    T_VOID        shift, and go to state 9
    T_MULT        shift, and go to state 18
    T_IDENTIFIER  shift, and go to state 19
    T_INT_CONST   shift, and go to state 32

    EXPRESSION                  go to state 74
    VARIABLE_DECLARATION        go to state 40
    ASSIGNMENT_STATEMENT        go to state 41
    MATH_OR_BITWISE_EXPRESSION  go to state 42
    PRIMARY_EXPRESSION          go to state 43
    POSTFIX_EXPRESSION          go to state 44
    UNARY_EXPRESSION            go to state 45
    MULTIPLICATIVE_EXPRESSION   go to state 46
    ADDITIVE_EXPRESSION         go to state 47
    SHIFT_EXPRESSION            go to state 48
    RELATIONAL_EXPRESSION       go to state 49
    EQUALITY_EXPRESSION         go to state 50
    BITWISE_AND_EXPRESSION      go to state 51
    BITWISE_XOR_EXPRESSION      go to state 52
    BITWISE_OR_EXPRESSION       go to state 53
    BOOLEAN_AND_EXPRESSION      go to state 54
    BOOLEAN_OR_EXPRESSION       go to state 55
    CONDITIONAL_EXPRESSION      go to state 56
    DECLARATOR                  go to state 57
    TYPE_SPECIFIER              go to state 58


State 73

    9 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE
   10      | . T_L_BRACE T_R_BRACE
   13 SINGLE_STATEMENT: . SCOPE
   14                 | . EXPRESSION_STATEMENT
   15                 | . JUMP_STATEMENT
   16                 | . ITERATION_STATEMENT
   17 ITERATION_STATEMENT: . T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT
   17                    | T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS . SINGLE_STATEMENT
   18                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT
   19 JUMP_STATEMENT: . T_RETURN T_SEMICOLON
   20               | . T_RETURN EXPRESSION T_SEMICOLON
   21 EXPRESSION_STATEMENT: . EXPRESSION T_SEMICOLON
   22 EXPRESSION: . VARIABLE_DECLARATION
   23           | . ASSIGNMENT_STATEMENT
   24           | . MATH_OR_BITWISE_EXPRESSION
   25 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT
   26 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION
   27                     | . DECLARATOR
   28 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION
   29 PRIMARY_EXPRESSION: . T_INT_CONST
   30 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION
   31 UNARY_EXPRESSION: . POSTFIX_EXPRESSION
   32 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION
   33 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION
   34 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION
   35 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION
   36 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION
   37 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION
   38 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION
   39 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION
   40 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION
   41 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION
   42 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION
   43 DECLARATOR: . T_IDENTIFIER
   44           | . T_MULT T_IDENTIFIER
   45 TYPE_SPECIFIER: . T_VOID
   46               | . T_CHAR
   47               | . T_SHORT
   48               | . T_INT
   49               | . T_LONG
   50               | . T_FLOAT
   51               | . T_DOUBLE
   52               | . T_SIGNED
   53               | . T_UNSIGNED

    T_CHAR        shift, and go to state 1
    T_DOUBLE      shift, and go to state 2
    T_FLOAT       shift, and go to state 3
    T_FOR         shift, and go to state 28
    T_INT         shift, and go to state 4
    T_LONG        shift, and go to state 5
    T_RETURN      shift, and go to state 29
    T_SHORT       shift, and go to state 6
    T_SIGNED      shift, and go to state 7
    T_UNSIGNED    shift, and go to state 8
    T_VOID        shift, and go to state 9
    T_WHILE       shift, and go to state 30
    T_MULT        shift, and go to state 18
    T_L_BRACE     shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 19
    T_INT_CONST   shift, and go to state 32

    SCOPE                       go to state 33
    SINGLE_STATEMENT            go to state 75
    ITERATION_STATEMENT         go to state 36
    JUMP_STATEMENT              go to state 37
    EXPRESSION_STATEMENT        go to state 38
    EXPRESSION                  go to state 39
    VARIABLE_DECLARATION        go to state 40
    ASSIGNMENT_STATEMENT        go to state 41
    MATH_OR_BITWISE_EXPRESSION  go to state 42
    PRIMARY_EXPRESSION          go to state 43
    POSTFIX_EXPRESSION          go to state 44
    UNARY_EXPRESSION            go to state 45
    MULTIPLICATIVE_EXPRESSION   go to state 46
    ADDITIVE_EXPRESSION         go to state 47
    SHIFT_EXPRESSION            go to state 48
    RELATIONAL_EXPRESSION       go to state 49
    EQUALITY_EXPRESSION         go to state 50
    BITWISE_AND_EXPRESSION      go to state 51
    BITWISE_XOR_EXPRESSION      go to state 52
    BITWISE_OR_EXPRESSION       go to state 53
    BOOLEAN_AND_EXPRESSION      go to state 54
    BOOLEAN_OR_EXPRESSION       go to state 55
    CONDITIONAL_EXPRESSION      go to state 56
    DECLARATOR                  go to state 57
    TYPE_SPECIFIER              go to state 58


State 74

   18 ITERATION_STATEMENT: T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION . T_R_PARENTHESIS SINGLE_STATEMENT

    T_R_PARENTHESIS  shift, and go to state 76


State 75

   17 ITERATION_STATEMENT: T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT .

    $default  reduce using rule 17 (ITERATION_STATEMENT)


State 76

    9 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE
   10      | . T_L_BRACE T_R_BRACE
   13 SINGLE_STATEMENT: . SCOPE
   14                 | . EXPRESSION_STATEMENT
   15                 | . JUMP_STATEMENT
   16                 | . ITERATION_STATEMENT
   17 ITERATION_STATEMENT: . T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT
   18                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT
   18                    | T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS . SINGLE_STATEMENT
   19 JUMP_STATEMENT: . T_RETURN T_SEMICOLON
   20               | . T_RETURN EXPRESSION T_SEMICOLON
   21 EXPRESSION_STATEMENT: . EXPRESSION T_SEMICOLON
   22 EXPRESSION: . VARIABLE_DECLARATION
   23           | . ASSIGNMENT_STATEMENT
   24           | . MATH_OR_BITWISE_EXPRESSION
   25 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT
   26 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION
   27                     | . DECLARATOR
   28 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION
   29 PRIMARY_EXPRESSION: . T_INT_CONST
   30 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION
   31 UNARY_EXPRESSION: . POSTFIX_EXPRESSION
   32 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION
   33 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION
   34 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION
   35 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION
   36 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION
   37 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION
   38 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION
   39 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION
   40 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION
   41 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION
   42 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION
   43 DECLARATOR: . T_IDENTIFIER
   44           | . T_MULT T_IDENTIFIER
   45 TYPE_SPECIFIER: . T_VOID
   46               | . T_CHAR
   47               | . T_SHORT
   48               | . T_INT
   49               | . T_LONG
   50               | . T_FLOAT
   51               | . T_DOUBLE
   52               | . T_SIGNED
   53               | . T_UNSIGNED

    T_CHAR        shift, and go to state 1
    T_DOUBLE      shift, and go to state 2
    T_FLOAT       shift, and go to state 3
    T_FOR         shift, and go to state 28
    T_INT         shift, and go to state 4
    T_LONG        shift, and go to state 5
    T_RETURN      shift, and go to state 29
    T_SHORT       shift, and go to state 6
    T_SIGNED      shift, and go to state 7
    T_UNSIGNED    shift, and go to state 8
    T_VOID        shift, and go to state 9
    T_WHILE       shift, and go to state 30
    T_MULT        shift, and go to state 18
    T_L_BRACE     shift, and go to state 26
    T_IDENTIFIER  shift, and go to state 19
    T_INT_CONST   shift, and go to state 32

    SCOPE                       go to state 33
    SINGLE_STATEMENT            go to state 77
    ITERATION_STATEMENT         go to state 36
    JUMP_STATEMENT              go to state 37
    EXPRESSION_STATEMENT        go to state 38
    EXPRESSION                  go to state 39
    VARIABLE_DECLARATION        go to state 40
    ASSIGNMENT_STATEMENT        go to state 41
    MATH_OR_BITWISE_EXPRESSION  go to state 42
    PRIMARY_EXPRESSION          go to state 43
    POSTFIX_EXPRESSION          go to state 44
    UNARY_EXPRESSION            go to state 45
    MULTIPLICATIVE_EXPRESSION   go to state 46
    ADDITIVE_EXPRESSION         go to state 47
    SHIFT_EXPRESSION            go to state 48
    RELATIONAL_EXPRESSION       go to state 49
    EQUALITY_EXPRESSION         go to state 50
    BITWISE_AND_EXPRESSION      go to state 51
    BITWISE_XOR_EXPRESSION      go to state 52
    BITWISE_OR_EXPRESSION       go to state 53
    BOOLEAN_AND_EXPRESSION      go to state 54
    BOOLEAN_OR_EXPRESSION       go to state 55
    CONDITIONAL_EXPRESSION      go to state 56
    DECLARATOR                  go to state 57
    TYPE_SPECIFIER              go to state 58


State 77

   18 ITERATION_STATEMENT: T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT .

    $default  reduce using rule 18 (ITERATION_STATEMENT)
