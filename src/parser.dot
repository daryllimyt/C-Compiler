// Generated by GNU Bison 3.0.4.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <http://www.gnu.org/software/bison/>.

digraph "src/parser.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: . ROOT $end\l  1 ROOT: . FRAME\l  2 FRAME: . SCOPE\l  3      | . FUNCTION_DEFINITION\l  4      | . FUNCTION_DECLARATION\l  5      | . VARIABLE_DECLARATION T_SEMICOLON\l  6      | . VARIABLE_DECLARATION T_SEMICOLON FRAME\l  7      | . SCOPE FRAME\l  8      | . FUNCTION_DEFINITION FRAME\l  9      | . FUNCTION_DECLARATION FRAME\l 10 FUNCTION_DECLARATION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS T_SEMICOLON\l 11 FUNCTION_DEFINITION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS SCOPE\l 21 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 22      | . T_L_BRACE T_R_BRACE\l 58 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 59 TYPE_SPECIFIER: . T_VOID\l 60               | . T_CHAR\l 61               | . T_SHORT\l 62               | . T_INT\l 63               | . T_LONG\l 64               | . T_FLOAT\l 65               | . T_DOUBLE\l 66               | . T_SIGNED\l 67               | . T_UNSIGNED\l"]
  0 -> 1 [style=solid label="T_CHAR"]
  0 -> 2 [style=solid label="T_DOUBLE"]
  0 -> 3 [style=solid label="T_FLOAT"]
  0 -> 4 [style=solid label="T_INT"]
  0 -> 5 [style=solid label="T_LONG"]
  0 -> 6 [style=solid label="T_SHORT"]
  0 -> 7 [style=solid label="T_SIGNED"]
  0 -> 8 [style=solid label="T_UNSIGNED"]
  0 -> 9 [style=solid label="T_VOID"]
  0 -> 10 [style=solid label="T_L_BRACE"]
  0 -> 11 [style=dashed label="ROOT"]
  0 -> 12 [style=dashed label="FRAME"]
  0 -> 13 [style=dashed label="FUNCTION_DECLARATION"]
  0 -> 14 [style=dashed label="FUNCTION_DEFINITION"]
  0 -> 15 [style=dashed label="SCOPE"]
  0 -> 16 [style=dashed label="VARIABLE_DECLARATION"]
  0 -> 17 [style=dashed label="TYPE_SPECIFIER"]
  1 [label="State 1\n\l 60 TYPE_SPECIFIER: T_CHAR .\l"]
  1 -> "1R60" [style=solid]
 "1R60" [label="R60", fillcolor=3, shape=diamond, style=filled]
  2 [label="State 2\n\l 65 TYPE_SPECIFIER: T_DOUBLE .\l"]
  2 -> "2R65" [style=solid]
 "2R65" [label="R65", fillcolor=3, shape=diamond, style=filled]
  3 [label="State 3\n\l 64 TYPE_SPECIFIER: T_FLOAT .\l"]
  3 -> "3R64" [style=solid]
 "3R64" [label="R64", fillcolor=3, shape=diamond, style=filled]
  4 [label="State 4\n\l 62 TYPE_SPECIFIER: T_INT .\l"]
  4 -> "4R62" [style=solid]
 "4R62" [label="R62", fillcolor=3, shape=diamond, style=filled]
  5 [label="State 5\n\l 63 TYPE_SPECIFIER: T_LONG .\l"]
  5 -> "5R63" [style=solid]
 "5R63" [label="R63", fillcolor=3, shape=diamond, style=filled]
  6 [label="State 6\n\l 61 TYPE_SPECIFIER: T_SHORT .\l"]
  6 -> "6R61" [style=solid]
 "6R61" [label="R61", fillcolor=3, shape=diamond, style=filled]
  7 [label="State 7\n\l 66 TYPE_SPECIFIER: T_SIGNED .\l"]
  7 -> "7R66" [style=solid]
 "7R66" [label="R66", fillcolor=3, shape=diamond, style=filled]
  8 [label="State 8\n\l 67 TYPE_SPECIFIER: T_UNSIGNED .\l"]
  8 -> "8R67" [style=solid]
 "8R67" [label="R67", fillcolor=3, shape=diamond, style=filled]
  9 [label="State 9\n\l 59 TYPE_SPECIFIER: T_VOID .\l"]
  9 -> "9R59" [style=solid]
 "9R59" [label="R59", fillcolor=3, shape=diamond, style=filled]
  10 [label="State 10\n\l 21 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 21      | T_L_BRACE . MULTIPLE_STATEMENTS T_R_BRACE\l 22      | . T_L_BRACE T_R_BRACE\l 22      | T_L_BRACE . T_R_BRACE\l 23 MULTIPLE_STATEMENTS: . SINGLE_STATEMENT MULTIPLE_STATEMENTS\l 24                    | . SINGLE_STATEMENT\l 25 SINGLE_STATEMENT: . SCOPE\l 26                 | . EXPRESSION_STATEMENT\l 27                 | . JUMP_STATEMENT\l 28                 | . ITERATION_STATEMENT\l 29                 | . SELECTION_STATEMENT\l 30 SELECTION_STATEMENT: . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 31                    | . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l 32                    | . T_ELSE SINGLE_STATEMENT\l 33 ITERATION_STATEMENT: . T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 34                    | . T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l 35                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 36 JUMP_STATEMENT: . T_RETURN T_SEMICOLON\l 37               | . T_RETURN EXPRESSION T_SEMICOLON\l 38               | . T_BREAK T_SEMICOLON\l 39               | . T_CONTINUE T_SEMICOLON\l 40 EXPRESSION_STATEMENT: . EXPRESSION T_SEMICOLON\l 41 EXPRESSION: . VARIABLE_DECLARATION\l 42           | . ASSIGNMENT_STATEMENT\l 43           | . MATH_OR_BITWISE_EXPRESSION\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 58 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 59 TYPE_SPECIFIER: . T_VOID\l 60               | . T_CHAR\l 61               | . T_SHORT\l 62               | . T_INT\l 63               | . T_LONG\l 64               | . T_FLOAT\l 65               | . T_DOUBLE\l 66               | . T_SIGNED\l 67               | . T_UNSIGNED\l 68 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l 69                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l 70                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l 71                     | . DECLARATOR\l 72 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l 73                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l108 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l109                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l110                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l111 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l112                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l113 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l114                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l115 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l116                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l117 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l118                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l119 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l120                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l121 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  10 -> 18 [style=solid label="T_BREAK"]
  10 -> 1 [style=solid label="T_CHAR"]
  10 -> 19 [style=solid label="T_CONTINUE"]
  10 -> 20 [style=solid label="T_DO"]
  10 -> 2 [style=solid label="T_DOUBLE"]
  10 -> 21 [style=solid label="T_ELSE"]
  10 -> 3 [style=solid label="T_FLOAT"]
  10 -> 22 [style=solid label="T_FOR"]
  10 -> 23 [style=solid label="T_IF"]
  10 -> 4 [style=solid label="T_INT"]
  10 -> 5 [style=solid label="T_LONG"]
  10 -> 24 [style=solid label="T_RETURN"]
  10 -> 6 [style=solid label="T_SHORT"]
  10 -> 7 [style=solid label="T_SIGNED"]
  10 -> 25 [style=solid label="T_SIZEOF"]
  10 -> 8 [style=solid label="T_UNSIGNED"]
  10 -> 9 [style=solid label="T_VOID"]
  10 -> 26 [style=solid label="T_WHILE"]
  10 -> 27 [style=solid label="T_NOT"]
  10 -> 28 [style=solid label="T_INVERT"]
  10 -> 29 [style=solid label="T_MINUS"]
  10 -> 30 [style=solid label="T_PLUS"]
  10 -> 31 [style=solid label="T_MULT"]
  10 -> 32 [style=solid label="T_INC_OP"]
  10 -> 33 [style=solid label="T_DEC_OP"]
  10 -> 34 [style=solid label="T_AND_OP"]
  10 -> 10 [style=solid label="T_L_BRACE"]
  10 -> 35 [style=solid label="T_R_BRACE"]
  10 -> 36 [style=solid label="T_L_PARENTHESIS"]
  10 -> 37 [style=solid label="T_IDENTIFIER"]
  10 -> 38 [style=solid label="T_INT_CONST"]
  10 -> 39 [style=solid label="T_FLOAT_CONST"]
  10 -> 40 [style=solid label="T_STRING_CONST"]
  10 -> 41 [style=dashed label="SCOPE"]
  10 -> 42 [style=dashed label="MULTIPLE_STATEMENTS"]
  10 -> 43 [style=dashed label="SINGLE_STATEMENT"]
  10 -> 44 [style=dashed label="SELECTION_STATEMENT"]
  10 -> 45 [style=dashed label="ITERATION_STATEMENT"]
  10 -> 46 [style=dashed label="JUMP_STATEMENT"]
  10 -> 47 [style=dashed label="EXPRESSION_STATEMENT"]
  10 -> 48 [style=dashed label="EXPRESSION"]
  10 -> 49 [style=dashed label="DECLARATOR"]
  10 -> 50 [style=dashed label="VARIABLE_DECLARATION"]
  10 -> 51 [style=dashed label="TYPE_SPECIFIER"]
  10 -> 52 [style=dashed label="ASSIGNMENT_STATEMENT"]
  10 -> 53 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  10 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  10 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  10 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  10 -> 57 [style=dashed label="UNARY_OPERATOR"]
  10 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  10 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  10 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  10 -> 61 [style=dashed label="RELATIONAL_EXPRESSION"]
  10 -> 62 [style=dashed label="EQUALITY_EXPRESSION"]
  10 -> 63 [style=dashed label="BITWISE_AND_EXPRESSION"]
  10 -> 64 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  10 -> 65 [style=dashed label="BITWISE_OR_EXPRESSION"]
  10 -> 66 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  10 -> 67 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  10 -> 68 [style=dashed label="CONDITIONAL_EXPRESSION"]
  11 [label="State 11\n\l  0 $accept: ROOT . $end\l"]
  11 -> 69 [style=solid label="$end"]
  12 [label="State 12\n\l  1 ROOT: FRAME .\l"]
  12 -> "12R1" [style=solid]
 "12R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  13 [label="State 13\n\l  2 FRAME: . SCOPE\l  3      | . FUNCTION_DEFINITION\l  4      | . FUNCTION_DECLARATION\l  4      | FUNCTION_DECLARATION .  [$end]\l  5      | . VARIABLE_DECLARATION T_SEMICOLON\l  6      | . VARIABLE_DECLARATION T_SEMICOLON FRAME\l  7      | . SCOPE FRAME\l  8      | . FUNCTION_DEFINITION FRAME\l  9      | . FUNCTION_DECLARATION FRAME\l  9      | FUNCTION_DECLARATION . FRAME\l 10 FUNCTION_DECLARATION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS T_SEMICOLON\l 11 FUNCTION_DEFINITION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS SCOPE\l 21 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 22      | . T_L_BRACE T_R_BRACE\l 58 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 59 TYPE_SPECIFIER: . T_VOID\l 60               | . T_CHAR\l 61               | . T_SHORT\l 62               | . T_INT\l 63               | . T_LONG\l 64               | . T_FLOAT\l 65               | . T_DOUBLE\l 66               | . T_SIGNED\l 67               | . T_UNSIGNED\l"]
  13 -> 1 [style=solid label="T_CHAR"]
  13 -> 2 [style=solid label="T_DOUBLE"]
  13 -> 3 [style=solid label="T_FLOAT"]
  13 -> 4 [style=solid label="T_INT"]
  13 -> 5 [style=solid label="T_LONG"]
  13 -> 6 [style=solid label="T_SHORT"]
  13 -> 7 [style=solid label="T_SIGNED"]
  13 -> 8 [style=solid label="T_UNSIGNED"]
  13 -> 9 [style=solid label="T_VOID"]
  13 -> 10 [style=solid label="T_L_BRACE"]
  13 -> 70 [style=dashed label="FRAME"]
  13 -> 13 [style=dashed label="FUNCTION_DECLARATION"]
  13 -> 14 [style=dashed label="FUNCTION_DEFINITION"]
  13 -> 15 [style=dashed label="SCOPE"]
  13 -> 16 [style=dashed label="VARIABLE_DECLARATION"]
  13 -> 17 [style=dashed label="TYPE_SPECIFIER"]
  13 -> "13R4" [style=solid]
 "13R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  14 [label="State 14\n\l  2 FRAME: . SCOPE\l  3      | . FUNCTION_DEFINITION\l  3      | FUNCTION_DEFINITION .  [$end]\l  4      | . FUNCTION_DECLARATION\l  5      | . VARIABLE_DECLARATION T_SEMICOLON\l  6      | . VARIABLE_DECLARATION T_SEMICOLON FRAME\l  7      | . SCOPE FRAME\l  8      | . FUNCTION_DEFINITION FRAME\l  8      | FUNCTION_DEFINITION . FRAME\l  9      | . FUNCTION_DECLARATION FRAME\l 10 FUNCTION_DECLARATION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS T_SEMICOLON\l 11 FUNCTION_DEFINITION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS SCOPE\l 21 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 22      | . T_L_BRACE T_R_BRACE\l 58 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 59 TYPE_SPECIFIER: . T_VOID\l 60               | . T_CHAR\l 61               | . T_SHORT\l 62               | . T_INT\l 63               | . T_LONG\l 64               | . T_FLOAT\l 65               | . T_DOUBLE\l 66               | . T_SIGNED\l 67               | . T_UNSIGNED\l"]
  14 -> 1 [style=solid label="T_CHAR"]
  14 -> 2 [style=solid label="T_DOUBLE"]
  14 -> 3 [style=solid label="T_FLOAT"]
  14 -> 4 [style=solid label="T_INT"]
  14 -> 5 [style=solid label="T_LONG"]
  14 -> 6 [style=solid label="T_SHORT"]
  14 -> 7 [style=solid label="T_SIGNED"]
  14 -> 8 [style=solid label="T_UNSIGNED"]
  14 -> 9 [style=solid label="T_VOID"]
  14 -> 10 [style=solid label="T_L_BRACE"]
  14 -> 71 [style=dashed label="FRAME"]
  14 -> 13 [style=dashed label="FUNCTION_DECLARATION"]
  14 -> 14 [style=dashed label="FUNCTION_DEFINITION"]
  14 -> 15 [style=dashed label="SCOPE"]
  14 -> 16 [style=dashed label="VARIABLE_DECLARATION"]
  14 -> 17 [style=dashed label="TYPE_SPECIFIER"]
  14 -> "14R3" [style=solid]
 "14R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  15 [label="State 15\n\l  2 FRAME: . SCOPE\l  2      | SCOPE .  [$end]\l  3      | . FUNCTION_DEFINITION\l  4      | . FUNCTION_DECLARATION\l  5      | . VARIABLE_DECLARATION T_SEMICOLON\l  6      | . VARIABLE_DECLARATION T_SEMICOLON FRAME\l  7      | . SCOPE FRAME\l  7      | SCOPE . FRAME\l  8      | . FUNCTION_DEFINITION FRAME\l  9      | . FUNCTION_DECLARATION FRAME\l 10 FUNCTION_DECLARATION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS T_SEMICOLON\l 11 FUNCTION_DEFINITION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS SCOPE\l 21 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 22      | . T_L_BRACE T_R_BRACE\l 58 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 59 TYPE_SPECIFIER: . T_VOID\l 60               | . T_CHAR\l 61               | . T_SHORT\l 62               | . T_INT\l 63               | . T_LONG\l 64               | . T_FLOAT\l 65               | . T_DOUBLE\l 66               | . T_SIGNED\l 67               | . T_UNSIGNED\l"]
  15 -> 1 [style=solid label="T_CHAR"]
  15 -> 2 [style=solid label="T_DOUBLE"]
  15 -> 3 [style=solid label="T_FLOAT"]
  15 -> 4 [style=solid label="T_INT"]
  15 -> 5 [style=solid label="T_LONG"]
  15 -> 6 [style=solid label="T_SHORT"]
  15 -> 7 [style=solid label="T_SIGNED"]
  15 -> 8 [style=solid label="T_UNSIGNED"]
  15 -> 9 [style=solid label="T_VOID"]
  15 -> 10 [style=solid label="T_L_BRACE"]
  15 -> 72 [style=dashed label="FRAME"]
  15 -> 13 [style=dashed label="FUNCTION_DECLARATION"]
  15 -> 14 [style=dashed label="FUNCTION_DEFINITION"]
  15 -> 15 [style=dashed label="SCOPE"]
  15 -> 16 [style=dashed label="VARIABLE_DECLARATION"]
  15 -> 17 [style=dashed label="TYPE_SPECIFIER"]
  15 -> "15R2" [style=solid]
 "15R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  16 [label="State 16\n\l  5 FRAME: VARIABLE_DECLARATION . T_SEMICOLON\l  6      | VARIABLE_DECLARATION . T_SEMICOLON FRAME\l"]
  16 -> 73 [style=solid label="T_SEMICOLON"]
  17 [label="State 17\n\l 10 FUNCTION_DECLARATION: TYPE_SPECIFIER . DECLARATOR WRAPPED_ARGUMENTS T_SEMICOLON\l 11 FUNCTION_DEFINITION: TYPE_SPECIFIER . DECLARATOR WRAPPED_ARGUMENTS SCOPE\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 58 VARIABLE_DECLARATION: TYPE_SPECIFIER . ASSIGNMENT_STATEMENT\l 68 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l 69                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l 70                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l 71                     | . DECLARATOR\l"]
  17 -> 31 [style=solid label="T_MULT"]
  17 -> 37 [style=solid label="T_IDENTIFIER"]
  17 -> 74 [style=dashed label="DECLARATOR"]
  17 -> 75 [style=dashed label="ASSIGNMENT_STATEMENT"]
  18 [label="State 18\n\l 38 JUMP_STATEMENT: T_BREAK . T_SEMICOLON\l"]
  18 -> 76 [style=solid label="T_SEMICOLON"]
  19 [label="State 19\n\l 39 JUMP_STATEMENT: T_CONTINUE . T_SEMICOLON\l"]
  19 -> 77 [style=solid label="T_SEMICOLON"]
  20 [label="State 20\n\l 21 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 22      | . T_L_BRACE T_R_BRACE\l 25 SINGLE_STATEMENT: . SCOPE\l 26                 | . EXPRESSION_STATEMENT\l 27                 | . JUMP_STATEMENT\l 28                 | . ITERATION_STATEMENT\l 29                 | . SELECTION_STATEMENT\l 30 SELECTION_STATEMENT: . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 31                    | . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l 32                    | . T_ELSE SINGLE_STATEMENT\l 33 ITERATION_STATEMENT: . T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 34                    | . T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l 34                    | T_DO . SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l 35                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 36 JUMP_STATEMENT: . T_RETURN T_SEMICOLON\l 37               | . T_RETURN EXPRESSION T_SEMICOLON\l 38               | . T_BREAK T_SEMICOLON\l 39               | . T_CONTINUE T_SEMICOLON\l 40 EXPRESSION_STATEMENT: . EXPRESSION T_SEMICOLON\l 41 EXPRESSION: . VARIABLE_DECLARATION\l 42           | . ASSIGNMENT_STATEMENT\l 43           | . MATH_OR_BITWISE_EXPRESSION\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 58 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 59 TYPE_SPECIFIER: . T_VOID\l 60               | . T_CHAR\l 61               | . T_SHORT\l 62               | . T_INT\l 63               | . T_LONG\l 64               | . T_FLOAT\l 65               | . T_DOUBLE\l 66               | . T_SIGNED\l 67               | . T_UNSIGNED\l 68 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l 69                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l 70                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l 71                     | . DECLARATOR\l 72 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l 73                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l108 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l109                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l110                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l111 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l112                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l113 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l114                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l115 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l116                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l117 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l118                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l119 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l120                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l121 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  20 -> 18 [style=solid label="T_BREAK"]
  20 -> 1 [style=solid label="T_CHAR"]
  20 -> 19 [style=solid label="T_CONTINUE"]
  20 -> 20 [style=solid label="T_DO"]
  20 -> 2 [style=solid label="T_DOUBLE"]
  20 -> 21 [style=solid label="T_ELSE"]
  20 -> 3 [style=solid label="T_FLOAT"]
  20 -> 22 [style=solid label="T_FOR"]
  20 -> 23 [style=solid label="T_IF"]
  20 -> 4 [style=solid label="T_INT"]
  20 -> 5 [style=solid label="T_LONG"]
  20 -> 24 [style=solid label="T_RETURN"]
  20 -> 6 [style=solid label="T_SHORT"]
  20 -> 7 [style=solid label="T_SIGNED"]
  20 -> 25 [style=solid label="T_SIZEOF"]
  20 -> 8 [style=solid label="T_UNSIGNED"]
  20 -> 9 [style=solid label="T_VOID"]
  20 -> 26 [style=solid label="T_WHILE"]
  20 -> 27 [style=solid label="T_NOT"]
  20 -> 28 [style=solid label="T_INVERT"]
  20 -> 29 [style=solid label="T_MINUS"]
  20 -> 30 [style=solid label="T_PLUS"]
  20 -> 31 [style=solid label="T_MULT"]
  20 -> 32 [style=solid label="T_INC_OP"]
  20 -> 33 [style=solid label="T_DEC_OP"]
  20 -> 34 [style=solid label="T_AND_OP"]
  20 -> 10 [style=solid label="T_L_BRACE"]
  20 -> 36 [style=solid label="T_L_PARENTHESIS"]
  20 -> 37 [style=solid label="T_IDENTIFIER"]
  20 -> 38 [style=solid label="T_INT_CONST"]
  20 -> 39 [style=solid label="T_FLOAT_CONST"]
  20 -> 40 [style=solid label="T_STRING_CONST"]
  20 -> 41 [style=dashed label="SCOPE"]
  20 -> 78 [style=dashed label="SINGLE_STATEMENT"]
  20 -> 44 [style=dashed label="SELECTION_STATEMENT"]
  20 -> 45 [style=dashed label="ITERATION_STATEMENT"]
  20 -> 46 [style=dashed label="JUMP_STATEMENT"]
  20 -> 47 [style=dashed label="EXPRESSION_STATEMENT"]
  20 -> 48 [style=dashed label="EXPRESSION"]
  20 -> 49 [style=dashed label="DECLARATOR"]
  20 -> 50 [style=dashed label="VARIABLE_DECLARATION"]
  20 -> 51 [style=dashed label="TYPE_SPECIFIER"]
  20 -> 52 [style=dashed label="ASSIGNMENT_STATEMENT"]
  20 -> 53 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  20 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  20 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  20 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  20 -> 57 [style=dashed label="UNARY_OPERATOR"]
  20 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  20 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  20 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  20 -> 61 [style=dashed label="RELATIONAL_EXPRESSION"]
  20 -> 62 [style=dashed label="EQUALITY_EXPRESSION"]
  20 -> 63 [style=dashed label="BITWISE_AND_EXPRESSION"]
  20 -> 64 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  20 -> 65 [style=dashed label="BITWISE_OR_EXPRESSION"]
  20 -> 66 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  20 -> 67 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  20 -> 68 [style=dashed label="CONDITIONAL_EXPRESSION"]
  21 [label="State 21\n\l 21 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 22      | . T_L_BRACE T_R_BRACE\l 25 SINGLE_STATEMENT: . SCOPE\l 26                 | . EXPRESSION_STATEMENT\l 27                 | . JUMP_STATEMENT\l 28                 | . ITERATION_STATEMENT\l 29                 | . SELECTION_STATEMENT\l 30 SELECTION_STATEMENT: . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 31                    | . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l 32                    | . T_ELSE SINGLE_STATEMENT\l 32                    | T_ELSE . SINGLE_STATEMENT\l 33 ITERATION_STATEMENT: . T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 34                    | . T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l 35                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 36 JUMP_STATEMENT: . T_RETURN T_SEMICOLON\l 37               | . T_RETURN EXPRESSION T_SEMICOLON\l 38               | . T_BREAK T_SEMICOLON\l 39               | . T_CONTINUE T_SEMICOLON\l 40 EXPRESSION_STATEMENT: . EXPRESSION T_SEMICOLON\l 41 EXPRESSION: . VARIABLE_DECLARATION\l 42           | . ASSIGNMENT_STATEMENT\l 43           | . MATH_OR_BITWISE_EXPRESSION\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 58 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 59 TYPE_SPECIFIER: . T_VOID\l 60               | . T_CHAR\l 61               | . T_SHORT\l 62               | . T_INT\l 63               | . T_LONG\l 64               | . T_FLOAT\l 65               | . T_DOUBLE\l 66               | . T_SIGNED\l 67               | . T_UNSIGNED\l 68 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l 69                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l 70                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l 71                     | . DECLARATOR\l 72 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l 73                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l108 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l109                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l110                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l111 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l112                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l113 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l114                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l115 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l116                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l117 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l118                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l119 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l120                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l121 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  21 -> 18 [style=solid label="T_BREAK"]
  21 -> 1 [style=solid label="T_CHAR"]
  21 -> 19 [style=solid label="T_CONTINUE"]
  21 -> 20 [style=solid label="T_DO"]
  21 -> 2 [style=solid label="T_DOUBLE"]
  21 -> 21 [style=solid label="T_ELSE"]
  21 -> 3 [style=solid label="T_FLOAT"]
  21 -> 22 [style=solid label="T_FOR"]
  21 -> 23 [style=solid label="T_IF"]
  21 -> 4 [style=solid label="T_INT"]
  21 -> 5 [style=solid label="T_LONG"]
  21 -> 24 [style=solid label="T_RETURN"]
  21 -> 6 [style=solid label="T_SHORT"]
  21 -> 7 [style=solid label="T_SIGNED"]
  21 -> 25 [style=solid label="T_SIZEOF"]
  21 -> 8 [style=solid label="T_UNSIGNED"]
  21 -> 9 [style=solid label="T_VOID"]
  21 -> 26 [style=solid label="T_WHILE"]
  21 -> 27 [style=solid label="T_NOT"]
  21 -> 28 [style=solid label="T_INVERT"]
  21 -> 29 [style=solid label="T_MINUS"]
  21 -> 30 [style=solid label="T_PLUS"]
  21 -> 31 [style=solid label="T_MULT"]
  21 -> 32 [style=solid label="T_INC_OP"]
  21 -> 33 [style=solid label="T_DEC_OP"]
  21 -> 34 [style=solid label="T_AND_OP"]
  21 -> 10 [style=solid label="T_L_BRACE"]
  21 -> 36 [style=solid label="T_L_PARENTHESIS"]
  21 -> 37 [style=solid label="T_IDENTIFIER"]
  21 -> 38 [style=solid label="T_INT_CONST"]
  21 -> 39 [style=solid label="T_FLOAT_CONST"]
  21 -> 40 [style=solid label="T_STRING_CONST"]
  21 -> 41 [style=dashed label="SCOPE"]
  21 -> 79 [style=dashed label="SINGLE_STATEMENT"]
  21 -> 44 [style=dashed label="SELECTION_STATEMENT"]
  21 -> 45 [style=dashed label="ITERATION_STATEMENT"]
  21 -> 46 [style=dashed label="JUMP_STATEMENT"]
  21 -> 47 [style=dashed label="EXPRESSION_STATEMENT"]
  21 -> 48 [style=dashed label="EXPRESSION"]
  21 -> 49 [style=dashed label="DECLARATOR"]
  21 -> 50 [style=dashed label="VARIABLE_DECLARATION"]
  21 -> 51 [style=dashed label="TYPE_SPECIFIER"]
  21 -> 52 [style=dashed label="ASSIGNMENT_STATEMENT"]
  21 -> 53 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  21 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  21 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  21 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  21 -> 57 [style=dashed label="UNARY_OPERATOR"]
  21 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  21 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  21 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  21 -> 61 [style=dashed label="RELATIONAL_EXPRESSION"]
  21 -> 62 [style=dashed label="EQUALITY_EXPRESSION"]
  21 -> 63 [style=dashed label="BITWISE_AND_EXPRESSION"]
  21 -> 64 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  21 -> 65 [style=dashed label="BITWISE_OR_EXPRESSION"]
  21 -> 66 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  21 -> 67 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  21 -> 68 [style=dashed label="CONDITIONAL_EXPRESSION"]
  22 [label="State 22\n\l 35 ITERATION_STATEMENT: T_FOR . T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l"]
  22 -> 80 [style=solid label="T_L_PARENTHESIS"]
  23 [label="State 23\n\l 30 SELECTION_STATEMENT: T_IF . T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 31                    | T_IF . T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l"]
  23 -> 81 [style=solid label="T_L_PARENTHESIS"]
  24 [label="State 24\n\l 36 JUMP_STATEMENT: T_RETURN . T_SEMICOLON\l 37               | T_RETURN . EXPRESSION T_SEMICOLON\l 41 EXPRESSION: . VARIABLE_DECLARATION\l 42           | . ASSIGNMENT_STATEMENT\l 43           | . MATH_OR_BITWISE_EXPRESSION\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 58 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 59 TYPE_SPECIFIER: . T_VOID\l 60               | . T_CHAR\l 61               | . T_SHORT\l 62               | . T_INT\l 63               | . T_LONG\l 64               | . T_FLOAT\l 65               | . T_DOUBLE\l 66               | . T_SIGNED\l 67               | . T_UNSIGNED\l 68 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l 69                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l 70                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l 71                     | . DECLARATOR\l 72 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l 73                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l108 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l109                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l110                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l111 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l112                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l113 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l114                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l115 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l116                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l117 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l118                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l119 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l120                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l121 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  24 -> 1 [style=solid label="T_CHAR"]
  24 -> 2 [style=solid label="T_DOUBLE"]
  24 -> 3 [style=solid label="T_FLOAT"]
  24 -> 4 [style=solid label="T_INT"]
  24 -> 5 [style=solid label="T_LONG"]
  24 -> 6 [style=solid label="T_SHORT"]
  24 -> 7 [style=solid label="T_SIGNED"]
  24 -> 25 [style=solid label="T_SIZEOF"]
  24 -> 8 [style=solid label="T_UNSIGNED"]
  24 -> 9 [style=solid label="T_VOID"]
  24 -> 27 [style=solid label="T_NOT"]
  24 -> 28 [style=solid label="T_INVERT"]
  24 -> 29 [style=solid label="T_MINUS"]
  24 -> 30 [style=solid label="T_PLUS"]
  24 -> 31 [style=solid label="T_MULT"]
  24 -> 32 [style=solid label="T_INC_OP"]
  24 -> 33 [style=solid label="T_DEC_OP"]
  24 -> 34 [style=solid label="T_AND_OP"]
  24 -> 82 [style=solid label="T_SEMICOLON"]
  24 -> 36 [style=solid label="T_L_PARENTHESIS"]
  24 -> 37 [style=solid label="T_IDENTIFIER"]
  24 -> 38 [style=solid label="T_INT_CONST"]
  24 -> 39 [style=solid label="T_FLOAT_CONST"]
  24 -> 40 [style=solid label="T_STRING_CONST"]
  24 -> 83 [style=dashed label="EXPRESSION"]
  24 -> 49 [style=dashed label="DECLARATOR"]
  24 -> 50 [style=dashed label="VARIABLE_DECLARATION"]
  24 -> 51 [style=dashed label="TYPE_SPECIFIER"]
  24 -> 52 [style=dashed label="ASSIGNMENT_STATEMENT"]
  24 -> 53 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  24 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  24 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  24 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  24 -> 57 [style=dashed label="UNARY_OPERATOR"]
  24 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  24 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  24 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  24 -> 61 [style=dashed label="RELATIONAL_EXPRESSION"]
  24 -> 62 [style=dashed label="EQUALITY_EXPRESSION"]
  24 -> 63 [style=dashed label="BITWISE_AND_EXPRESSION"]
  24 -> 64 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  24 -> 65 [style=dashed label="BITWISE_OR_EXPRESSION"]
  24 -> 66 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  24 -> 67 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  24 -> 68 [style=dashed label="CONDITIONAL_EXPRESSION"]
  25 [label="State 25\n\l 80 PRIMARY_EXPRESSION: T_SIZEOF . T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l"]
  25 -> 84 [style=solid label="T_L_PARENTHESIS"]
  26 [label="State 26\n\l 33 ITERATION_STATEMENT: T_WHILE . T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l"]
  26 -> 85 [style=solid label="T_L_PARENTHESIS"]
  27 [label="State 27\n\l 92 UNARY_OPERATOR: T_NOT .\l"]
  27 -> "27R92" [style=solid]
 "27R92" [label="R92", fillcolor=3, shape=diamond, style=filled]
  28 [label="State 28\n\l 91 UNARY_OPERATOR: T_INVERT .\l"]
  28 -> "28R91" [style=solid]
 "28R91" [label="R91", fillcolor=3, shape=diamond, style=filled]
  29 [label="State 29\n\l 90 UNARY_OPERATOR: T_MINUS .\l"]
  29 -> "29R90" [style=solid]
 "29R90" [label="R90", fillcolor=3, shape=diamond, style=filled]
  30 [label="State 30\n\l 89 UNARY_OPERATOR: T_PLUS .\l"]
  30 -> "30R89" [style=solid]
 "30R89" [label="R89", fillcolor=3, shape=diamond, style=filled]
  31 [label="State 31\n\l 56 DECLARATOR: T_MULT . T_IDENTIFIER\l"]
  31 -> 86 [style=solid label="T_IDENTIFIER"]
  32 [label="State 32\n\l 86 UNARY_OPERATOR: T_INC_OP .\l"]
  32 -> "32R86" [style=solid]
 "32R86" [label="R86", fillcolor=3, shape=diamond, style=filled]
  33 [label="State 33\n\l 87 UNARY_OPERATOR: T_DEC_OP .\l"]
  33 -> "33R87" [style=solid]
 "33R87" [label="R87", fillcolor=3, shape=diamond, style=filled]
  34 [label="State 34\n\l 88 UNARY_OPERATOR: T_AND_OP .\l"]
  34 -> "34R88" [style=solid]
 "34R88" [label="R88", fillcolor=3, shape=diamond, style=filled]
  35 [label="State 35\n\l 22 SCOPE: T_L_BRACE T_R_BRACE .\l"]
  35 -> "35R22" [style=solid]
 "35R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  36 [label="State 36\n\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 72 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l 73                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 78                   | T_L_PARENTHESIS . MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l108 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l109                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l110                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l111 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l112                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l113 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l114                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l115 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l116                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l117 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l118                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l119 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l120                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l121 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  36 -> 25 [style=solid label="T_SIZEOF"]
  36 -> 27 [style=solid label="T_NOT"]
  36 -> 28 [style=solid label="T_INVERT"]
  36 -> 29 [style=solid label="T_MINUS"]
  36 -> 30 [style=solid label="T_PLUS"]
  36 -> 31 [style=solid label="T_MULT"]
  36 -> 32 [style=solid label="T_INC_OP"]
  36 -> 33 [style=solid label="T_DEC_OP"]
  36 -> 34 [style=solid label="T_AND_OP"]
  36 -> 36 [style=solid label="T_L_PARENTHESIS"]
  36 -> 37 [style=solid label="T_IDENTIFIER"]
  36 -> 38 [style=solid label="T_INT_CONST"]
  36 -> 39 [style=solid label="T_FLOAT_CONST"]
  36 -> 40 [style=solid label="T_STRING_CONST"]
  36 -> 87 [style=dashed label="DECLARATOR"]
  36 -> 88 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  36 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  36 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  36 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  36 -> 57 [style=dashed label="UNARY_OPERATOR"]
  36 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  36 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  36 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  36 -> 61 [style=dashed label="RELATIONAL_EXPRESSION"]
  36 -> 62 [style=dashed label="EQUALITY_EXPRESSION"]
  36 -> 63 [style=dashed label="BITWISE_AND_EXPRESSION"]
  36 -> 64 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  36 -> 65 [style=dashed label="BITWISE_OR_EXPRESSION"]
  36 -> 66 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  36 -> 67 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  36 -> 68 [style=dashed label="CONDITIONAL_EXPRESSION"]
  37 [label="State 37\n\l 55 DECLARATOR: T_IDENTIFIER .  [T_AND, T_MINUS, T_PLUS, T_MULT, T_DIV, T_MOD, T_LT, T_GT, T_XOR, T_OR, T_RSHIFT_ASSIGN, T_LSHIFT_ASSIGN, T_ADD_ASSIGN, T_SUB_ASSIGN, T_MUL_ASSIGN, T_DIV_ASSIGN, T_MOD_ASSIGN, T_AND_ASSIGN, T_XOR_ASSIGN, T_OR_ASSIGN, T_EQ_ASSIGN, T_RSHIFT_OP, T_LSHIFT_OP, T_INC_OP, T_DEC_OP, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_L_PARENTHESIS, T_R_PARENTHESIS, T_R_BRACKET]\l 57           | T_IDENTIFIER . T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l"]
  37 -> 89 [style=solid label="T_L_BRACKET"]
  37 -> "37R55" [style=solid]
 "37R55" [label="R55", fillcolor=3, shape=diamond, style=filled]
  38 [label="State 38\n\l 75 PRIMARY_EXPRESSION: T_INT_CONST .\l"]
  38 -> "38R75" [style=solid]
 "38R75" [label="R75", fillcolor=3, shape=diamond, style=filled]
  39 [label="State 39\n\l 76 PRIMARY_EXPRESSION: T_FLOAT_CONST .\l"]
  39 -> "39R76" [style=solid]
 "39R76" [label="R76", fillcolor=3, shape=diamond, style=filled]
  40 [label="State 40\n\l 77 PRIMARY_EXPRESSION: T_STRING_CONST .\l"]
  40 -> "40R77" [style=solid]
 "40R77" [label="R77", fillcolor=3, shape=diamond, style=filled]
  41 [label="State 41\n\l 25 SINGLE_STATEMENT: SCOPE .\l"]
  41 -> "41R25" [style=solid]
 "41R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  42 [label="State 42\n\l 21 SCOPE: T_L_BRACE MULTIPLE_STATEMENTS . T_R_BRACE\l"]
  42 -> 90 [style=solid label="T_R_BRACE"]
  43 [label="State 43\n\l 21 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 22      | . T_L_BRACE T_R_BRACE\l 23 MULTIPLE_STATEMENTS: . SINGLE_STATEMENT MULTIPLE_STATEMENTS\l 23                    | SINGLE_STATEMENT . MULTIPLE_STATEMENTS\l 24                    | . SINGLE_STATEMENT\l 24                    | SINGLE_STATEMENT .  [T_R_BRACE]\l 25 SINGLE_STATEMENT: . SCOPE\l 26                 | . EXPRESSION_STATEMENT\l 27                 | . JUMP_STATEMENT\l 28                 | . ITERATION_STATEMENT\l 29                 | . SELECTION_STATEMENT\l 30 SELECTION_STATEMENT: . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 31                    | . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l 32                    | . T_ELSE SINGLE_STATEMENT\l 33 ITERATION_STATEMENT: . T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 34                    | . T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l 35                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 36 JUMP_STATEMENT: . T_RETURN T_SEMICOLON\l 37               | . T_RETURN EXPRESSION T_SEMICOLON\l 38               | . T_BREAK T_SEMICOLON\l 39               | . T_CONTINUE T_SEMICOLON\l 40 EXPRESSION_STATEMENT: . EXPRESSION T_SEMICOLON\l 41 EXPRESSION: . VARIABLE_DECLARATION\l 42           | . ASSIGNMENT_STATEMENT\l 43           | . MATH_OR_BITWISE_EXPRESSION\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 58 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 59 TYPE_SPECIFIER: . T_VOID\l 60               | . T_CHAR\l 61               | . T_SHORT\l 62               | . T_INT\l 63               | . T_LONG\l 64               | . T_FLOAT\l 65               | . T_DOUBLE\l 66               | . T_SIGNED\l 67               | . T_UNSIGNED\l 68 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l 69                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l 70                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l 71                     | . DECLARATOR\l 72 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l 73                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l108 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l109                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l110                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l111 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l112                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l113 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l114                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l115 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l116                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l117 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l118                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l119 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l120                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l121 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  43 -> 18 [style=solid label="T_BREAK"]
  43 -> 1 [style=solid label="T_CHAR"]
  43 -> 19 [style=solid label="T_CONTINUE"]
  43 -> 20 [style=solid label="T_DO"]
  43 -> 2 [style=solid label="T_DOUBLE"]
  43 -> 21 [style=solid label="T_ELSE"]
  43 -> 3 [style=solid label="T_FLOAT"]
  43 -> 22 [style=solid label="T_FOR"]
  43 -> 23 [style=solid label="T_IF"]
  43 -> 4 [style=solid label="T_INT"]
  43 -> 5 [style=solid label="T_LONG"]
  43 -> 24 [style=solid label="T_RETURN"]
  43 -> 6 [style=solid label="T_SHORT"]
  43 -> 7 [style=solid label="T_SIGNED"]
  43 -> 25 [style=solid label="T_SIZEOF"]
  43 -> 8 [style=solid label="T_UNSIGNED"]
  43 -> 9 [style=solid label="T_VOID"]
  43 -> 26 [style=solid label="T_WHILE"]
  43 -> 27 [style=solid label="T_NOT"]
  43 -> 28 [style=solid label="T_INVERT"]
  43 -> 29 [style=solid label="T_MINUS"]
  43 -> 30 [style=solid label="T_PLUS"]
  43 -> 31 [style=solid label="T_MULT"]
  43 -> 32 [style=solid label="T_INC_OP"]
  43 -> 33 [style=solid label="T_DEC_OP"]
  43 -> 34 [style=solid label="T_AND_OP"]
  43 -> 10 [style=solid label="T_L_BRACE"]
  43 -> 36 [style=solid label="T_L_PARENTHESIS"]
  43 -> 37 [style=solid label="T_IDENTIFIER"]
  43 -> 38 [style=solid label="T_INT_CONST"]
  43 -> 39 [style=solid label="T_FLOAT_CONST"]
  43 -> 40 [style=solid label="T_STRING_CONST"]
  43 -> 41 [style=dashed label="SCOPE"]
  43 -> 91 [style=dashed label="MULTIPLE_STATEMENTS"]
  43 -> 43 [style=dashed label="SINGLE_STATEMENT"]
  43 -> 44 [style=dashed label="SELECTION_STATEMENT"]
  43 -> 45 [style=dashed label="ITERATION_STATEMENT"]
  43 -> 46 [style=dashed label="JUMP_STATEMENT"]
  43 -> 47 [style=dashed label="EXPRESSION_STATEMENT"]
  43 -> 48 [style=dashed label="EXPRESSION"]
  43 -> 49 [style=dashed label="DECLARATOR"]
  43 -> 50 [style=dashed label="VARIABLE_DECLARATION"]
  43 -> 51 [style=dashed label="TYPE_SPECIFIER"]
  43 -> 52 [style=dashed label="ASSIGNMENT_STATEMENT"]
  43 -> 53 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  43 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  43 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  43 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  43 -> 57 [style=dashed label="UNARY_OPERATOR"]
  43 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  43 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  43 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  43 -> 61 [style=dashed label="RELATIONAL_EXPRESSION"]
  43 -> 62 [style=dashed label="EQUALITY_EXPRESSION"]
  43 -> 63 [style=dashed label="BITWISE_AND_EXPRESSION"]
  43 -> 64 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  43 -> 65 [style=dashed label="BITWISE_OR_EXPRESSION"]
  43 -> 66 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  43 -> 67 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  43 -> 68 [style=dashed label="CONDITIONAL_EXPRESSION"]
  43 -> "43R24" [style=solid]
 "43R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  44 [label="State 44\n\l 29 SINGLE_STATEMENT: SELECTION_STATEMENT .\l"]
  44 -> "44R29" [style=solid]
 "44R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  45 [label="State 45\n\l 28 SINGLE_STATEMENT: ITERATION_STATEMENT .\l"]
  45 -> "45R28" [style=solid]
 "45R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  46 [label="State 46\n\l 27 SINGLE_STATEMENT: JUMP_STATEMENT .\l"]
  46 -> "46R27" [style=solid]
 "46R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  47 [label="State 47\n\l 26 SINGLE_STATEMENT: EXPRESSION_STATEMENT .\l"]
  47 -> "47R26" [style=solid]
 "47R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  48 [label="State 48\n\l 40 EXPRESSION_STATEMENT: EXPRESSION . T_SEMICOLON\l"]
  48 -> 92 [style=solid label="T_SEMICOLON"]
  49 [label="State 49\n\l 17 WRAPPED_PARAMETERS: . T_L_PARENTHESIS MULTIPLE_PARAMETERS T_R_PARENTHESIS\l 18                   | . T_L_PARENTHESIS T_R_PARENTHESIS\l 44 ASSIGNMENT_OPERATOR: . T_EQ_ASSIGN\l 45                    | . T_MUL_ASSIGN\l 46                    | . T_DIV_ASSIGN\l 47                    | . T_MOD_ASSIGN\l 48                    | . T_ADD_ASSIGN\l 49                    | . T_SUB_ASSIGN\l 50                    | . T_LSHIFT_ASSIGN\l 51                    | . T_RSHIFT_ASSIGN\l 52                    | . T_AND_ASSIGN\l 53                    | . T_XOR_ASSIGN\l 54                    | . T_OR_ASSIGN\l 68 ASSIGNMENT_STATEMENT: DECLARATOR . T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l 69                     | DECLARATOR . T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l 70                     | DECLARATOR . T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l 71                     | DECLARATOR .  [T_SEMICOLON, T_R_PARENTHESIS]\l 73 MATH_OR_BITWISE_EXPRESSION: DECLARATOR . ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l 74 PRIMARY_EXPRESSION: DECLARATOR .  [T_AND, T_MINUS, T_PLUS, T_MULT, T_DIV, T_MOD, T_LT, T_GT, T_XOR, T_OR, T_RSHIFT_OP, T_LSHIFT_OP, T_INC_OP, T_DEC_OP, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS]\l 79                   | DECLARATOR . WRAPPED_PARAMETERS\l"]
  49 -> 93 [style=solid label="T_RSHIFT_ASSIGN"]
  49 -> 94 [style=solid label="T_LSHIFT_ASSIGN"]
  49 -> 95 [style=solid label="T_ADD_ASSIGN"]
  49 -> 96 [style=solid label="T_SUB_ASSIGN"]
  49 -> 97 [style=solid label="T_MUL_ASSIGN"]
  49 -> 98 [style=solid label="T_DIV_ASSIGN"]
  49 -> 99 [style=solid label="T_MOD_ASSIGN"]
  49 -> 100 [style=solid label="T_AND_ASSIGN"]
  49 -> 101 [style=solid label="T_XOR_ASSIGN"]
  49 -> 102 [style=solid label="T_OR_ASSIGN"]
  49 -> 103 [style=solid label="T_EQ_ASSIGN"]
  49 -> 104 [style=solid label="T_L_PARENTHESIS"]
  49 -> 105 [style=dashed label="WRAPPED_PARAMETERS"]
  49 -> 106 [style=dashed label="ASSIGNMENT_OPERATOR"]
  49 -> "49R71" [label="[T_SEMICOLON, T_R_PARENTHESIS]", style=solid]
 "49R71" [label="R71", fillcolor=3, shape=diamond, style=filled]
  49 -> "49R74d" [label="[T_SEMICOLON, T_R_PARENTHESIS]", style=solid]
 "49R74d" [label="R74", fillcolor=5, shape=diamond, style=filled]
  49 -> "49R74" [style=solid]
 "49R74" [label="R74", fillcolor=3, shape=diamond, style=filled]
  50 [label="State 50\n\l 41 EXPRESSION: VARIABLE_DECLARATION .\l"]
  50 -> "50R41" [style=solid]
 "50R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  51 [label="State 51\n\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 58 VARIABLE_DECLARATION: TYPE_SPECIFIER . ASSIGNMENT_STATEMENT\l 68 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l 69                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l 70                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l 71                     | . DECLARATOR\l"]
  51 -> 31 [style=solid label="T_MULT"]
  51 -> 37 [style=solid label="T_IDENTIFIER"]
  51 -> 107 [style=dashed label="DECLARATOR"]
  51 -> 75 [style=dashed label="ASSIGNMENT_STATEMENT"]
  52 [label="State 52\n\l 42 EXPRESSION: ASSIGNMENT_STATEMENT .\l"]
  52 -> "52R42" [style=solid]
 "52R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  53 [label="State 53\n\l 43 EXPRESSION: MATH_OR_BITWISE_EXPRESSION .\l"]
  53 -> "53R43" [style=solid]
 "53R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  54 [label="State 54\n\l 81 POSTFIX_EXPRESSION: PRIMARY_EXPRESSION .\l"]
  54 -> "54R81" [style=solid]
 "54R81" [label="R81", fillcolor=3, shape=diamond, style=filled]
  55 [label="State 55\n\l 82 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION . T_INC_OP\l 83                   | POSTFIX_EXPRESSION . T_DEC_OP\l 84 UNARY_EXPRESSION: POSTFIX_EXPRESSION .  [T_AND, T_MINUS, T_PLUS, T_MULT, T_DIV, T_MOD, T_LT, T_GT, T_XOR, T_OR, T_RSHIFT_OP, T_LSHIFT_OP, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  55 -> 108 [style=solid label="T_INC_OP"]
  55 -> 109 [style=solid label="T_DEC_OP"]
  55 -> "55R84" [style=solid]
 "55R84" [label="R84", fillcolor=3, shape=diamond, style=filled]
  56 [label="State 56\n\l 93 MULTIPLICATIVE_EXPRESSION: UNARY_EXPRESSION .\l"]
  56 -> "56R93" [style=solid]
 "56R93" [label="R93", fillcolor=3, shape=diamond, style=filled]
  57 [label="State 57\n\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 85                 | UNARY_OPERATOR . UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l"]
  57 -> 25 [style=solid label="T_SIZEOF"]
  57 -> 27 [style=solid label="T_NOT"]
  57 -> 28 [style=solid label="T_INVERT"]
  57 -> 29 [style=solid label="T_MINUS"]
  57 -> 30 [style=solid label="T_PLUS"]
  57 -> 31 [style=solid label="T_MULT"]
  57 -> 32 [style=solid label="T_INC_OP"]
  57 -> 33 [style=solid label="T_DEC_OP"]
  57 -> 34 [style=solid label="T_AND_OP"]
  57 -> 36 [style=solid label="T_L_PARENTHESIS"]
  57 -> 37 [style=solid label="T_IDENTIFIER"]
  57 -> 38 [style=solid label="T_INT_CONST"]
  57 -> 39 [style=solid label="T_FLOAT_CONST"]
  57 -> 40 [style=solid label="T_STRING_CONST"]
  57 -> 110 [style=dashed label="DECLARATOR"]
  57 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  57 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  57 -> 111 [style=dashed label="UNARY_EXPRESSION"]
  57 -> 57 [style=dashed label="UNARY_OPERATOR"]
  58 [label="State 58\n\l 94 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . T_MULT UNARY_EXPRESSION\l 95                          | MULTIPLICATIVE_EXPRESSION . T_DIV UNARY_EXPRESSION\l 96                          | MULTIPLICATIVE_EXPRESSION . T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION .  [T_AND, T_MINUS, T_PLUS, T_LT, T_GT, T_XOR, T_OR, T_RSHIFT_OP, T_LSHIFT_OP, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  58 -> 112 [style=solid label="T_MULT"]
  58 -> 113 [style=solid label="T_DIV"]
  58 -> 114 [style=solid label="T_MOD"]
  58 -> "58R97" [style=solid]
 "58R97" [label="R97", fillcolor=3, shape=diamond, style=filled]
  59 [label="State 59\n\l 98 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | ADDITIVE_EXPRESSION . T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: ADDITIVE_EXPRESSION .  [T_AND, T_LT, T_GT, T_XOR, T_OR, T_RSHIFT_OP, T_LSHIFT_OP, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  59 -> 115 [style=solid label="T_MINUS"]
  59 -> 116 [style=solid label="T_PLUS"]
  59 -> "59R100" [style=solid]
 "59R100" [label="R100", fillcolor=3, shape=diamond, style=filled]
  60 [label="State 60\n\l101 SHIFT_EXPRESSION: SHIFT_EXPRESSION . T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | SHIFT_EXPRESSION . T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: SHIFT_EXPRESSION .  [T_AND, T_LT, T_GT, T_XOR, T_OR, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  60 -> 117 [style=solid label="T_RSHIFT_OP"]
  60 -> 118 [style=solid label="T_LSHIFT_OP"]
  60 -> "60R103" [style=solid]
 "60R103" [label="R103", fillcolor=3, shape=diamond, style=filled]
  61 [label="State 61\n\l104 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION . T_LT SHIFT_EXPRESSION\l105                      | RELATIONAL_EXPRESSION . T_GT SHIFT_EXPRESSION\l106                      | RELATIONAL_EXPRESSION . T_LE_OP SHIFT_EXPRESSION\l107                      | RELATIONAL_EXPRESSION . T_GE_OP SHIFT_EXPRESSION\l108 EQUALITY_EXPRESSION: RELATIONAL_EXPRESSION .  [T_AND, T_XOR, T_OR, T_AND_OP, T_OR_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  61 -> 119 [style=solid label="T_LT"]
  61 -> 120 [style=solid label="T_GT"]
  61 -> 121 [style=solid label="T_LE_OP"]
  61 -> 122 [style=solid label="T_GE_OP"]
  61 -> "61R108" [style=solid]
 "61R108" [label="R108", fillcolor=3, shape=diamond, style=filled]
  62 [label="State 62\n\l109 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION . T_EQ_OP RELATIONAL_EXPRESSION\l110                    | EQUALITY_EXPRESSION . T_NE_OP RELATIONAL_EXPRESSION\l111 BITWISE_AND_EXPRESSION: EQUALITY_EXPRESSION .  [T_AND, T_XOR, T_OR, T_AND_OP, T_OR_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  62 -> 123 [style=solid label="T_EQ_OP"]
  62 -> 124 [style=solid label="T_NE_OP"]
  62 -> "62R111" [style=solid]
 "62R111" [label="R111", fillcolor=3, shape=diamond, style=filled]
  63 [label="State 63\n\l112 BITWISE_AND_EXPRESSION: BITWISE_AND_EXPRESSION . T_AND EQUALITY_EXPRESSION\l113 BITWISE_XOR_EXPRESSION: BITWISE_AND_EXPRESSION .  [T_XOR, T_OR, T_AND_OP, T_OR_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  63 -> 125 [style=solid label="T_AND"]
  63 -> "63R113" [style=solid]
 "63R113" [label="R113", fillcolor=3, shape=diamond, style=filled]
  64 [label="State 64\n\l114 BITWISE_XOR_EXPRESSION: BITWISE_XOR_EXPRESSION . T_XOR BITWISE_AND_EXPRESSION\l115 BITWISE_OR_EXPRESSION: BITWISE_XOR_EXPRESSION .  [T_OR, T_AND_OP, T_OR_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  64 -> 126 [style=solid label="T_XOR"]
  64 -> "64R115" [style=solid]
 "64R115" [label="R115", fillcolor=3, shape=diamond, style=filled]
  65 [label="State 65\n\l116 BITWISE_OR_EXPRESSION: BITWISE_OR_EXPRESSION . T_OR BITWISE_OR_EXPRESSION\l117 BOOLEAN_AND_EXPRESSION: BITWISE_OR_EXPRESSION .  [T_AND_OP, T_OR_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  65 -> 127 [style=solid label="T_OR"]
  65 -> "65R117" [style=solid]
 "65R117" [label="R117", fillcolor=3, shape=diamond, style=filled]
  66 [label="State 66\n\l118 BOOLEAN_AND_EXPRESSION: BOOLEAN_AND_EXPRESSION . T_AND_OP BITWISE_OR_EXPRESSION\l119 BOOLEAN_OR_EXPRESSION: BOOLEAN_AND_EXPRESSION .  [T_OR_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  66 -> 128 [style=solid label="T_AND_OP"]
  66 -> "66R119" [style=solid]
 "66R119" [label="R119", fillcolor=3, shape=diamond, style=filled]
  67 [label="State 67\n\l120 BOOLEAN_OR_EXPRESSION: BOOLEAN_OR_EXPRESSION . T_OR_OP BOOLEAN_AND_EXPRESSION\l121 CONDITIONAL_EXPRESSION: BOOLEAN_OR_EXPRESSION .  [T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  67 -> 129 [style=solid label="T_OR_OP"]
  67 -> "67R121" [style=solid]
 "67R121" [label="R121", fillcolor=3, shape=diamond, style=filled]
  68 [label="State 68\n\l 72 MATH_OR_BITWISE_EXPRESSION: CONDITIONAL_EXPRESSION .\l"]
  68 -> "68R72" [style=solid]
 "68R72" [label="R72", fillcolor=3, shape=diamond, style=filled]
  69 [label="State 69\n\l  0 $accept: ROOT $end .\l"]
  69 -> "69R0" [style=solid]
 "69R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  70 [label="State 70\n\l  9 FRAME: FUNCTION_DECLARATION FRAME .\l"]
  70 -> "70R9" [style=solid]
 "70R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  71 [label="State 71\n\l  8 FRAME: FUNCTION_DEFINITION FRAME .\l"]
  71 -> "71R8" [style=solid]
 "71R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  72 [label="State 72\n\l  7 FRAME: SCOPE FRAME .\l"]
  72 -> "72R7" [style=solid]
 "72R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  73 [label="State 73\n\l  2 FRAME: . SCOPE\l  3      | . FUNCTION_DEFINITION\l  4      | . FUNCTION_DECLARATION\l  5      | . VARIABLE_DECLARATION T_SEMICOLON\l  5      | VARIABLE_DECLARATION T_SEMICOLON .  [$end]\l  6      | . VARIABLE_DECLARATION T_SEMICOLON FRAME\l  6      | VARIABLE_DECLARATION T_SEMICOLON . FRAME\l  7      | . SCOPE FRAME\l  8      | . FUNCTION_DEFINITION FRAME\l  9      | . FUNCTION_DECLARATION FRAME\l 10 FUNCTION_DECLARATION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS T_SEMICOLON\l 11 FUNCTION_DEFINITION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS SCOPE\l 21 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 22      | . T_L_BRACE T_R_BRACE\l 58 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 59 TYPE_SPECIFIER: . T_VOID\l 60               | . T_CHAR\l 61               | . T_SHORT\l 62               | . T_INT\l 63               | . T_LONG\l 64               | . T_FLOAT\l 65               | . T_DOUBLE\l 66               | . T_SIGNED\l 67               | . T_UNSIGNED\l"]
  73 -> 1 [style=solid label="T_CHAR"]
  73 -> 2 [style=solid label="T_DOUBLE"]
  73 -> 3 [style=solid label="T_FLOAT"]
  73 -> 4 [style=solid label="T_INT"]
  73 -> 5 [style=solid label="T_LONG"]
  73 -> 6 [style=solid label="T_SHORT"]
  73 -> 7 [style=solid label="T_SIGNED"]
  73 -> 8 [style=solid label="T_UNSIGNED"]
  73 -> 9 [style=solid label="T_VOID"]
  73 -> 10 [style=solid label="T_L_BRACE"]
  73 -> 130 [style=dashed label="FRAME"]
  73 -> 13 [style=dashed label="FUNCTION_DECLARATION"]
  73 -> 14 [style=dashed label="FUNCTION_DEFINITION"]
  73 -> 15 [style=dashed label="SCOPE"]
  73 -> 16 [style=dashed label="VARIABLE_DECLARATION"]
  73 -> 17 [style=dashed label="TYPE_SPECIFIER"]
  73 -> "73R5" [style=solid]
 "73R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  74 [label="State 74\n\l 10 FUNCTION_DECLARATION: TYPE_SPECIFIER DECLARATOR . WRAPPED_ARGUMENTS T_SEMICOLON\l 11 FUNCTION_DEFINITION: TYPE_SPECIFIER DECLARATOR . WRAPPED_ARGUMENTS SCOPE\l 12 WRAPPED_ARGUMENTS: . T_L_PARENTHESIS MULTIPLE_ARGUMENTS T_R_PARENTHESIS\l 13                  | . T_L_PARENTHESIS T_R_PARENTHESIS\l 68 ASSIGNMENT_STATEMENT: DECLARATOR . T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l 69                     | DECLARATOR . T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l 70                     | DECLARATOR . T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l 71                     | DECLARATOR .  [T_SEMICOLON]\l"]
  74 -> 131 [style=solid label="T_EQ_ASSIGN"]
  74 -> 132 [style=solid label="T_L_PARENTHESIS"]
  74 -> 133 [style=dashed label="WRAPPED_ARGUMENTS"]
  74 -> "74R71" [style=solid]
 "74R71" [label="R71", fillcolor=3, shape=diamond, style=filled]
  75 [label="State 75\n\l 58 VARIABLE_DECLARATION: TYPE_SPECIFIER ASSIGNMENT_STATEMENT .\l"]
  75 -> "75R58" [style=solid]
 "75R58" [label="R58", fillcolor=3, shape=diamond, style=filled]
  76 [label="State 76\n\l 38 JUMP_STATEMENT: T_BREAK T_SEMICOLON .\l"]
  76 -> "76R38" [style=solid]
 "76R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  77 [label="State 77\n\l 39 JUMP_STATEMENT: T_CONTINUE T_SEMICOLON .\l"]
  77 -> "77R39" [style=solid]
 "77R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  78 [label="State 78\n\l 34 ITERATION_STATEMENT: T_DO SINGLE_STATEMENT . T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l"]
  78 -> 134 [style=solid label="T_WHILE"]
  79 [label="State 79\n\l 32 SELECTION_STATEMENT: T_ELSE SINGLE_STATEMENT .\l"]
  79 -> "79R32" [style=solid]
 "79R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  80 [label="State 80\n\l 35 ITERATION_STATEMENT: T_FOR T_L_PARENTHESIS . EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 40 EXPRESSION_STATEMENT: . EXPRESSION T_SEMICOLON\l 41 EXPRESSION: . VARIABLE_DECLARATION\l 42           | . ASSIGNMENT_STATEMENT\l 43           | . MATH_OR_BITWISE_EXPRESSION\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 58 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 59 TYPE_SPECIFIER: . T_VOID\l 60               | . T_CHAR\l 61               | . T_SHORT\l 62               | . T_INT\l 63               | . T_LONG\l 64               | . T_FLOAT\l 65               | . T_DOUBLE\l 66               | . T_SIGNED\l 67               | . T_UNSIGNED\l 68 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l 69                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l 70                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l 71                     | . DECLARATOR\l 72 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l 73                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l108 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l109                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l110                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l111 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l112                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l113 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l114                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l115 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l116                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l117 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l118                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l119 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l120                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l121 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  80 -> 1 [style=solid label="T_CHAR"]
  80 -> 2 [style=solid label="T_DOUBLE"]
  80 -> 3 [style=solid label="T_FLOAT"]
  80 -> 4 [style=solid label="T_INT"]
  80 -> 5 [style=solid label="T_LONG"]
  80 -> 6 [style=solid label="T_SHORT"]
  80 -> 7 [style=solid label="T_SIGNED"]
  80 -> 25 [style=solid label="T_SIZEOF"]
  80 -> 8 [style=solid label="T_UNSIGNED"]
  80 -> 9 [style=solid label="T_VOID"]
  80 -> 27 [style=solid label="T_NOT"]
  80 -> 28 [style=solid label="T_INVERT"]
  80 -> 29 [style=solid label="T_MINUS"]
  80 -> 30 [style=solid label="T_PLUS"]
  80 -> 31 [style=solid label="T_MULT"]
  80 -> 32 [style=solid label="T_INC_OP"]
  80 -> 33 [style=solid label="T_DEC_OP"]
  80 -> 34 [style=solid label="T_AND_OP"]
  80 -> 36 [style=solid label="T_L_PARENTHESIS"]
  80 -> 37 [style=solid label="T_IDENTIFIER"]
  80 -> 38 [style=solid label="T_INT_CONST"]
  80 -> 39 [style=solid label="T_FLOAT_CONST"]
  80 -> 40 [style=solid label="T_STRING_CONST"]
  80 -> 135 [style=dashed label="EXPRESSION_STATEMENT"]
  80 -> 48 [style=dashed label="EXPRESSION"]
  80 -> 49 [style=dashed label="DECLARATOR"]
  80 -> 50 [style=dashed label="VARIABLE_DECLARATION"]
  80 -> 51 [style=dashed label="TYPE_SPECIFIER"]
  80 -> 52 [style=dashed label="ASSIGNMENT_STATEMENT"]
  80 -> 53 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  80 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  80 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  80 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  80 -> 57 [style=dashed label="UNARY_OPERATOR"]
  80 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  80 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  80 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  80 -> 61 [style=dashed label="RELATIONAL_EXPRESSION"]
  80 -> 62 [style=dashed label="EQUALITY_EXPRESSION"]
  80 -> 63 [style=dashed label="BITWISE_AND_EXPRESSION"]
  80 -> 64 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  80 -> 65 [style=dashed label="BITWISE_OR_EXPRESSION"]
  80 -> 66 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  80 -> 67 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  80 -> 68 [style=dashed label="CONDITIONAL_EXPRESSION"]
  81 [label="State 81\n\l 30 SELECTION_STATEMENT: T_IF T_L_PARENTHESIS . EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 31                    | T_IF T_L_PARENTHESIS . EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l 41 EXPRESSION: . VARIABLE_DECLARATION\l 42           | . ASSIGNMENT_STATEMENT\l 43           | . MATH_OR_BITWISE_EXPRESSION\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 58 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 59 TYPE_SPECIFIER: . T_VOID\l 60               | . T_CHAR\l 61               | . T_SHORT\l 62               | . T_INT\l 63               | . T_LONG\l 64               | . T_FLOAT\l 65               | . T_DOUBLE\l 66               | . T_SIGNED\l 67               | . T_UNSIGNED\l 68 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l 69                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l 70                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l 71                     | . DECLARATOR\l 72 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l 73                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l108 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l109                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l110                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l111 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l112                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l113 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l114                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l115 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l116                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l117 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l118                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l119 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l120                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l121 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  81 -> 1 [style=solid label="T_CHAR"]
  81 -> 2 [style=solid label="T_DOUBLE"]
  81 -> 3 [style=solid label="T_FLOAT"]
  81 -> 4 [style=solid label="T_INT"]
  81 -> 5 [style=solid label="T_LONG"]
  81 -> 6 [style=solid label="T_SHORT"]
  81 -> 7 [style=solid label="T_SIGNED"]
  81 -> 25 [style=solid label="T_SIZEOF"]
  81 -> 8 [style=solid label="T_UNSIGNED"]
  81 -> 9 [style=solid label="T_VOID"]
  81 -> 27 [style=solid label="T_NOT"]
  81 -> 28 [style=solid label="T_INVERT"]
  81 -> 29 [style=solid label="T_MINUS"]
  81 -> 30 [style=solid label="T_PLUS"]
  81 -> 31 [style=solid label="T_MULT"]
  81 -> 32 [style=solid label="T_INC_OP"]
  81 -> 33 [style=solid label="T_DEC_OP"]
  81 -> 34 [style=solid label="T_AND_OP"]
  81 -> 36 [style=solid label="T_L_PARENTHESIS"]
  81 -> 37 [style=solid label="T_IDENTIFIER"]
  81 -> 38 [style=solid label="T_INT_CONST"]
  81 -> 39 [style=solid label="T_FLOAT_CONST"]
  81 -> 40 [style=solid label="T_STRING_CONST"]
  81 -> 136 [style=dashed label="EXPRESSION"]
  81 -> 49 [style=dashed label="DECLARATOR"]
  81 -> 50 [style=dashed label="VARIABLE_DECLARATION"]
  81 -> 51 [style=dashed label="TYPE_SPECIFIER"]
  81 -> 52 [style=dashed label="ASSIGNMENT_STATEMENT"]
  81 -> 53 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  81 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  81 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  81 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  81 -> 57 [style=dashed label="UNARY_OPERATOR"]
  81 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  81 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  81 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  81 -> 61 [style=dashed label="RELATIONAL_EXPRESSION"]
  81 -> 62 [style=dashed label="EQUALITY_EXPRESSION"]
  81 -> 63 [style=dashed label="BITWISE_AND_EXPRESSION"]
  81 -> 64 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  81 -> 65 [style=dashed label="BITWISE_OR_EXPRESSION"]
  81 -> 66 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  81 -> 67 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  81 -> 68 [style=dashed label="CONDITIONAL_EXPRESSION"]
  82 [label="State 82\n\l 36 JUMP_STATEMENT: T_RETURN T_SEMICOLON .\l"]
  82 -> "82R36" [style=solid]
 "82R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  83 [label="State 83\n\l 37 JUMP_STATEMENT: T_RETURN EXPRESSION . T_SEMICOLON\l"]
  83 -> 137 [style=solid label="T_SEMICOLON"]
  84 [label="State 84\n\l 59 TYPE_SPECIFIER: . T_VOID\l 60               | . T_CHAR\l 61               | . T_SHORT\l 62               | . T_INT\l 63               | . T_LONG\l 64               | . T_FLOAT\l 65               | . T_DOUBLE\l 66               | . T_SIGNED\l 67               | . T_UNSIGNED\l 80 PRIMARY_EXPRESSION: T_SIZEOF T_L_PARENTHESIS . TYPE_SPECIFIER T_R_PARENTHESIS\l"]
  84 -> 1 [style=solid label="T_CHAR"]
  84 -> 2 [style=solid label="T_DOUBLE"]
  84 -> 3 [style=solid label="T_FLOAT"]
  84 -> 4 [style=solid label="T_INT"]
  84 -> 5 [style=solid label="T_LONG"]
  84 -> 6 [style=solid label="T_SHORT"]
  84 -> 7 [style=solid label="T_SIGNED"]
  84 -> 8 [style=solid label="T_UNSIGNED"]
  84 -> 9 [style=solid label="T_VOID"]
  84 -> 138 [style=dashed label="TYPE_SPECIFIER"]
  85 [label="State 85\n\l 33 ITERATION_STATEMENT: T_WHILE T_L_PARENTHESIS . EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 41 EXPRESSION: . VARIABLE_DECLARATION\l 42           | . ASSIGNMENT_STATEMENT\l 43           | . MATH_OR_BITWISE_EXPRESSION\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 58 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 59 TYPE_SPECIFIER: . T_VOID\l 60               | . T_CHAR\l 61               | . T_SHORT\l 62               | . T_INT\l 63               | . T_LONG\l 64               | . T_FLOAT\l 65               | . T_DOUBLE\l 66               | . T_SIGNED\l 67               | . T_UNSIGNED\l 68 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l 69                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l 70                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l 71                     | . DECLARATOR\l 72 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l 73                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l108 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l109                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l110                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l111 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l112                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l113 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l114                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l115 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l116                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l117 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l118                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l119 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l120                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l121 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  85 -> 1 [style=solid label="T_CHAR"]
  85 -> 2 [style=solid label="T_DOUBLE"]
  85 -> 3 [style=solid label="T_FLOAT"]
  85 -> 4 [style=solid label="T_INT"]
  85 -> 5 [style=solid label="T_LONG"]
  85 -> 6 [style=solid label="T_SHORT"]
  85 -> 7 [style=solid label="T_SIGNED"]
  85 -> 25 [style=solid label="T_SIZEOF"]
  85 -> 8 [style=solid label="T_UNSIGNED"]
  85 -> 9 [style=solid label="T_VOID"]
  85 -> 27 [style=solid label="T_NOT"]
  85 -> 28 [style=solid label="T_INVERT"]
  85 -> 29 [style=solid label="T_MINUS"]
  85 -> 30 [style=solid label="T_PLUS"]
  85 -> 31 [style=solid label="T_MULT"]
  85 -> 32 [style=solid label="T_INC_OP"]
  85 -> 33 [style=solid label="T_DEC_OP"]
  85 -> 34 [style=solid label="T_AND_OP"]
  85 -> 36 [style=solid label="T_L_PARENTHESIS"]
  85 -> 37 [style=solid label="T_IDENTIFIER"]
  85 -> 38 [style=solid label="T_INT_CONST"]
  85 -> 39 [style=solid label="T_FLOAT_CONST"]
  85 -> 40 [style=solid label="T_STRING_CONST"]
  85 -> 139 [style=dashed label="EXPRESSION"]
  85 -> 49 [style=dashed label="DECLARATOR"]
  85 -> 50 [style=dashed label="VARIABLE_DECLARATION"]
  85 -> 51 [style=dashed label="TYPE_SPECIFIER"]
  85 -> 52 [style=dashed label="ASSIGNMENT_STATEMENT"]
  85 -> 53 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  85 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  85 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  85 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  85 -> 57 [style=dashed label="UNARY_OPERATOR"]
  85 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  85 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  85 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  85 -> 61 [style=dashed label="RELATIONAL_EXPRESSION"]
  85 -> 62 [style=dashed label="EQUALITY_EXPRESSION"]
  85 -> 63 [style=dashed label="BITWISE_AND_EXPRESSION"]
  85 -> 64 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  85 -> 65 [style=dashed label="BITWISE_OR_EXPRESSION"]
  85 -> 66 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  85 -> 67 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  85 -> 68 [style=dashed label="CONDITIONAL_EXPRESSION"]
  86 [label="State 86\n\l 56 DECLARATOR: T_MULT T_IDENTIFIER .\l"]
  86 -> "86R56" [style=solid]
 "86R56" [label="R56", fillcolor=3, shape=diamond, style=filled]
  87 [label="State 87\n\l 17 WRAPPED_PARAMETERS: . T_L_PARENTHESIS MULTIPLE_PARAMETERS T_R_PARENTHESIS\l 18                   | . T_L_PARENTHESIS T_R_PARENTHESIS\l 44 ASSIGNMENT_OPERATOR: . T_EQ_ASSIGN\l 45                    | . T_MUL_ASSIGN\l 46                    | . T_DIV_ASSIGN\l 47                    | . T_MOD_ASSIGN\l 48                    | . T_ADD_ASSIGN\l 49                    | . T_SUB_ASSIGN\l 50                    | . T_LSHIFT_ASSIGN\l 51                    | . T_RSHIFT_ASSIGN\l 52                    | . T_AND_ASSIGN\l 53                    | . T_XOR_ASSIGN\l 54                    | . T_OR_ASSIGN\l 73 MATH_OR_BITWISE_EXPRESSION: DECLARATOR . ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l 74 PRIMARY_EXPRESSION: DECLARATOR .  [T_AND, T_MINUS, T_PLUS, T_MULT, T_DIV, T_MOD, T_LT, T_GT, T_XOR, T_OR, T_RSHIFT_OP, T_LSHIFT_OP, T_INC_OP, T_DEC_OP, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l 79                   | DECLARATOR . WRAPPED_PARAMETERS\l"]
  87 -> 93 [style=solid label="T_RSHIFT_ASSIGN"]
  87 -> 94 [style=solid label="T_LSHIFT_ASSIGN"]
  87 -> 95 [style=solid label="T_ADD_ASSIGN"]
  87 -> 96 [style=solid label="T_SUB_ASSIGN"]
  87 -> 97 [style=solid label="T_MUL_ASSIGN"]
  87 -> 98 [style=solid label="T_DIV_ASSIGN"]
  87 -> 99 [style=solid label="T_MOD_ASSIGN"]
  87 -> 100 [style=solid label="T_AND_ASSIGN"]
  87 -> 101 [style=solid label="T_XOR_ASSIGN"]
  87 -> 102 [style=solid label="T_OR_ASSIGN"]
  87 -> 140 [style=solid label="T_EQ_ASSIGN"]
  87 -> 104 [style=solid label="T_L_PARENTHESIS"]
  87 -> 105 [style=dashed label="WRAPPED_PARAMETERS"]
  87 -> 106 [style=dashed label="ASSIGNMENT_OPERATOR"]
  87 -> "87R74" [style=solid]
 "87R74" [label="R74", fillcolor=3, shape=diamond, style=filled]
  88 [label="State 88\n\l 78 PRIMARY_EXPRESSION: T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION . T_R_PARENTHESIS\l"]
  88 -> 141 [style=solid label="T_R_PARENTHESIS"]
  89 [label="State 89\n\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 57           | T_IDENTIFIER T_L_BRACKET . MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 72 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l 73                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l108 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l109                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l110                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l111 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l112                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l113 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l114                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l115 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l116                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l117 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l118                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l119 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l120                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l121 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  89 -> 25 [style=solid label="T_SIZEOF"]
  89 -> 27 [style=solid label="T_NOT"]
  89 -> 28 [style=solid label="T_INVERT"]
  89 -> 29 [style=solid label="T_MINUS"]
  89 -> 30 [style=solid label="T_PLUS"]
  89 -> 31 [style=solid label="T_MULT"]
  89 -> 32 [style=solid label="T_INC_OP"]
  89 -> 33 [style=solid label="T_DEC_OP"]
  89 -> 34 [style=solid label="T_AND_OP"]
  89 -> 36 [style=solid label="T_L_PARENTHESIS"]
  89 -> 37 [style=solid label="T_IDENTIFIER"]
  89 -> 38 [style=solid label="T_INT_CONST"]
  89 -> 39 [style=solid label="T_FLOAT_CONST"]
  89 -> 40 [style=solid label="T_STRING_CONST"]
  89 -> 87 [style=dashed label="DECLARATOR"]
  89 -> 142 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  89 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  89 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  89 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  89 -> 57 [style=dashed label="UNARY_OPERATOR"]
  89 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  89 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  89 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  89 -> 61 [style=dashed label="RELATIONAL_EXPRESSION"]
  89 -> 62 [style=dashed label="EQUALITY_EXPRESSION"]
  89 -> 63 [style=dashed label="BITWISE_AND_EXPRESSION"]
  89 -> 64 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  89 -> 65 [style=dashed label="BITWISE_OR_EXPRESSION"]
  89 -> 66 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  89 -> 67 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  89 -> 68 [style=dashed label="CONDITIONAL_EXPRESSION"]
  90 [label="State 90\n\l 21 SCOPE: T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE .\l"]
  90 -> "90R21" [style=solid]
 "90R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  91 [label="State 91\n\l 23 MULTIPLE_STATEMENTS: SINGLE_STATEMENT MULTIPLE_STATEMENTS .\l"]
  91 -> "91R23" [style=solid]
 "91R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  92 [label="State 92\n\l 40 EXPRESSION_STATEMENT: EXPRESSION T_SEMICOLON .\l"]
  92 -> "92R40" [style=solid]
 "92R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  93 [label="State 93\n\l 51 ASSIGNMENT_OPERATOR: T_RSHIFT_ASSIGN .\l"]
  93 -> "93R51" [style=solid]
 "93R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  94 [label="State 94\n\l 50 ASSIGNMENT_OPERATOR: T_LSHIFT_ASSIGN .\l"]
  94 -> "94R50" [style=solid]
 "94R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  95 [label="State 95\n\l 48 ASSIGNMENT_OPERATOR: T_ADD_ASSIGN .\l"]
  95 -> "95R48" [style=solid]
 "95R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  96 [label="State 96\n\l 49 ASSIGNMENT_OPERATOR: T_SUB_ASSIGN .\l"]
  96 -> "96R49" [style=solid]
 "96R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  97 [label="State 97\n\l 45 ASSIGNMENT_OPERATOR: T_MUL_ASSIGN .\l"]
  97 -> "97R45" [style=solid]
 "97R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  98 [label="State 98\n\l 46 ASSIGNMENT_OPERATOR: T_DIV_ASSIGN .\l"]
  98 -> "98R46" [style=solid]
 "98R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  99 [label="State 99\n\l 47 ASSIGNMENT_OPERATOR: T_MOD_ASSIGN .\l"]
  99 -> "99R47" [style=solid]
 "99R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  100 [label="State 100\n\l 52 ASSIGNMENT_OPERATOR: T_AND_ASSIGN .\l"]
  100 -> "100R52" [style=solid]
 "100R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  101 [label="State 101\n\l 53 ASSIGNMENT_OPERATOR: T_XOR_ASSIGN .\l"]
  101 -> "101R53" [style=solid]
 "101R53" [label="R53", fillcolor=3, shape=diamond, style=filled]
  102 [label="State 102\n\l 54 ASSIGNMENT_OPERATOR: T_OR_ASSIGN .\l"]
  102 -> "102R54" [style=solid]
 "102R54" [label="R54", fillcolor=3, shape=diamond, style=filled]
  103 [label="State 103\n\l 44 ASSIGNMENT_OPERATOR: T_EQ_ASSIGN .  [T_SIZEOF, T_NOT, T_INVERT, T_MINUS, T_PLUS, T_MULT, T_INC_OP, T_DEC_OP, T_AND_OP, T_L_PARENTHESIS, T_IDENTIFIER, T_INT_CONST, T_FLOAT_CONST, T_STRING_CONST]\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 68 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l 68                     | DECLARATOR T_EQ_ASSIGN . MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l 69                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l 69                     | DECLARATOR T_EQ_ASSIGN . ASSIGNMENT_STATEMENT\l 70                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l 70                     | DECLARATOR T_EQ_ASSIGN . MATH_OR_BITWISE_EXPRESSION\l 71                     | . DECLARATOR\l 72 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l 73                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l108 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l109                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l110                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l111 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l112                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l113 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l114                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l115 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l116                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l117 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l118                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l119 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l120                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l121 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  103 -> 25 [style=solid label="T_SIZEOF"]
  103 -> 27 [style=solid label="T_NOT"]
  103 -> 28 [style=solid label="T_INVERT"]
  103 -> 29 [style=solid label="T_MINUS"]
  103 -> 30 [style=solid label="T_PLUS"]
  103 -> 31 [style=solid label="T_MULT"]
  103 -> 32 [style=solid label="T_INC_OP"]
  103 -> 33 [style=solid label="T_DEC_OP"]
  103 -> 34 [style=solid label="T_AND_OP"]
  103 -> 36 [style=solid label="T_L_PARENTHESIS"]
  103 -> 37 [style=solid label="T_IDENTIFIER"]
  103 -> 38 [style=solid label="T_INT_CONST"]
  103 -> 39 [style=solid label="T_FLOAT_CONST"]
  103 -> 40 [style=solid label="T_STRING_CONST"]
  103 -> 49 [style=dashed label="DECLARATOR"]
  103 -> 143 [style=dashed label="ASSIGNMENT_STATEMENT"]
  103 -> 144 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  103 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  103 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  103 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  103 -> 57 [style=dashed label="UNARY_OPERATOR"]
  103 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  103 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  103 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  103 -> 61 [style=dashed label="RELATIONAL_EXPRESSION"]
  103 -> 62 [style=dashed label="EQUALITY_EXPRESSION"]
  103 -> 63 [style=dashed label="BITWISE_AND_EXPRESSION"]
  103 -> 64 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  103 -> 65 [style=dashed label="BITWISE_OR_EXPRESSION"]
  103 -> 66 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  103 -> 67 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  103 -> 68 [style=dashed label="CONDITIONAL_EXPRESSION"]
  103 -> "103R44d" [label="[T_SIZEOF, T_NOT, T_INVERT, T_MINUS, T_PLUS, T_MULT, T_INC_OP, T_DEC_OP, T_AND_OP, T_L_PARENTHESIS, T_IDENTIFIER, T_INT_CONST, T_FLOAT_CONST, T_STRING_CONST]", style=solid]
 "103R44d" [label="R44", fillcolor=5, shape=diamond, style=filled]
  104 [label="State 104\n\l 17 WRAPPED_PARAMETERS: T_L_PARENTHESIS . MULTIPLE_PARAMETERS T_R_PARENTHESIS\l 18                   | T_L_PARENTHESIS . T_R_PARENTHESIS\l 19 MULTIPLE_PARAMETERS: . MATH_OR_BITWISE_EXPRESSION T_COMMA MULTIPLE_PARAMETERS\l 20                    | . MATH_OR_BITWISE_EXPRESSION\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 72 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l 73                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l108 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l109                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l110                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l111 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l112                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l113 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l114                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l115 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l116                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l117 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l118                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l119 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l120                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l121 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  104 -> 25 [style=solid label="T_SIZEOF"]
  104 -> 27 [style=solid label="T_NOT"]
  104 -> 28 [style=solid label="T_INVERT"]
  104 -> 29 [style=solid label="T_MINUS"]
  104 -> 30 [style=solid label="T_PLUS"]
  104 -> 31 [style=solid label="T_MULT"]
  104 -> 32 [style=solid label="T_INC_OP"]
  104 -> 33 [style=solid label="T_DEC_OP"]
  104 -> 34 [style=solid label="T_AND_OP"]
  104 -> 36 [style=solid label="T_L_PARENTHESIS"]
  104 -> 145 [style=solid label="T_R_PARENTHESIS"]
  104 -> 37 [style=solid label="T_IDENTIFIER"]
  104 -> 38 [style=solid label="T_INT_CONST"]
  104 -> 39 [style=solid label="T_FLOAT_CONST"]
  104 -> 40 [style=solid label="T_STRING_CONST"]
  104 -> 146 [style=dashed label="MULTIPLE_PARAMETERS"]
  104 -> 87 [style=dashed label="DECLARATOR"]
  104 -> 147 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  104 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  104 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  104 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  104 -> 57 [style=dashed label="UNARY_OPERATOR"]
  104 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  104 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  104 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  104 -> 61 [style=dashed label="RELATIONAL_EXPRESSION"]
  104 -> 62 [style=dashed label="EQUALITY_EXPRESSION"]
  104 -> 63 [style=dashed label="BITWISE_AND_EXPRESSION"]
  104 -> 64 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  104 -> 65 [style=dashed label="BITWISE_OR_EXPRESSION"]
  104 -> 66 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  104 -> 67 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  104 -> 68 [style=dashed label="CONDITIONAL_EXPRESSION"]
  105 [label="State 105\n\l 79 PRIMARY_EXPRESSION: DECLARATOR WRAPPED_PARAMETERS .\l"]
  105 -> "105R79" [style=solid]
 "105R79" [label="R79", fillcolor=3, shape=diamond, style=filled]
  106 [label="State 106\n\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 72 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l 73                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l 73                           | DECLARATOR ASSIGNMENT_OPERATOR . MATH_OR_BITWISE_EXPRESSION\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l108 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l109                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l110                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l111 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l112                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l113 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l114                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l115 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l116                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l117 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l118                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l119 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l120                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l121 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  106 -> 25 [style=solid label="T_SIZEOF"]
  106 -> 27 [style=solid label="T_NOT"]
  106 -> 28 [style=solid label="T_INVERT"]
  106 -> 29 [style=solid label="T_MINUS"]
  106 -> 30 [style=solid label="T_PLUS"]
  106 -> 31 [style=solid label="T_MULT"]
  106 -> 32 [style=solid label="T_INC_OP"]
  106 -> 33 [style=solid label="T_DEC_OP"]
  106 -> 34 [style=solid label="T_AND_OP"]
  106 -> 36 [style=solid label="T_L_PARENTHESIS"]
  106 -> 37 [style=solid label="T_IDENTIFIER"]
  106 -> 38 [style=solid label="T_INT_CONST"]
  106 -> 39 [style=solid label="T_FLOAT_CONST"]
  106 -> 40 [style=solid label="T_STRING_CONST"]
  106 -> 87 [style=dashed label="DECLARATOR"]
  106 -> 148 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  106 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  106 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  106 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  106 -> 57 [style=dashed label="UNARY_OPERATOR"]
  106 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  106 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  106 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  106 -> 61 [style=dashed label="RELATIONAL_EXPRESSION"]
  106 -> 62 [style=dashed label="EQUALITY_EXPRESSION"]
  106 -> 63 [style=dashed label="BITWISE_AND_EXPRESSION"]
  106 -> 64 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  106 -> 65 [style=dashed label="BITWISE_OR_EXPRESSION"]
  106 -> 66 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  106 -> 67 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  106 -> 68 [style=dashed label="CONDITIONAL_EXPRESSION"]
  107 [label="State 107\n\l 68 ASSIGNMENT_STATEMENT: DECLARATOR . T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l 69                     | DECLARATOR . T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l 70                     | DECLARATOR . T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l 71                     | DECLARATOR .  [T_SEMICOLON, T_R_PARENTHESIS]\l"]
  107 -> 131 [style=solid label="T_EQ_ASSIGN"]
  107 -> "107R71" [style=solid]
 "107R71" [label="R71", fillcolor=3, shape=diamond, style=filled]
  108 [label="State 108\n\l 82 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION T_INC_OP .\l"]
  108 -> "108R82" [style=solid]
 "108R82" [label="R82", fillcolor=3, shape=diamond, style=filled]
  109 [label="State 109\n\l 83 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION T_DEC_OP .\l"]
  109 -> "109R83" [style=solid]
 "109R83" [label="R83", fillcolor=3, shape=diamond, style=filled]
  110 [label="State 110\n\l 17 WRAPPED_PARAMETERS: . T_L_PARENTHESIS MULTIPLE_PARAMETERS T_R_PARENTHESIS\l 18                   | . T_L_PARENTHESIS T_R_PARENTHESIS\l 74 PRIMARY_EXPRESSION: DECLARATOR .  [T_AND, T_MINUS, T_PLUS, T_MULT, T_DIV, T_MOD, T_LT, T_GT, T_XOR, T_OR, T_RSHIFT_OP, T_LSHIFT_OP, T_INC_OP, T_DEC_OP, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l 79                   | DECLARATOR . WRAPPED_PARAMETERS\l"]
  110 -> 104 [style=solid label="T_L_PARENTHESIS"]
  110 -> 105 [style=dashed label="WRAPPED_PARAMETERS"]
  110 -> "110R74" [style=solid]
 "110R74" [label="R74", fillcolor=3, shape=diamond, style=filled]
  111 [label="State 111\n\l 85 UNARY_EXPRESSION: UNARY_OPERATOR UNARY_EXPRESSION .\l"]
  111 -> "111R85" [style=solid]
 "111R85" [label="R85", fillcolor=3, shape=diamond, style=filled]
  112 [label="State 112\n\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 94 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION T_MULT . UNARY_EXPRESSION\l"]
  112 -> 25 [style=solid label="T_SIZEOF"]
  112 -> 27 [style=solid label="T_NOT"]
  112 -> 28 [style=solid label="T_INVERT"]
  112 -> 29 [style=solid label="T_MINUS"]
  112 -> 30 [style=solid label="T_PLUS"]
  112 -> 31 [style=solid label="T_MULT"]
  112 -> 32 [style=solid label="T_INC_OP"]
  112 -> 33 [style=solid label="T_DEC_OP"]
  112 -> 34 [style=solid label="T_AND_OP"]
  112 -> 36 [style=solid label="T_L_PARENTHESIS"]
  112 -> 37 [style=solid label="T_IDENTIFIER"]
  112 -> 38 [style=solid label="T_INT_CONST"]
  112 -> 39 [style=solid label="T_FLOAT_CONST"]
  112 -> 40 [style=solid label="T_STRING_CONST"]
  112 -> 110 [style=dashed label="DECLARATOR"]
  112 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  112 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  112 -> 149 [style=dashed label="UNARY_EXPRESSION"]
  112 -> 57 [style=dashed label="UNARY_OPERATOR"]
  113 [label="State 113\n\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 95 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION T_DIV . UNARY_EXPRESSION\l"]
  113 -> 25 [style=solid label="T_SIZEOF"]
  113 -> 27 [style=solid label="T_NOT"]
  113 -> 28 [style=solid label="T_INVERT"]
  113 -> 29 [style=solid label="T_MINUS"]
  113 -> 30 [style=solid label="T_PLUS"]
  113 -> 31 [style=solid label="T_MULT"]
  113 -> 32 [style=solid label="T_INC_OP"]
  113 -> 33 [style=solid label="T_DEC_OP"]
  113 -> 34 [style=solid label="T_AND_OP"]
  113 -> 36 [style=solid label="T_L_PARENTHESIS"]
  113 -> 37 [style=solid label="T_IDENTIFIER"]
  113 -> 38 [style=solid label="T_INT_CONST"]
  113 -> 39 [style=solid label="T_FLOAT_CONST"]
  113 -> 40 [style=solid label="T_STRING_CONST"]
  113 -> 110 [style=dashed label="DECLARATOR"]
  113 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  113 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  113 -> 150 [style=dashed label="UNARY_EXPRESSION"]
  113 -> 57 [style=dashed label="UNARY_OPERATOR"]
  114 [label="State 114\n\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 96 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION T_MOD . UNARY_EXPRESSION\l"]
  114 -> 25 [style=solid label="T_SIZEOF"]
  114 -> 27 [style=solid label="T_NOT"]
  114 -> 28 [style=solid label="T_INVERT"]
  114 -> 29 [style=solid label="T_MINUS"]
  114 -> 30 [style=solid label="T_PLUS"]
  114 -> 31 [style=solid label="T_MULT"]
  114 -> 32 [style=solid label="T_INC_OP"]
  114 -> 33 [style=solid label="T_DEC_OP"]
  114 -> 34 [style=solid label="T_AND_OP"]
  114 -> 36 [style=solid label="T_L_PARENTHESIS"]
  114 -> 37 [style=solid label="T_IDENTIFIER"]
  114 -> 38 [style=solid label="T_INT_CONST"]
  114 -> 39 [style=solid label="T_FLOAT_CONST"]
  114 -> 40 [style=solid label="T_STRING_CONST"]
  114 -> 110 [style=dashed label="DECLARATOR"]
  114 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  114 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  114 -> 151 [style=dashed label="UNARY_EXPRESSION"]
  114 -> 57 [style=dashed label="UNARY_OPERATOR"]
  115 [label="State 115\n\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 99 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION T_MINUS . MULTIPLICATIVE_EXPRESSION\l"]
  115 -> 25 [style=solid label="T_SIZEOF"]
  115 -> 27 [style=solid label="T_NOT"]
  115 -> 28 [style=solid label="T_INVERT"]
  115 -> 29 [style=solid label="T_MINUS"]
  115 -> 30 [style=solid label="T_PLUS"]
  115 -> 31 [style=solid label="T_MULT"]
  115 -> 32 [style=solid label="T_INC_OP"]
  115 -> 33 [style=solid label="T_DEC_OP"]
  115 -> 34 [style=solid label="T_AND_OP"]
  115 -> 36 [style=solid label="T_L_PARENTHESIS"]
  115 -> 37 [style=solid label="T_IDENTIFIER"]
  115 -> 38 [style=solid label="T_INT_CONST"]
  115 -> 39 [style=solid label="T_FLOAT_CONST"]
  115 -> 40 [style=solid label="T_STRING_CONST"]
  115 -> 110 [style=dashed label="DECLARATOR"]
  115 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  115 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  115 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  115 -> 57 [style=dashed label="UNARY_OPERATOR"]
  115 -> 152 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  116 [label="State 116\n\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 98 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION T_PLUS . MULTIPLICATIVE_EXPRESSION\l"]
  116 -> 25 [style=solid label="T_SIZEOF"]
  116 -> 27 [style=solid label="T_NOT"]
  116 -> 28 [style=solid label="T_INVERT"]
  116 -> 29 [style=solid label="T_MINUS"]
  116 -> 30 [style=solid label="T_PLUS"]
  116 -> 31 [style=solid label="T_MULT"]
  116 -> 32 [style=solid label="T_INC_OP"]
  116 -> 33 [style=solid label="T_DEC_OP"]
  116 -> 34 [style=solid label="T_AND_OP"]
  116 -> 36 [style=solid label="T_L_PARENTHESIS"]
  116 -> 37 [style=solid label="T_IDENTIFIER"]
  116 -> 38 [style=solid label="T_INT_CONST"]
  116 -> 39 [style=solid label="T_FLOAT_CONST"]
  116 -> 40 [style=solid label="T_STRING_CONST"]
  116 -> 110 [style=dashed label="DECLARATOR"]
  116 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  116 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  116 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  116 -> 57 [style=dashed label="UNARY_OPERATOR"]
  116 -> 153 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  117 [label="State 117\n\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l102 SHIFT_EXPRESSION: SHIFT_EXPRESSION T_RSHIFT_OP . ADDITIVE_EXPRESSION\l"]
  117 -> 25 [style=solid label="T_SIZEOF"]
  117 -> 27 [style=solid label="T_NOT"]
  117 -> 28 [style=solid label="T_INVERT"]
  117 -> 29 [style=solid label="T_MINUS"]
  117 -> 30 [style=solid label="T_PLUS"]
  117 -> 31 [style=solid label="T_MULT"]
  117 -> 32 [style=solid label="T_INC_OP"]
  117 -> 33 [style=solid label="T_DEC_OP"]
  117 -> 34 [style=solid label="T_AND_OP"]
  117 -> 36 [style=solid label="T_L_PARENTHESIS"]
  117 -> 37 [style=solid label="T_IDENTIFIER"]
  117 -> 38 [style=solid label="T_INT_CONST"]
  117 -> 39 [style=solid label="T_FLOAT_CONST"]
  117 -> 40 [style=solid label="T_STRING_CONST"]
  117 -> 110 [style=dashed label="DECLARATOR"]
  117 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  117 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  117 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  117 -> 57 [style=dashed label="UNARY_OPERATOR"]
  117 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  117 -> 154 [style=dashed label="ADDITIVE_EXPRESSION"]
  118 [label="State 118\n\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l101 SHIFT_EXPRESSION: SHIFT_EXPRESSION T_LSHIFT_OP . ADDITIVE_EXPRESSION\l"]
  118 -> 25 [style=solid label="T_SIZEOF"]
  118 -> 27 [style=solid label="T_NOT"]
  118 -> 28 [style=solid label="T_INVERT"]
  118 -> 29 [style=solid label="T_MINUS"]
  118 -> 30 [style=solid label="T_PLUS"]
  118 -> 31 [style=solid label="T_MULT"]
  118 -> 32 [style=solid label="T_INC_OP"]
  118 -> 33 [style=solid label="T_DEC_OP"]
  118 -> 34 [style=solid label="T_AND_OP"]
  118 -> 36 [style=solid label="T_L_PARENTHESIS"]
  118 -> 37 [style=solid label="T_IDENTIFIER"]
  118 -> 38 [style=solid label="T_INT_CONST"]
  118 -> 39 [style=solid label="T_FLOAT_CONST"]
  118 -> 40 [style=solid label="T_STRING_CONST"]
  118 -> 110 [style=dashed label="DECLARATOR"]
  118 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  118 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  118 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  118 -> 57 [style=dashed label="UNARY_OPERATOR"]
  118 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  118 -> 155 [style=dashed label="ADDITIVE_EXPRESSION"]
  119 [label="State 119\n\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l104 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION T_LT . SHIFT_EXPRESSION\l"]
  119 -> 25 [style=solid label="T_SIZEOF"]
  119 -> 27 [style=solid label="T_NOT"]
  119 -> 28 [style=solid label="T_INVERT"]
  119 -> 29 [style=solid label="T_MINUS"]
  119 -> 30 [style=solid label="T_PLUS"]
  119 -> 31 [style=solid label="T_MULT"]
  119 -> 32 [style=solid label="T_INC_OP"]
  119 -> 33 [style=solid label="T_DEC_OP"]
  119 -> 34 [style=solid label="T_AND_OP"]
  119 -> 36 [style=solid label="T_L_PARENTHESIS"]
  119 -> 37 [style=solid label="T_IDENTIFIER"]
  119 -> 38 [style=solid label="T_INT_CONST"]
  119 -> 39 [style=solid label="T_FLOAT_CONST"]
  119 -> 40 [style=solid label="T_STRING_CONST"]
  119 -> 110 [style=dashed label="DECLARATOR"]
  119 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  119 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  119 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  119 -> 57 [style=dashed label="UNARY_OPERATOR"]
  119 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  119 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  119 -> 156 [style=dashed label="SHIFT_EXPRESSION"]
  120 [label="State 120\n\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l105 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION T_GT . SHIFT_EXPRESSION\l"]
  120 -> 25 [style=solid label="T_SIZEOF"]
  120 -> 27 [style=solid label="T_NOT"]
  120 -> 28 [style=solid label="T_INVERT"]
  120 -> 29 [style=solid label="T_MINUS"]
  120 -> 30 [style=solid label="T_PLUS"]
  120 -> 31 [style=solid label="T_MULT"]
  120 -> 32 [style=solid label="T_INC_OP"]
  120 -> 33 [style=solid label="T_DEC_OP"]
  120 -> 34 [style=solid label="T_AND_OP"]
  120 -> 36 [style=solid label="T_L_PARENTHESIS"]
  120 -> 37 [style=solid label="T_IDENTIFIER"]
  120 -> 38 [style=solid label="T_INT_CONST"]
  120 -> 39 [style=solid label="T_FLOAT_CONST"]
  120 -> 40 [style=solid label="T_STRING_CONST"]
  120 -> 110 [style=dashed label="DECLARATOR"]
  120 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  120 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  120 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  120 -> 57 [style=dashed label="UNARY_OPERATOR"]
  120 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  120 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  120 -> 157 [style=dashed label="SHIFT_EXPRESSION"]
  121 [label="State 121\n\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l106 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION T_LE_OP . SHIFT_EXPRESSION\l"]
  121 -> 25 [style=solid label="T_SIZEOF"]
  121 -> 27 [style=solid label="T_NOT"]
  121 -> 28 [style=solid label="T_INVERT"]
  121 -> 29 [style=solid label="T_MINUS"]
  121 -> 30 [style=solid label="T_PLUS"]
  121 -> 31 [style=solid label="T_MULT"]
  121 -> 32 [style=solid label="T_INC_OP"]
  121 -> 33 [style=solid label="T_DEC_OP"]
  121 -> 34 [style=solid label="T_AND_OP"]
  121 -> 36 [style=solid label="T_L_PARENTHESIS"]
  121 -> 37 [style=solid label="T_IDENTIFIER"]
  121 -> 38 [style=solid label="T_INT_CONST"]
  121 -> 39 [style=solid label="T_FLOAT_CONST"]
  121 -> 40 [style=solid label="T_STRING_CONST"]
  121 -> 110 [style=dashed label="DECLARATOR"]
  121 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  121 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  121 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  121 -> 57 [style=dashed label="UNARY_OPERATOR"]
  121 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  121 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  121 -> 158 [style=dashed label="SHIFT_EXPRESSION"]
  122 [label="State 122\n\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l107 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION T_GE_OP . SHIFT_EXPRESSION\l"]
  122 -> 25 [style=solid label="T_SIZEOF"]
  122 -> 27 [style=solid label="T_NOT"]
  122 -> 28 [style=solid label="T_INVERT"]
  122 -> 29 [style=solid label="T_MINUS"]
  122 -> 30 [style=solid label="T_PLUS"]
  122 -> 31 [style=solid label="T_MULT"]
  122 -> 32 [style=solid label="T_INC_OP"]
  122 -> 33 [style=solid label="T_DEC_OP"]
  122 -> 34 [style=solid label="T_AND_OP"]
  122 -> 36 [style=solid label="T_L_PARENTHESIS"]
  122 -> 37 [style=solid label="T_IDENTIFIER"]
  122 -> 38 [style=solid label="T_INT_CONST"]
  122 -> 39 [style=solid label="T_FLOAT_CONST"]
  122 -> 40 [style=solid label="T_STRING_CONST"]
  122 -> 110 [style=dashed label="DECLARATOR"]
  122 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  122 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  122 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  122 -> 57 [style=dashed label="UNARY_OPERATOR"]
  122 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  122 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  122 -> 159 [style=dashed label="SHIFT_EXPRESSION"]
  123 [label="State 123\n\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l109 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION T_EQ_OP . RELATIONAL_EXPRESSION\l"]
  123 -> 25 [style=solid label="T_SIZEOF"]
  123 -> 27 [style=solid label="T_NOT"]
  123 -> 28 [style=solid label="T_INVERT"]
  123 -> 29 [style=solid label="T_MINUS"]
  123 -> 30 [style=solid label="T_PLUS"]
  123 -> 31 [style=solid label="T_MULT"]
  123 -> 32 [style=solid label="T_INC_OP"]
  123 -> 33 [style=solid label="T_DEC_OP"]
  123 -> 34 [style=solid label="T_AND_OP"]
  123 -> 36 [style=solid label="T_L_PARENTHESIS"]
  123 -> 37 [style=solid label="T_IDENTIFIER"]
  123 -> 38 [style=solid label="T_INT_CONST"]
  123 -> 39 [style=solid label="T_FLOAT_CONST"]
  123 -> 40 [style=solid label="T_STRING_CONST"]
  123 -> 110 [style=dashed label="DECLARATOR"]
  123 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  123 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  123 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  123 -> 57 [style=dashed label="UNARY_OPERATOR"]
  123 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  123 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  123 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  123 -> 160 [style=dashed label="RELATIONAL_EXPRESSION"]
  124 [label="State 124\n\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l110 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION T_NE_OP . RELATIONAL_EXPRESSION\l"]
  124 -> 25 [style=solid label="T_SIZEOF"]
  124 -> 27 [style=solid label="T_NOT"]
  124 -> 28 [style=solid label="T_INVERT"]
  124 -> 29 [style=solid label="T_MINUS"]
  124 -> 30 [style=solid label="T_PLUS"]
  124 -> 31 [style=solid label="T_MULT"]
  124 -> 32 [style=solid label="T_INC_OP"]
  124 -> 33 [style=solid label="T_DEC_OP"]
  124 -> 34 [style=solid label="T_AND_OP"]
  124 -> 36 [style=solid label="T_L_PARENTHESIS"]
  124 -> 37 [style=solid label="T_IDENTIFIER"]
  124 -> 38 [style=solid label="T_INT_CONST"]
  124 -> 39 [style=solid label="T_FLOAT_CONST"]
  124 -> 40 [style=solid label="T_STRING_CONST"]
  124 -> 110 [style=dashed label="DECLARATOR"]
  124 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  124 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  124 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  124 -> 57 [style=dashed label="UNARY_OPERATOR"]
  124 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  124 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  124 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  124 -> 161 [style=dashed label="RELATIONAL_EXPRESSION"]
  125 [label="State 125\n\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l108 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l109                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l110                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l112 BITWISE_AND_EXPRESSION: BITWISE_AND_EXPRESSION T_AND . EQUALITY_EXPRESSION\l"]
  125 -> 25 [style=solid label="T_SIZEOF"]
  125 -> 27 [style=solid label="T_NOT"]
  125 -> 28 [style=solid label="T_INVERT"]
  125 -> 29 [style=solid label="T_MINUS"]
  125 -> 30 [style=solid label="T_PLUS"]
  125 -> 31 [style=solid label="T_MULT"]
  125 -> 32 [style=solid label="T_INC_OP"]
  125 -> 33 [style=solid label="T_DEC_OP"]
  125 -> 34 [style=solid label="T_AND_OP"]
  125 -> 36 [style=solid label="T_L_PARENTHESIS"]
  125 -> 37 [style=solid label="T_IDENTIFIER"]
  125 -> 38 [style=solid label="T_INT_CONST"]
  125 -> 39 [style=solid label="T_FLOAT_CONST"]
  125 -> 40 [style=solid label="T_STRING_CONST"]
  125 -> 110 [style=dashed label="DECLARATOR"]
  125 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  125 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  125 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  125 -> 57 [style=dashed label="UNARY_OPERATOR"]
  125 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  125 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  125 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  125 -> 61 [style=dashed label="RELATIONAL_EXPRESSION"]
  125 -> 162 [style=dashed label="EQUALITY_EXPRESSION"]
  126 [label="State 126\n\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l108 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l109                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l110                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l111 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l112                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l114 BITWISE_XOR_EXPRESSION: BITWISE_XOR_EXPRESSION T_XOR . BITWISE_AND_EXPRESSION\l"]
  126 -> 25 [style=solid label="T_SIZEOF"]
  126 -> 27 [style=solid label="T_NOT"]
  126 -> 28 [style=solid label="T_INVERT"]
  126 -> 29 [style=solid label="T_MINUS"]
  126 -> 30 [style=solid label="T_PLUS"]
  126 -> 31 [style=solid label="T_MULT"]
  126 -> 32 [style=solid label="T_INC_OP"]
  126 -> 33 [style=solid label="T_DEC_OP"]
  126 -> 34 [style=solid label="T_AND_OP"]
  126 -> 36 [style=solid label="T_L_PARENTHESIS"]
  126 -> 37 [style=solid label="T_IDENTIFIER"]
  126 -> 38 [style=solid label="T_INT_CONST"]
  126 -> 39 [style=solid label="T_FLOAT_CONST"]
  126 -> 40 [style=solid label="T_STRING_CONST"]
  126 -> 110 [style=dashed label="DECLARATOR"]
  126 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  126 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  126 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  126 -> 57 [style=dashed label="UNARY_OPERATOR"]
  126 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  126 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  126 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  126 -> 61 [style=dashed label="RELATIONAL_EXPRESSION"]
  126 -> 62 [style=dashed label="EQUALITY_EXPRESSION"]
  126 -> 163 [style=dashed label="BITWISE_AND_EXPRESSION"]
  127 [label="State 127\n\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l108 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l109                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l110                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l111 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l112                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l113 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l114                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l115 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l116                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l116                      | BITWISE_OR_EXPRESSION T_OR . BITWISE_OR_EXPRESSION\l"]
  127 -> 25 [style=solid label="T_SIZEOF"]
  127 -> 27 [style=solid label="T_NOT"]
  127 -> 28 [style=solid label="T_INVERT"]
  127 -> 29 [style=solid label="T_MINUS"]
  127 -> 30 [style=solid label="T_PLUS"]
  127 -> 31 [style=solid label="T_MULT"]
  127 -> 32 [style=solid label="T_INC_OP"]
  127 -> 33 [style=solid label="T_DEC_OP"]
  127 -> 34 [style=solid label="T_AND_OP"]
  127 -> 36 [style=solid label="T_L_PARENTHESIS"]
  127 -> 37 [style=solid label="T_IDENTIFIER"]
  127 -> 38 [style=solid label="T_INT_CONST"]
  127 -> 39 [style=solid label="T_FLOAT_CONST"]
  127 -> 40 [style=solid label="T_STRING_CONST"]
  127 -> 110 [style=dashed label="DECLARATOR"]
  127 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  127 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  127 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  127 -> 57 [style=dashed label="UNARY_OPERATOR"]
  127 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  127 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  127 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  127 -> 61 [style=dashed label="RELATIONAL_EXPRESSION"]
  127 -> 62 [style=dashed label="EQUALITY_EXPRESSION"]
  127 -> 63 [style=dashed label="BITWISE_AND_EXPRESSION"]
  127 -> 64 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  127 -> 164 [style=dashed label="BITWISE_OR_EXPRESSION"]
  128 [label="State 128\n\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l108 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l109                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l110                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l111 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l112                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l113 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l114                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l115 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l116                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l118 BOOLEAN_AND_EXPRESSION: BOOLEAN_AND_EXPRESSION T_AND_OP . BITWISE_OR_EXPRESSION\l"]
  128 -> 25 [style=solid label="T_SIZEOF"]
  128 -> 27 [style=solid label="T_NOT"]
  128 -> 28 [style=solid label="T_INVERT"]
  128 -> 29 [style=solid label="T_MINUS"]
  128 -> 30 [style=solid label="T_PLUS"]
  128 -> 31 [style=solid label="T_MULT"]
  128 -> 32 [style=solid label="T_INC_OP"]
  128 -> 33 [style=solid label="T_DEC_OP"]
  128 -> 34 [style=solid label="T_AND_OP"]
  128 -> 36 [style=solid label="T_L_PARENTHESIS"]
  128 -> 37 [style=solid label="T_IDENTIFIER"]
  128 -> 38 [style=solid label="T_INT_CONST"]
  128 -> 39 [style=solid label="T_FLOAT_CONST"]
  128 -> 40 [style=solid label="T_STRING_CONST"]
  128 -> 110 [style=dashed label="DECLARATOR"]
  128 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  128 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  128 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  128 -> 57 [style=dashed label="UNARY_OPERATOR"]
  128 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  128 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  128 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  128 -> 61 [style=dashed label="RELATIONAL_EXPRESSION"]
  128 -> 62 [style=dashed label="EQUALITY_EXPRESSION"]
  128 -> 63 [style=dashed label="BITWISE_AND_EXPRESSION"]
  128 -> 64 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  128 -> 165 [style=dashed label="BITWISE_OR_EXPRESSION"]
  129 [label="State 129\n\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l108 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l109                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l110                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l111 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l112                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l113 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l114                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l115 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l116                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l117 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l118                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l120 BOOLEAN_OR_EXPRESSION: BOOLEAN_OR_EXPRESSION T_OR_OP . BOOLEAN_AND_EXPRESSION\l"]
  129 -> 25 [style=solid label="T_SIZEOF"]
  129 -> 27 [style=solid label="T_NOT"]
  129 -> 28 [style=solid label="T_INVERT"]
  129 -> 29 [style=solid label="T_MINUS"]
  129 -> 30 [style=solid label="T_PLUS"]
  129 -> 31 [style=solid label="T_MULT"]
  129 -> 32 [style=solid label="T_INC_OP"]
  129 -> 33 [style=solid label="T_DEC_OP"]
  129 -> 34 [style=solid label="T_AND_OP"]
  129 -> 36 [style=solid label="T_L_PARENTHESIS"]
  129 -> 37 [style=solid label="T_IDENTIFIER"]
  129 -> 38 [style=solid label="T_INT_CONST"]
  129 -> 39 [style=solid label="T_FLOAT_CONST"]
  129 -> 40 [style=solid label="T_STRING_CONST"]
  129 -> 110 [style=dashed label="DECLARATOR"]
  129 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  129 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  129 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  129 -> 57 [style=dashed label="UNARY_OPERATOR"]
  129 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  129 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  129 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  129 -> 61 [style=dashed label="RELATIONAL_EXPRESSION"]
  129 -> 62 [style=dashed label="EQUALITY_EXPRESSION"]
  129 -> 63 [style=dashed label="BITWISE_AND_EXPRESSION"]
  129 -> 64 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  129 -> 65 [style=dashed label="BITWISE_OR_EXPRESSION"]
  129 -> 166 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  130 [label="State 130\n\l  6 FRAME: VARIABLE_DECLARATION T_SEMICOLON FRAME .\l"]
  130 -> "130R6" [style=solid]
 "130R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  131 [label="State 131\n\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 68 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l 68                     | DECLARATOR T_EQ_ASSIGN . MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l 69                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l 69                     | DECLARATOR T_EQ_ASSIGN . ASSIGNMENT_STATEMENT\l 70                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l 70                     | DECLARATOR T_EQ_ASSIGN . MATH_OR_BITWISE_EXPRESSION\l 71                     | . DECLARATOR\l 72 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l 73                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l108 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l109                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l110                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l111 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l112                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l113 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l114                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l115 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l116                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l117 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l118                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l119 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l120                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l121 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  131 -> 25 [style=solid label="T_SIZEOF"]
  131 -> 27 [style=solid label="T_NOT"]
  131 -> 28 [style=solid label="T_INVERT"]
  131 -> 29 [style=solid label="T_MINUS"]
  131 -> 30 [style=solid label="T_PLUS"]
  131 -> 31 [style=solid label="T_MULT"]
  131 -> 32 [style=solid label="T_INC_OP"]
  131 -> 33 [style=solid label="T_DEC_OP"]
  131 -> 34 [style=solid label="T_AND_OP"]
  131 -> 36 [style=solid label="T_L_PARENTHESIS"]
  131 -> 37 [style=solid label="T_IDENTIFIER"]
  131 -> 38 [style=solid label="T_INT_CONST"]
  131 -> 39 [style=solid label="T_FLOAT_CONST"]
  131 -> 40 [style=solid label="T_STRING_CONST"]
  131 -> 49 [style=dashed label="DECLARATOR"]
  131 -> 143 [style=dashed label="ASSIGNMENT_STATEMENT"]
  131 -> 144 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  131 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  131 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  131 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  131 -> 57 [style=dashed label="UNARY_OPERATOR"]
  131 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  131 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  131 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  131 -> 61 [style=dashed label="RELATIONAL_EXPRESSION"]
  131 -> 62 [style=dashed label="EQUALITY_EXPRESSION"]
  131 -> 63 [style=dashed label="BITWISE_AND_EXPRESSION"]
  131 -> 64 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  131 -> 65 [style=dashed label="BITWISE_OR_EXPRESSION"]
  131 -> 66 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  131 -> 67 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  131 -> 68 [style=dashed label="CONDITIONAL_EXPRESSION"]
  132 [label="State 132\n\l 12 WRAPPED_ARGUMENTS: T_L_PARENTHESIS . MULTIPLE_ARGUMENTS T_R_PARENTHESIS\l 13                  | T_L_PARENTHESIS . T_R_PARENTHESIS\l 14 MULTIPLE_ARGUMENTS: . SINGLE_ARGUMENT T_COMMA MULTIPLE_ARGUMENTS\l 15                   | . SINGLE_ARGUMENT\l 16 SINGLE_ARGUMENT: . TYPE_SPECIFIER DECLARATOR\l 59 TYPE_SPECIFIER: . T_VOID\l 60               | . T_CHAR\l 61               | . T_SHORT\l 62               | . T_INT\l 63               | . T_LONG\l 64               | . T_FLOAT\l 65               | . T_DOUBLE\l 66               | . T_SIGNED\l 67               | . T_UNSIGNED\l"]
  132 -> 1 [style=solid label="T_CHAR"]
  132 -> 2 [style=solid label="T_DOUBLE"]
  132 -> 3 [style=solid label="T_FLOAT"]
  132 -> 4 [style=solid label="T_INT"]
  132 -> 5 [style=solid label="T_LONG"]
  132 -> 6 [style=solid label="T_SHORT"]
  132 -> 7 [style=solid label="T_SIGNED"]
  132 -> 8 [style=solid label="T_UNSIGNED"]
  132 -> 9 [style=solid label="T_VOID"]
  132 -> 167 [style=solid label="T_R_PARENTHESIS"]
  132 -> 168 [style=dashed label="MULTIPLE_ARGUMENTS"]
  132 -> 169 [style=dashed label="SINGLE_ARGUMENT"]
  132 -> 170 [style=dashed label="TYPE_SPECIFIER"]
  133 [label="State 133\n\l 10 FUNCTION_DECLARATION: TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS . T_SEMICOLON\l 11 FUNCTION_DEFINITION: TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS . SCOPE\l 21 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 22      | . T_L_BRACE T_R_BRACE\l"]
  133 -> 171 [style=solid label="T_SEMICOLON"]
  133 -> 10 [style=solid label="T_L_BRACE"]
  133 -> 172 [style=dashed label="SCOPE"]
  134 [label="State 134\n\l 34 ITERATION_STATEMENT: T_DO SINGLE_STATEMENT T_WHILE . T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l"]
  134 -> 173 [style=solid label="T_L_PARENTHESIS"]
  135 [label="State 135\n\l 35 ITERATION_STATEMENT: T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT . EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 40 EXPRESSION_STATEMENT: . EXPRESSION T_SEMICOLON\l 41 EXPRESSION: . VARIABLE_DECLARATION\l 42           | . ASSIGNMENT_STATEMENT\l 43           | . MATH_OR_BITWISE_EXPRESSION\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 58 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 59 TYPE_SPECIFIER: . T_VOID\l 60               | . T_CHAR\l 61               | . T_SHORT\l 62               | . T_INT\l 63               | . T_LONG\l 64               | . T_FLOAT\l 65               | . T_DOUBLE\l 66               | . T_SIGNED\l 67               | . T_UNSIGNED\l 68 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l 69                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l 70                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l 71                     | . DECLARATOR\l 72 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l 73                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l108 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l109                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l110                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l111 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l112                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l113 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l114                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l115 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l116                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l117 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l118                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l119 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l120                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l121 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  135 -> 1 [style=solid label="T_CHAR"]
  135 -> 2 [style=solid label="T_DOUBLE"]
  135 -> 3 [style=solid label="T_FLOAT"]
  135 -> 4 [style=solid label="T_INT"]
  135 -> 5 [style=solid label="T_LONG"]
  135 -> 6 [style=solid label="T_SHORT"]
  135 -> 7 [style=solid label="T_SIGNED"]
  135 -> 25 [style=solid label="T_SIZEOF"]
  135 -> 8 [style=solid label="T_UNSIGNED"]
  135 -> 9 [style=solid label="T_VOID"]
  135 -> 27 [style=solid label="T_NOT"]
  135 -> 28 [style=solid label="T_INVERT"]
  135 -> 29 [style=solid label="T_MINUS"]
  135 -> 30 [style=solid label="T_PLUS"]
  135 -> 31 [style=solid label="T_MULT"]
  135 -> 32 [style=solid label="T_INC_OP"]
  135 -> 33 [style=solid label="T_DEC_OP"]
  135 -> 34 [style=solid label="T_AND_OP"]
  135 -> 36 [style=solid label="T_L_PARENTHESIS"]
  135 -> 37 [style=solid label="T_IDENTIFIER"]
  135 -> 38 [style=solid label="T_INT_CONST"]
  135 -> 39 [style=solid label="T_FLOAT_CONST"]
  135 -> 40 [style=solid label="T_STRING_CONST"]
  135 -> 174 [style=dashed label="EXPRESSION_STATEMENT"]
  135 -> 48 [style=dashed label="EXPRESSION"]
  135 -> 49 [style=dashed label="DECLARATOR"]
  135 -> 50 [style=dashed label="VARIABLE_DECLARATION"]
  135 -> 51 [style=dashed label="TYPE_SPECIFIER"]
  135 -> 52 [style=dashed label="ASSIGNMENT_STATEMENT"]
  135 -> 53 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  135 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  135 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  135 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  135 -> 57 [style=dashed label="UNARY_OPERATOR"]
  135 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  135 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  135 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  135 -> 61 [style=dashed label="RELATIONAL_EXPRESSION"]
  135 -> 62 [style=dashed label="EQUALITY_EXPRESSION"]
  135 -> 63 [style=dashed label="BITWISE_AND_EXPRESSION"]
  135 -> 64 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  135 -> 65 [style=dashed label="BITWISE_OR_EXPRESSION"]
  135 -> 66 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  135 -> 67 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  135 -> 68 [style=dashed label="CONDITIONAL_EXPRESSION"]
  136 [label="State 136\n\l 30 SELECTION_STATEMENT: T_IF T_L_PARENTHESIS EXPRESSION . T_R_PARENTHESIS SINGLE_STATEMENT\l 31                    | T_IF T_L_PARENTHESIS EXPRESSION . T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l"]
  136 -> 175 [style=solid label="T_R_PARENTHESIS"]
  137 [label="State 137\n\l 37 JUMP_STATEMENT: T_RETURN EXPRESSION T_SEMICOLON .\l"]
  137 -> "137R37" [style=solid]
 "137R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  138 [label="State 138\n\l 80 PRIMARY_EXPRESSION: T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER . T_R_PARENTHESIS\l"]
  138 -> 176 [style=solid label="T_R_PARENTHESIS"]
  139 [label="State 139\n\l 33 ITERATION_STATEMENT: T_WHILE T_L_PARENTHESIS EXPRESSION . T_R_PARENTHESIS SINGLE_STATEMENT\l"]
  139 -> 177 [style=solid label="T_R_PARENTHESIS"]
  140 [label="State 140\n\l 44 ASSIGNMENT_OPERATOR: T_EQ_ASSIGN .\l"]
  140 -> "140R44" [style=solid]
 "140R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  141 [label="State 141\n\l 78 PRIMARY_EXPRESSION: T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS .\l"]
  141 -> "141R78" [style=solid]
 "141R78" [label="R78", fillcolor=3, shape=diamond, style=filled]
  142 [label="State 142\n\l 57 DECLARATOR: T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION . T_R_BRACKET\l"]
  142 -> 178 [style=solid label="T_R_BRACKET"]
  143 [label="State 143\n\l 69 ASSIGNMENT_STATEMENT: DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT .\l"]
  143 -> "143R69" [style=solid]
 "143R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
  144 [label="State 144\n\l 68 ASSIGNMENT_STATEMENT: DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION . T_COMMA ASSIGNMENT_STATEMENT\l 70                     | DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION .  [T_SEMICOLON, T_R_PARENTHESIS]\l"]
  144 -> 179 [style=solid label="T_COMMA"]
  144 -> "144R70" [style=solid]
 "144R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  145 [label="State 145\n\l 18 WRAPPED_PARAMETERS: T_L_PARENTHESIS T_R_PARENTHESIS .\l"]
  145 -> "145R18" [style=solid]
 "145R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  146 [label="State 146\n\l 17 WRAPPED_PARAMETERS: T_L_PARENTHESIS MULTIPLE_PARAMETERS . T_R_PARENTHESIS\l"]
  146 -> 180 [style=solid label="T_R_PARENTHESIS"]
  147 [label="State 147\n\l 19 MULTIPLE_PARAMETERS: MATH_OR_BITWISE_EXPRESSION . T_COMMA MULTIPLE_PARAMETERS\l 20                    | MATH_OR_BITWISE_EXPRESSION .  [T_R_PARENTHESIS]\l"]
  147 -> 181 [style=solid label="T_COMMA"]
  147 -> "147R20" [style=solid]
 "147R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  148 [label="State 148\n\l 73 MATH_OR_BITWISE_EXPRESSION: DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION .\l"]
  148 -> "148R73" [style=solid]
 "148R73" [label="R73", fillcolor=3, shape=diamond, style=filled]
  149 [label="State 149\n\l 94 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION .\l"]
  149 -> "149R94" [style=solid]
 "149R94" [label="R94", fillcolor=3, shape=diamond, style=filled]
  150 [label="State 150\n\l 95 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION .\l"]
  150 -> "150R95" [style=solid]
 "150R95" [label="R95", fillcolor=3, shape=diamond, style=filled]
  151 [label="State 151\n\l 96 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION .\l"]
  151 -> "151R96" [style=solid]
 "151R96" [label="R96", fillcolor=3, shape=diamond, style=filled]
  152 [label="State 152\n\l 94 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . T_MULT UNARY_EXPRESSION\l 95                          | MULTIPLICATIVE_EXPRESSION . T_DIV UNARY_EXPRESSION\l 96                          | MULTIPLICATIVE_EXPRESSION . T_MOD UNARY_EXPRESSION\l 99 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION .  [T_AND, T_MINUS, T_PLUS, T_LT, T_GT, T_XOR, T_OR, T_RSHIFT_OP, T_LSHIFT_OP, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  152 -> 112 [style=solid label="T_MULT"]
  152 -> 113 [style=solid label="T_DIV"]
  152 -> 114 [style=solid label="T_MOD"]
  152 -> "152R99" [style=solid]
 "152R99" [label="R99", fillcolor=3, shape=diamond, style=filled]
  153 [label="State 153\n\l 94 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . T_MULT UNARY_EXPRESSION\l 95                          | MULTIPLICATIVE_EXPRESSION . T_DIV UNARY_EXPRESSION\l 96                          | MULTIPLICATIVE_EXPRESSION . T_MOD UNARY_EXPRESSION\l 98 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION .  [T_AND, T_MINUS, T_PLUS, T_LT, T_GT, T_XOR, T_OR, T_RSHIFT_OP, T_LSHIFT_OP, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  153 -> 112 [style=solid label="T_MULT"]
  153 -> 113 [style=solid label="T_DIV"]
  153 -> 114 [style=solid label="T_MOD"]
  153 -> "153R98" [style=solid]
 "153R98" [label="R98", fillcolor=3, shape=diamond, style=filled]
  154 [label="State 154\n\l 98 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | ADDITIVE_EXPRESSION . T_MINUS MULTIPLICATIVE_EXPRESSION\l102 SHIFT_EXPRESSION: SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION .  [T_AND, T_LT, T_GT, T_XOR, T_OR, T_RSHIFT_OP, T_LSHIFT_OP, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  154 -> 115 [style=solid label="T_MINUS"]
  154 -> 116 [style=solid label="T_PLUS"]
  154 -> "154R102" [style=solid]
 "154R102" [label="R102", fillcolor=3, shape=diamond, style=filled]
  155 [label="State 155\n\l 98 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | ADDITIVE_EXPRESSION . T_MINUS MULTIPLICATIVE_EXPRESSION\l101 SHIFT_EXPRESSION: SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION .  [T_AND, T_LT, T_GT, T_XOR, T_OR, T_RSHIFT_OP, T_LSHIFT_OP, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  155 -> 115 [style=solid label="T_MINUS"]
  155 -> 116 [style=solid label="T_PLUS"]
  155 -> "155R101" [style=solid]
 "155R101" [label="R101", fillcolor=3, shape=diamond, style=filled]
  156 [label="State 156\n\l101 SHIFT_EXPRESSION: SHIFT_EXPRESSION . T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | SHIFT_EXPRESSION . T_RSHIFT_OP ADDITIVE_EXPRESSION\l104 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION .  [T_AND, T_LT, T_GT, T_XOR, T_OR, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  156 -> 117 [style=solid label="T_RSHIFT_OP"]
  156 -> 118 [style=solid label="T_LSHIFT_OP"]
  156 -> "156R104" [style=solid]
 "156R104" [label="R104", fillcolor=3, shape=diamond, style=filled]
  157 [label="State 157\n\l101 SHIFT_EXPRESSION: SHIFT_EXPRESSION . T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | SHIFT_EXPRESSION . T_RSHIFT_OP ADDITIVE_EXPRESSION\l105 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION .  [T_AND, T_LT, T_GT, T_XOR, T_OR, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  157 -> 117 [style=solid label="T_RSHIFT_OP"]
  157 -> 118 [style=solid label="T_LSHIFT_OP"]
  157 -> "157R105" [style=solid]
 "157R105" [label="R105", fillcolor=3, shape=diamond, style=filled]
  158 [label="State 158\n\l101 SHIFT_EXPRESSION: SHIFT_EXPRESSION . T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | SHIFT_EXPRESSION . T_RSHIFT_OP ADDITIVE_EXPRESSION\l106 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION .  [T_AND, T_LT, T_GT, T_XOR, T_OR, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  158 -> 117 [style=solid label="T_RSHIFT_OP"]
  158 -> 118 [style=solid label="T_LSHIFT_OP"]
  158 -> "158R106" [style=solid]
 "158R106" [label="R106", fillcolor=3, shape=diamond, style=filled]
  159 [label="State 159\n\l101 SHIFT_EXPRESSION: SHIFT_EXPRESSION . T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | SHIFT_EXPRESSION . T_RSHIFT_OP ADDITIVE_EXPRESSION\l107 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION .  [T_AND, T_LT, T_GT, T_XOR, T_OR, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  159 -> 117 [style=solid label="T_RSHIFT_OP"]
  159 -> 118 [style=solid label="T_LSHIFT_OP"]
  159 -> "159R107" [style=solid]
 "159R107" [label="R107", fillcolor=3, shape=diamond, style=filled]
  160 [label="State 160\n\l104 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION . T_LT SHIFT_EXPRESSION\l105                      | RELATIONAL_EXPRESSION . T_GT SHIFT_EXPRESSION\l106                      | RELATIONAL_EXPRESSION . T_LE_OP SHIFT_EXPRESSION\l107                      | RELATIONAL_EXPRESSION . T_GE_OP SHIFT_EXPRESSION\l109 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION .  [T_AND, T_XOR, T_OR, T_AND_OP, T_OR_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  160 -> 119 [style=solid label="T_LT"]
  160 -> 120 [style=solid label="T_GT"]
  160 -> 121 [style=solid label="T_LE_OP"]
  160 -> 122 [style=solid label="T_GE_OP"]
  160 -> "160R109" [style=solid]
 "160R109" [label="R109", fillcolor=3, shape=diamond, style=filled]
  161 [label="State 161\n\l104 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION . T_LT SHIFT_EXPRESSION\l105                      | RELATIONAL_EXPRESSION . T_GT SHIFT_EXPRESSION\l106                      | RELATIONAL_EXPRESSION . T_LE_OP SHIFT_EXPRESSION\l107                      | RELATIONAL_EXPRESSION . T_GE_OP SHIFT_EXPRESSION\l110 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION .  [T_AND, T_XOR, T_OR, T_AND_OP, T_OR_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  161 -> 119 [style=solid label="T_LT"]
  161 -> 120 [style=solid label="T_GT"]
  161 -> 121 [style=solid label="T_LE_OP"]
  161 -> 122 [style=solid label="T_GE_OP"]
  161 -> "161R110" [style=solid]
 "161R110" [label="R110", fillcolor=3, shape=diamond, style=filled]
  162 [label="State 162\n\l109 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION . T_EQ_OP RELATIONAL_EXPRESSION\l110                    | EQUALITY_EXPRESSION . T_NE_OP RELATIONAL_EXPRESSION\l112 BITWISE_AND_EXPRESSION: BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION .  [T_AND, T_XOR, T_OR, T_AND_OP, T_OR_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  162 -> 123 [style=solid label="T_EQ_OP"]
  162 -> 124 [style=solid label="T_NE_OP"]
  162 -> "162R112" [style=solid]
 "162R112" [label="R112", fillcolor=3, shape=diamond, style=filled]
  163 [label="State 163\n\l112 BITWISE_AND_EXPRESSION: BITWISE_AND_EXPRESSION . T_AND EQUALITY_EXPRESSION\l114 BITWISE_XOR_EXPRESSION: BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION .  [T_XOR, T_OR, T_AND_OP, T_OR_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  163 -> 125 [style=solid label="T_AND"]
  163 -> "163R114" [style=solid]
 "163R114" [label="R114", fillcolor=3, shape=diamond, style=filled]
  164 [label="State 164\n\l116 BITWISE_OR_EXPRESSION: BITWISE_OR_EXPRESSION . T_OR BITWISE_OR_EXPRESSION\l116                      | BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION .  [T_OR, T_AND_OP, T_OR_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  164 -> 127 [style=solid label="T_OR"]
  164 -> "164R116d" [label="[T_OR]", style=solid]
 "164R116d" [label="R116", fillcolor=5, shape=diamond, style=filled]
  164 -> "164R116" [style=solid]
 "164R116" [label="R116", fillcolor=3, shape=diamond, style=filled]
  165 [label="State 165\n\l116 BITWISE_OR_EXPRESSION: BITWISE_OR_EXPRESSION . T_OR BITWISE_OR_EXPRESSION\l118 BOOLEAN_AND_EXPRESSION: BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION .  [T_AND_OP, T_OR_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  165 -> 127 [style=solid label="T_OR"]
  165 -> "165R118" [style=solid]
 "165R118" [label="R118", fillcolor=3, shape=diamond, style=filled]
  166 [label="State 166\n\l118 BOOLEAN_AND_EXPRESSION: BOOLEAN_AND_EXPRESSION . T_AND_OP BITWISE_OR_EXPRESSION\l120 BOOLEAN_OR_EXPRESSION: BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION .  [T_OR_OP, T_SEMICOLON, T_COMMA, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  166 -> 128 [style=solid label="T_AND_OP"]
  166 -> "166R120" [style=solid]
 "166R120" [label="R120", fillcolor=3, shape=diamond, style=filled]
  167 [label="State 167\n\l 13 WRAPPED_ARGUMENTS: T_L_PARENTHESIS T_R_PARENTHESIS .\l"]
  167 -> "167R13" [style=solid]
 "167R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  168 [label="State 168\n\l 12 WRAPPED_ARGUMENTS: T_L_PARENTHESIS MULTIPLE_ARGUMENTS . T_R_PARENTHESIS\l"]
  168 -> 182 [style=solid label="T_R_PARENTHESIS"]
  169 [label="State 169\n\l 14 MULTIPLE_ARGUMENTS: SINGLE_ARGUMENT . T_COMMA MULTIPLE_ARGUMENTS\l 15                   | SINGLE_ARGUMENT .  [T_R_PARENTHESIS]\l"]
  169 -> 183 [style=solid label="T_COMMA"]
  169 -> "169R15" [style=solid]
 "169R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  170 [label="State 170\n\l 16 SINGLE_ARGUMENT: TYPE_SPECIFIER . DECLARATOR\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l"]
  170 -> 31 [style=solid label="T_MULT"]
  170 -> 37 [style=solid label="T_IDENTIFIER"]
  170 -> 184 [style=dashed label="DECLARATOR"]
  171 [label="State 171\n\l 10 FUNCTION_DECLARATION: TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS T_SEMICOLON .\l"]
  171 -> "171R10" [style=solid]
 "171R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  172 [label="State 172\n\l 11 FUNCTION_DEFINITION: TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS SCOPE .\l"]
  172 -> "172R11" [style=solid]
 "172R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  173 [label="State 173\n\l 34 ITERATION_STATEMENT: T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS . EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l 41 EXPRESSION: . VARIABLE_DECLARATION\l 42           | . ASSIGNMENT_STATEMENT\l 43           | . MATH_OR_BITWISE_EXPRESSION\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 58 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 59 TYPE_SPECIFIER: . T_VOID\l 60               | . T_CHAR\l 61               | . T_SHORT\l 62               | . T_INT\l 63               | . T_LONG\l 64               | . T_FLOAT\l 65               | . T_DOUBLE\l 66               | . T_SIGNED\l 67               | . T_UNSIGNED\l 68 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l 69                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l 70                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l 71                     | . DECLARATOR\l 72 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l 73                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l108 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l109                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l110                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l111 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l112                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l113 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l114                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l115 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l116                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l117 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l118                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l119 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l120                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l121 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  173 -> 1 [style=solid label="T_CHAR"]
  173 -> 2 [style=solid label="T_DOUBLE"]
  173 -> 3 [style=solid label="T_FLOAT"]
  173 -> 4 [style=solid label="T_INT"]
  173 -> 5 [style=solid label="T_LONG"]
  173 -> 6 [style=solid label="T_SHORT"]
  173 -> 7 [style=solid label="T_SIGNED"]
  173 -> 25 [style=solid label="T_SIZEOF"]
  173 -> 8 [style=solid label="T_UNSIGNED"]
  173 -> 9 [style=solid label="T_VOID"]
  173 -> 27 [style=solid label="T_NOT"]
  173 -> 28 [style=solid label="T_INVERT"]
  173 -> 29 [style=solid label="T_MINUS"]
  173 -> 30 [style=solid label="T_PLUS"]
  173 -> 31 [style=solid label="T_MULT"]
  173 -> 32 [style=solid label="T_INC_OP"]
  173 -> 33 [style=solid label="T_DEC_OP"]
  173 -> 34 [style=solid label="T_AND_OP"]
  173 -> 36 [style=solid label="T_L_PARENTHESIS"]
  173 -> 37 [style=solid label="T_IDENTIFIER"]
  173 -> 38 [style=solid label="T_INT_CONST"]
  173 -> 39 [style=solid label="T_FLOAT_CONST"]
  173 -> 40 [style=solid label="T_STRING_CONST"]
  173 -> 185 [style=dashed label="EXPRESSION"]
  173 -> 49 [style=dashed label="DECLARATOR"]
  173 -> 50 [style=dashed label="VARIABLE_DECLARATION"]
  173 -> 51 [style=dashed label="TYPE_SPECIFIER"]
  173 -> 52 [style=dashed label="ASSIGNMENT_STATEMENT"]
  173 -> 53 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  173 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  173 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  173 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  173 -> 57 [style=dashed label="UNARY_OPERATOR"]
  173 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  173 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  173 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  173 -> 61 [style=dashed label="RELATIONAL_EXPRESSION"]
  173 -> 62 [style=dashed label="EQUALITY_EXPRESSION"]
  173 -> 63 [style=dashed label="BITWISE_AND_EXPRESSION"]
  173 -> 64 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  173 -> 65 [style=dashed label="BITWISE_OR_EXPRESSION"]
  173 -> 66 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  173 -> 67 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  173 -> 68 [style=dashed label="CONDITIONAL_EXPRESSION"]
  174 [label="State 174\n\l 35 ITERATION_STATEMENT: T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT . EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 41 EXPRESSION: . VARIABLE_DECLARATION\l 42           | . ASSIGNMENT_STATEMENT\l 43           | . MATH_OR_BITWISE_EXPRESSION\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 58 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 59 TYPE_SPECIFIER: . T_VOID\l 60               | . T_CHAR\l 61               | . T_SHORT\l 62               | . T_INT\l 63               | . T_LONG\l 64               | . T_FLOAT\l 65               | . T_DOUBLE\l 66               | . T_SIGNED\l 67               | . T_UNSIGNED\l 68 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l 69                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l 70                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l 71                     | . DECLARATOR\l 72 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l 73                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l108 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l109                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l110                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l111 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l112                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l113 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l114                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l115 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l116                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l117 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l118                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l119 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l120                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l121 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  174 -> 1 [style=solid label="T_CHAR"]
  174 -> 2 [style=solid label="T_DOUBLE"]
  174 -> 3 [style=solid label="T_FLOAT"]
  174 -> 4 [style=solid label="T_INT"]
  174 -> 5 [style=solid label="T_LONG"]
  174 -> 6 [style=solid label="T_SHORT"]
  174 -> 7 [style=solid label="T_SIGNED"]
  174 -> 25 [style=solid label="T_SIZEOF"]
  174 -> 8 [style=solid label="T_UNSIGNED"]
  174 -> 9 [style=solid label="T_VOID"]
  174 -> 27 [style=solid label="T_NOT"]
  174 -> 28 [style=solid label="T_INVERT"]
  174 -> 29 [style=solid label="T_MINUS"]
  174 -> 30 [style=solid label="T_PLUS"]
  174 -> 31 [style=solid label="T_MULT"]
  174 -> 32 [style=solid label="T_INC_OP"]
  174 -> 33 [style=solid label="T_DEC_OP"]
  174 -> 34 [style=solid label="T_AND_OP"]
  174 -> 36 [style=solid label="T_L_PARENTHESIS"]
  174 -> 37 [style=solid label="T_IDENTIFIER"]
  174 -> 38 [style=solid label="T_INT_CONST"]
  174 -> 39 [style=solid label="T_FLOAT_CONST"]
  174 -> 40 [style=solid label="T_STRING_CONST"]
  174 -> 186 [style=dashed label="EXPRESSION"]
  174 -> 49 [style=dashed label="DECLARATOR"]
  174 -> 50 [style=dashed label="VARIABLE_DECLARATION"]
  174 -> 51 [style=dashed label="TYPE_SPECIFIER"]
  174 -> 52 [style=dashed label="ASSIGNMENT_STATEMENT"]
  174 -> 53 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  174 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  174 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  174 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  174 -> 57 [style=dashed label="UNARY_OPERATOR"]
  174 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  174 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  174 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  174 -> 61 [style=dashed label="RELATIONAL_EXPRESSION"]
  174 -> 62 [style=dashed label="EQUALITY_EXPRESSION"]
  174 -> 63 [style=dashed label="BITWISE_AND_EXPRESSION"]
  174 -> 64 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  174 -> 65 [style=dashed label="BITWISE_OR_EXPRESSION"]
  174 -> 66 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  174 -> 67 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  174 -> 68 [style=dashed label="CONDITIONAL_EXPRESSION"]
  175 [label="State 175\n\l 21 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 22      | . T_L_BRACE T_R_BRACE\l 25 SINGLE_STATEMENT: . SCOPE\l 26                 | . EXPRESSION_STATEMENT\l 27                 | . JUMP_STATEMENT\l 28                 | . ITERATION_STATEMENT\l 29                 | . SELECTION_STATEMENT\l 30 SELECTION_STATEMENT: . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 30                    | T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS . SINGLE_STATEMENT\l 31                    | . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l 31                    | T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS . SINGLE_STATEMENT SELECTION_STATEMENT\l 32                    | . T_ELSE SINGLE_STATEMENT\l 33 ITERATION_STATEMENT: . T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 34                    | . T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l 35                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 36 JUMP_STATEMENT: . T_RETURN T_SEMICOLON\l 37               | . T_RETURN EXPRESSION T_SEMICOLON\l 38               | . T_BREAK T_SEMICOLON\l 39               | . T_CONTINUE T_SEMICOLON\l 40 EXPRESSION_STATEMENT: . EXPRESSION T_SEMICOLON\l 41 EXPRESSION: . VARIABLE_DECLARATION\l 42           | . ASSIGNMENT_STATEMENT\l 43           | . MATH_OR_BITWISE_EXPRESSION\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 58 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 59 TYPE_SPECIFIER: . T_VOID\l 60               | . T_CHAR\l 61               | . T_SHORT\l 62               | . T_INT\l 63               | . T_LONG\l 64               | . T_FLOAT\l 65               | . T_DOUBLE\l 66               | . T_SIGNED\l 67               | . T_UNSIGNED\l 68 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l 69                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l 70                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l 71                     | . DECLARATOR\l 72 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l 73                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l108 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l109                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l110                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l111 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l112                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l113 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l114                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l115 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l116                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l117 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l118                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l119 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l120                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l121 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  175 -> 18 [style=solid label="T_BREAK"]
  175 -> 1 [style=solid label="T_CHAR"]
  175 -> 19 [style=solid label="T_CONTINUE"]
  175 -> 20 [style=solid label="T_DO"]
  175 -> 2 [style=solid label="T_DOUBLE"]
  175 -> 21 [style=solid label="T_ELSE"]
  175 -> 3 [style=solid label="T_FLOAT"]
  175 -> 22 [style=solid label="T_FOR"]
  175 -> 23 [style=solid label="T_IF"]
  175 -> 4 [style=solid label="T_INT"]
  175 -> 5 [style=solid label="T_LONG"]
  175 -> 24 [style=solid label="T_RETURN"]
  175 -> 6 [style=solid label="T_SHORT"]
  175 -> 7 [style=solid label="T_SIGNED"]
  175 -> 25 [style=solid label="T_SIZEOF"]
  175 -> 8 [style=solid label="T_UNSIGNED"]
  175 -> 9 [style=solid label="T_VOID"]
  175 -> 26 [style=solid label="T_WHILE"]
  175 -> 27 [style=solid label="T_NOT"]
  175 -> 28 [style=solid label="T_INVERT"]
  175 -> 29 [style=solid label="T_MINUS"]
  175 -> 30 [style=solid label="T_PLUS"]
  175 -> 31 [style=solid label="T_MULT"]
  175 -> 32 [style=solid label="T_INC_OP"]
  175 -> 33 [style=solid label="T_DEC_OP"]
  175 -> 34 [style=solid label="T_AND_OP"]
  175 -> 10 [style=solid label="T_L_BRACE"]
  175 -> 36 [style=solid label="T_L_PARENTHESIS"]
  175 -> 37 [style=solid label="T_IDENTIFIER"]
  175 -> 38 [style=solid label="T_INT_CONST"]
  175 -> 39 [style=solid label="T_FLOAT_CONST"]
  175 -> 40 [style=solid label="T_STRING_CONST"]
  175 -> 41 [style=dashed label="SCOPE"]
  175 -> 187 [style=dashed label="SINGLE_STATEMENT"]
  175 -> 44 [style=dashed label="SELECTION_STATEMENT"]
  175 -> 45 [style=dashed label="ITERATION_STATEMENT"]
  175 -> 46 [style=dashed label="JUMP_STATEMENT"]
  175 -> 47 [style=dashed label="EXPRESSION_STATEMENT"]
  175 -> 48 [style=dashed label="EXPRESSION"]
  175 -> 49 [style=dashed label="DECLARATOR"]
  175 -> 50 [style=dashed label="VARIABLE_DECLARATION"]
  175 -> 51 [style=dashed label="TYPE_SPECIFIER"]
  175 -> 52 [style=dashed label="ASSIGNMENT_STATEMENT"]
  175 -> 53 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  175 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  175 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  175 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  175 -> 57 [style=dashed label="UNARY_OPERATOR"]
  175 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  175 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  175 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  175 -> 61 [style=dashed label="RELATIONAL_EXPRESSION"]
  175 -> 62 [style=dashed label="EQUALITY_EXPRESSION"]
  175 -> 63 [style=dashed label="BITWISE_AND_EXPRESSION"]
  175 -> 64 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  175 -> 65 [style=dashed label="BITWISE_OR_EXPRESSION"]
  175 -> 66 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  175 -> 67 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  175 -> 68 [style=dashed label="CONDITIONAL_EXPRESSION"]
  176 [label="State 176\n\l 80 PRIMARY_EXPRESSION: T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS .\l"]
  176 -> "176R80" [style=solid]
 "176R80" [label="R80", fillcolor=3, shape=diamond, style=filled]
  177 [label="State 177\n\l 21 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 22      | . T_L_BRACE T_R_BRACE\l 25 SINGLE_STATEMENT: . SCOPE\l 26                 | . EXPRESSION_STATEMENT\l 27                 | . JUMP_STATEMENT\l 28                 | . ITERATION_STATEMENT\l 29                 | . SELECTION_STATEMENT\l 30 SELECTION_STATEMENT: . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 31                    | . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l 32                    | . T_ELSE SINGLE_STATEMENT\l 33 ITERATION_STATEMENT: . T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 33                    | T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS . SINGLE_STATEMENT\l 34                    | . T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l 35                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 36 JUMP_STATEMENT: . T_RETURN T_SEMICOLON\l 37               | . T_RETURN EXPRESSION T_SEMICOLON\l 38               | . T_BREAK T_SEMICOLON\l 39               | . T_CONTINUE T_SEMICOLON\l 40 EXPRESSION_STATEMENT: . EXPRESSION T_SEMICOLON\l 41 EXPRESSION: . VARIABLE_DECLARATION\l 42           | . ASSIGNMENT_STATEMENT\l 43           | . MATH_OR_BITWISE_EXPRESSION\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 58 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 59 TYPE_SPECIFIER: . T_VOID\l 60               | . T_CHAR\l 61               | . T_SHORT\l 62               | . T_INT\l 63               | . T_LONG\l 64               | . T_FLOAT\l 65               | . T_DOUBLE\l 66               | . T_SIGNED\l 67               | . T_UNSIGNED\l 68 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l 69                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l 70                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l 71                     | . DECLARATOR\l 72 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l 73                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l108 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l109                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l110                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l111 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l112                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l113 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l114                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l115 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l116                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l117 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l118                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l119 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l120                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l121 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  177 -> 18 [style=solid label="T_BREAK"]
  177 -> 1 [style=solid label="T_CHAR"]
  177 -> 19 [style=solid label="T_CONTINUE"]
  177 -> 20 [style=solid label="T_DO"]
  177 -> 2 [style=solid label="T_DOUBLE"]
  177 -> 21 [style=solid label="T_ELSE"]
  177 -> 3 [style=solid label="T_FLOAT"]
  177 -> 22 [style=solid label="T_FOR"]
  177 -> 23 [style=solid label="T_IF"]
  177 -> 4 [style=solid label="T_INT"]
  177 -> 5 [style=solid label="T_LONG"]
  177 -> 24 [style=solid label="T_RETURN"]
  177 -> 6 [style=solid label="T_SHORT"]
  177 -> 7 [style=solid label="T_SIGNED"]
  177 -> 25 [style=solid label="T_SIZEOF"]
  177 -> 8 [style=solid label="T_UNSIGNED"]
  177 -> 9 [style=solid label="T_VOID"]
  177 -> 26 [style=solid label="T_WHILE"]
  177 -> 27 [style=solid label="T_NOT"]
  177 -> 28 [style=solid label="T_INVERT"]
  177 -> 29 [style=solid label="T_MINUS"]
  177 -> 30 [style=solid label="T_PLUS"]
  177 -> 31 [style=solid label="T_MULT"]
  177 -> 32 [style=solid label="T_INC_OP"]
  177 -> 33 [style=solid label="T_DEC_OP"]
  177 -> 34 [style=solid label="T_AND_OP"]
  177 -> 10 [style=solid label="T_L_BRACE"]
  177 -> 36 [style=solid label="T_L_PARENTHESIS"]
  177 -> 37 [style=solid label="T_IDENTIFIER"]
  177 -> 38 [style=solid label="T_INT_CONST"]
  177 -> 39 [style=solid label="T_FLOAT_CONST"]
  177 -> 40 [style=solid label="T_STRING_CONST"]
  177 -> 41 [style=dashed label="SCOPE"]
  177 -> 188 [style=dashed label="SINGLE_STATEMENT"]
  177 -> 44 [style=dashed label="SELECTION_STATEMENT"]
  177 -> 45 [style=dashed label="ITERATION_STATEMENT"]
  177 -> 46 [style=dashed label="JUMP_STATEMENT"]
  177 -> 47 [style=dashed label="EXPRESSION_STATEMENT"]
  177 -> 48 [style=dashed label="EXPRESSION"]
  177 -> 49 [style=dashed label="DECLARATOR"]
  177 -> 50 [style=dashed label="VARIABLE_DECLARATION"]
  177 -> 51 [style=dashed label="TYPE_SPECIFIER"]
  177 -> 52 [style=dashed label="ASSIGNMENT_STATEMENT"]
  177 -> 53 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  177 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  177 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  177 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  177 -> 57 [style=dashed label="UNARY_OPERATOR"]
  177 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  177 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  177 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  177 -> 61 [style=dashed label="RELATIONAL_EXPRESSION"]
  177 -> 62 [style=dashed label="EQUALITY_EXPRESSION"]
  177 -> 63 [style=dashed label="BITWISE_AND_EXPRESSION"]
  177 -> 64 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  177 -> 65 [style=dashed label="BITWISE_OR_EXPRESSION"]
  177 -> 66 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  177 -> 67 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  177 -> 68 [style=dashed label="CONDITIONAL_EXPRESSION"]
  178 [label="State 178\n\l 57 DECLARATOR: T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET .\l"]
  178 -> "178R57" [style=solid]
 "178R57" [label="R57", fillcolor=3, shape=diamond, style=filled]
  179 [label="State 179\n\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 68 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l 68                     | DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA . ASSIGNMENT_STATEMENT\l 69                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l 70                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l 71                     | . DECLARATOR\l"]
  179 -> 31 [style=solid label="T_MULT"]
  179 -> 37 [style=solid label="T_IDENTIFIER"]
  179 -> 107 [style=dashed label="DECLARATOR"]
  179 -> 189 [style=dashed label="ASSIGNMENT_STATEMENT"]
  180 [label="State 180\n\l 17 WRAPPED_PARAMETERS: T_L_PARENTHESIS MULTIPLE_PARAMETERS T_R_PARENTHESIS .\l"]
  180 -> "180R17" [style=solid]
 "180R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  181 [label="State 181\n\l 19 MULTIPLE_PARAMETERS: . MATH_OR_BITWISE_EXPRESSION T_COMMA MULTIPLE_PARAMETERS\l 19                    | MATH_OR_BITWISE_EXPRESSION T_COMMA . MULTIPLE_PARAMETERS\l 20                    | . MATH_OR_BITWISE_EXPRESSION\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 72 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l 73                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l108 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l109                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l110                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l111 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l112                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l113 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l114                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l115 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l116                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l117 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l118                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l119 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l120                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l121 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  181 -> 25 [style=solid label="T_SIZEOF"]
  181 -> 27 [style=solid label="T_NOT"]
  181 -> 28 [style=solid label="T_INVERT"]
  181 -> 29 [style=solid label="T_MINUS"]
  181 -> 30 [style=solid label="T_PLUS"]
  181 -> 31 [style=solid label="T_MULT"]
  181 -> 32 [style=solid label="T_INC_OP"]
  181 -> 33 [style=solid label="T_DEC_OP"]
  181 -> 34 [style=solid label="T_AND_OP"]
  181 -> 36 [style=solid label="T_L_PARENTHESIS"]
  181 -> 37 [style=solid label="T_IDENTIFIER"]
  181 -> 38 [style=solid label="T_INT_CONST"]
  181 -> 39 [style=solid label="T_FLOAT_CONST"]
  181 -> 40 [style=solid label="T_STRING_CONST"]
  181 -> 190 [style=dashed label="MULTIPLE_PARAMETERS"]
  181 -> 87 [style=dashed label="DECLARATOR"]
  181 -> 147 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  181 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  181 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  181 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  181 -> 57 [style=dashed label="UNARY_OPERATOR"]
  181 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  181 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  181 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  181 -> 61 [style=dashed label="RELATIONAL_EXPRESSION"]
  181 -> 62 [style=dashed label="EQUALITY_EXPRESSION"]
  181 -> 63 [style=dashed label="BITWISE_AND_EXPRESSION"]
  181 -> 64 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  181 -> 65 [style=dashed label="BITWISE_OR_EXPRESSION"]
  181 -> 66 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  181 -> 67 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  181 -> 68 [style=dashed label="CONDITIONAL_EXPRESSION"]
  182 [label="State 182\n\l 12 WRAPPED_ARGUMENTS: T_L_PARENTHESIS MULTIPLE_ARGUMENTS T_R_PARENTHESIS .\l"]
  182 -> "182R12" [style=solid]
 "182R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  183 [label="State 183\n\l 14 MULTIPLE_ARGUMENTS: . SINGLE_ARGUMENT T_COMMA MULTIPLE_ARGUMENTS\l 14                   | SINGLE_ARGUMENT T_COMMA . MULTIPLE_ARGUMENTS\l 15                   | . SINGLE_ARGUMENT\l 16 SINGLE_ARGUMENT: . TYPE_SPECIFIER DECLARATOR\l 59 TYPE_SPECIFIER: . T_VOID\l 60               | . T_CHAR\l 61               | . T_SHORT\l 62               | . T_INT\l 63               | . T_LONG\l 64               | . T_FLOAT\l 65               | . T_DOUBLE\l 66               | . T_SIGNED\l 67               | . T_UNSIGNED\l"]
  183 -> 1 [style=solid label="T_CHAR"]
  183 -> 2 [style=solid label="T_DOUBLE"]
  183 -> 3 [style=solid label="T_FLOAT"]
  183 -> 4 [style=solid label="T_INT"]
  183 -> 5 [style=solid label="T_LONG"]
  183 -> 6 [style=solid label="T_SHORT"]
  183 -> 7 [style=solid label="T_SIGNED"]
  183 -> 8 [style=solid label="T_UNSIGNED"]
  183 -> 9 [style=solid label="T_VOID"]
  183 -> 191 [style=dashed label="MULTIPLE_ARGUMENTS"]
  183 -> 169 [style=dashed label="SINGLE_ARGUMENT"]
  183 -> 170 [style=dashed label="TYPE_SPECIFIER"]
  184 [label="State 184\n\l 16 SINGLE_ARGUMENT: TYPE_SPECIFIER DECLARATOR .\l"]
  184 -> "184R16" [style=solid]
 "184R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  185 [label="State 185\n\l 34 ITERATION_STATEMENT: T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION . T_R_PARENTHESIS T_SEMICOLON\l"]
  185 -> 192 [style=solid label="T_R_PARENTHESIS"]
  186 [label="State 186\n\l 35 ITERATION_STATEMENT: T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION . T_R_PARENTHESIS SINGLE_STATEMENT\l"]
  186 -> 193 [style=solid label="T_R_PARENTHESIS"]
  187 [label="State 187\n\l 30 SELECTION_STATEMENT: . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 30                    | T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT .  [T_BREAK, T_CHAR, T_CONTINUE, T_DO, T_DOUBLE, T_ELSE, T_FLOAT, T_FOR, T_IF, T_INT, T_LONG, T_RETURN, T_SHORT, T_SIGNED, T_SIZEOF, T_UNSIGNED, T_VOID, T_WHILE, T_NOT, T_INVERT, T_MINUS, T_PLUS, T_MULT, T_INC_OP, T_DEC_OP, T_AND_OP, T_L_BRACE, T_R_BRACE, T_L_PARENTHESIS, T_IDENTIFIER, T_INT_CONST, T_FLOAT_CONST, T_STRING_CONST]\l 31                    | . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l 31                    | T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT . SELECTION_STATEMENT\l 32                    | . T_ELSE SINGLE_STATEMENT\l"]
  187 -> 21 [style=solid label="T_ELSE"]
  187 -> 23 [style=solid label="T_IF"]
  187 -> 194 [style=dashed label="SELECTION_STATEMENT"]
  187 -> "187R30d" [label="[T_ELSE, T_IF]", style=solid]
 "187R30d" [label="R30", fillcolor=5, shape=diamond, style=filled]
  187 -> "187R30" [style=solid]
 "187R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  188 [label="State 188\n\l 33 ITERATION_STATEMENT: T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT .\l"]
  188 -> "188R33" [style=solid]
 "188R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  189 [label="State 189\n\l 68 ASSIGNMENT_STATEMENT: DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT .\l"]
  189 -> "189R68" [style=solid]
 "189R68" [label="R68", fillcolor=3, shape=diamond, style=filled]
  190 [label="State 190\n\l 19 MULTIPLE_PARAMETERS: MATH_OR_BITWISE_EXPRESSION T_COMMA MULTIPLE_PARAMETERS .\l"]
  190 -> "190R19" [style=solid]
 "190R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  191 [label="State 191\n\l 14 MULTIPLE_ARGUMENTS: SINGLE_ARGUMENT T_COMMA MULTIPLE_ARGUMENTS .\l"]
  191 -> "191R14" [style=solid]
 "191R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  192 [label="State 192\n\l 34 ITERATION_STATEMENT: T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS . T_SEMICOLON\l"]
  192 -> 195 [style=solid label="T_SEMICOLON"]
  193 [label="State 193\n\l 21 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 22      | . T_L_BRACE T_R_BRACE\l 25 SINGLE_STATEMENT: . SCOPE\l 26                 | . EXPRESSION_STATEMENT\l 27                 | . JUMP_STATEMENT\l 28                 | . ITERATION_STATEMENT\l 29                 | . SELECTION_STATEMENT\l 30 SELECTION_STATEMENT: . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 31                    | . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l 32                    | . T_ELSE SINGLE_STATEMENT\l 33 ITERATION_STATEMENT: . T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 34                    | . T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l 35                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 35                    | T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS . SINGLE_STATEMENT\l 36 JUMP_STATEMENT: . T_RETURN T_SEMICOLON\l 37               | . T_RETURN EXPRESSION T_SEMICOLON\l 38               | . T_BREAK T_SEMICOLON\l 39               | . T_CONTINUE T_SEMICOLON\l 40 EXPRESSION_STATEMENT: . EXPRESSION T_SEMICOLON\l 41 EXPRESSION: . VARIABLE_DECLARATION\l 42           | . ASSIGNMENT_STATEMENT\l 43           | . MATH_OR_BITWISE_EXPRESSION\l 55 DECLARATOR: . T_IDENTIFIER\l 56           | . T_MULT T_IDENTIFIER\l 57           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 58 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 59 TYPE_SPECIFIER: . T_VOID\l 60               | . T_CHAR\l 61               | . T_SHORT\l 62               | . T_INT\l 63               | . T_LONG\l 64               | . T_FLOAT\l 65               | . T_DOUBLE\l 66               | . T_SIGNED\l 67               | . T_UNSIGNED\l 68 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l 69                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l 70                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l 71                     | . DECLARATOR\l 72 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l 73                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l 74 PRIMARY_EXPRESSION: . DECLARATOR\l 75                   | . T_INT_CONST\l 76                   | . T_FLOAT_CONST\l 77                   | . T_STRING_CONST\l 78                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l 79                   | . DECLARATOR WRAPPED_PARAMETERS\l 80                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l 81 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l 82                   | . POSTFIX_EXPRESSION T_INC_OP\l 83                   | . POSTFIX_EXPRESSION T_DEC_OP\l 84 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l 85                 | . UNARY_OPERATOR UNARY_EXPRESSION\l 86 UNARY_OPERATOR: . T_INC_OP\l 87               | . T_DEC_OP\l 88               | . T_AND_OP\l 89               | . T_PLUS\l 90               | . T_MINUS\l 91               | . T_INVERT\l 92               | . T_NOT\l 93 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l 94                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l 95                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l 96                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l 97 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l 98                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l 99                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l100 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l101                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l102                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l103 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l104                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l105                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l106                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l107                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l108 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l109                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l110                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l111 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l112                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l113 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l114                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l115 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l116                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l117 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l118                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l119 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l120                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l121 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  193 -> 18 [style=solid label="T_BREAK"]
  193 -> 1 [style=solid label="T_CHAR"]
  193 -> 19 [style=solid label="T_CONTINUE"]
  193 -> 20 [style=solid label="T_DO"]
  193 -> 2 [style=solid label="T_DOUBLE"]
  193 -> 21 [style=solid label="T_ELSE"]
  193 -> 3 [style=solid label="T_FLOAT"]
  193 -> 22 [style=solid label="T_FOR"]
  193 -> 23 [style=solid label="T_IF"]
  193 -> 4 [style=solid label="T_INT"]
  193 -> 5 [style=solid label="T_LONG"]
  193 -> 24 [style=solid label="T_RETURN"]
  193 -> 6 [style=solid label="T_SHORT"]
  193 -> 7 [style=solid label="T_SIGNED"]
  193 -> 25 [style=solid label="T_SIZEOF"]
  193 -> 8 [style=solid label="T_UNSIGNED"]
  193 -> 9 [style=solid label="T_VOID"]
  193 -> 26 [style=solid label="T_WHILE"]
  193 -> 27 [style=solid label="T_NOT"]
  193 -> 28 [style=solid label="T_INVERT"]
  193 -> 29 [style=solid label="T_MINUS"]
  193 -> 30 [style=solid label="T_PLUS"]
  193 -> 31 [style=solid label="T_MULT"]
  193 -> 32 [style=solid label="T_INC_OP"]
  193 -> 33 [style=solid label="T_DEC_OP"]
  193 -> 34 [style=solid label="T_AND_OP"]
  193 -> 10 [style=solid label="T_L_BRACE"]
  193 -> 36 [style=solid label="T_L_PARENTHESIS"]
  193 -> 37 [style=solid label="T_IDENTIFIER"]
  193 -> 38 [style=solid label="T_INT_CONST"]
  193 -> 39 [style=solid label="T_FLOAT_CONST"]
  193 -> 40 [style=solid label="T_STRING_CONST"]
  193 -> 41 [style=dashed label="SCOPE"]
  193 -> 196 [style=dashed label="SINGLE_STATEMENT"]
  193 -> 44 [style=dashed label="SELECTION_STATEMENT"]
  193 -> 45 [style=dashed label="ITERATION_STATEMENT"]
  193 -> 46 [style=dashed label="JUMP_STATEMENT"]
  193 -> 47 [style=dashed label="EXPRESSION_STATEMENT"]
  193 -> 48 [style=dashed label="EXPRESSION"]
  193 -> 49 [style=dashed label="DECLARATOR"]
  193 -> 50 [style=dashed label="VARIABLE_DECLARATION"]
  193 -> 51 [style=dashed label="TYPE_SPECIFIER"]
  193 -> 52 [style=dashed label="ASSIGNMENT_STATEMENT"]
  193 -> 53 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  193 -> 54 [style=dashed label="PRIMARY_EXPRESSION"]
  193 -> 55 [style=dashed label="POSTFIX_EXPRESSION"]
  193 -> 56 [style=dashed label="UNARY_EXPRESSION"]
  193 -> 57 [style=dashed label="UNARY_OPERATOR"]
  193 -> 58 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  193 -> 59 [style=dashed label="ADDITIVE_EXPRESSION"]
  193 -> 60 [style=dashed label="SHIFT_EXPRESSION"]
  193 -> 61 [style=dashed label="RELATIONAL_EXPRESSION"]
  193 -> 62 [style=dashed label="EQUALITY_EXPRESSION"]
  193 -> 63 [style=dashed label="BITWISE_AND_EXPRESSION"]
  193 -> 64 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  193 -> 65 [style=dashed label="BITWISE_OR_EXPRESSION"]
  193 -> 66 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  193 -> 67 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  193 -> 68 [style=dashed label="CONDITIONAL_EXPRESSION"]
  194 [label="State 194\n\l 31 SELECTION_STATEMENT: T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT .\l"]
  194 -> "194R31" [style=solid]
 "194R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  195 [label="State 195\n\l 34 ITERATION_STATEMENT: T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON .\l"]
  195 -> "195R34" [style=solid]
 "195R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  196 [label="State 196\n\l 35 ITERATION_STATEMENT: T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT .\l"]
  196 -> "196R35" [style=solid]
 "196R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
}
