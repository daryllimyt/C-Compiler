// Generated by GNU Bison 3.0.4.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <http://www.gnu.org/software/bison/>.

digraph "src/parser.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: . ROOT $end\l  1 ROOT: . FRAME\l  2 FRAME: . SCOPE\l  3      | . ENUMERATION\l  4      | . FUNCTION_DEFINITION\l  5      | . FUNCTION_DECLARATION\l  6      | . TYPE_DEF\l  7      | . STRUCT_DEFINITION\l  8      | . VARIABLE_DECLARATION T_SEMICOLON\l  9      | . STRUCT_DEFINITION FRAME\l 10      | . VARIABLE_DECLARATION T_SEMICOLON FRAME\l 11      | . SCOPE FRAME\l 12      | . FUNCTION_DEFINITION FRAME\l 13      | . FUNCTION_DECLARATION FRAME\l 14      | . ENUMERATION FRAME\l 15      | . TYPE_DEF FRAME\l 16 FUNCTION_DECLARATION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS T_SEMICOLON\l 17 FUNCTION_DEFINITION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS SCOPE\l 27 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 28      | . T_L_BRACE T_R_BRACE\l 40 ENUMERATION: . T_ENUM T_IDENTIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 41            | . T_ENUM T_IDENTIFIER T_COLON TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 87 TYPE_DEF: . T_TYPEDEF TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l 99 STRUCT_DEFINITION: . T_STRUCT T_IDENTIFIER T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON\l"]
  0 -> 1 [style=solid label="T_CHAR"]
  0 -> 2 [style=solid label="T_DOUBLE"]
  0 -> 3 [style=solid label="T_ENUM"]
  0 -> 4 [style=solid label="T_FLOAT"]
  0 -> 5 [style=solid label="T_INT"]
  0 -> 6 [style=solid label="T_LONG"]
  0 -> 7 [style=solid label="T_SHORT"]
  0 -> 8 [style=solid label="T_SIGNED"]
  0 -> 9 [style=solid label="T_STRUCT"]
  0 -> 10 [style=solid label="T_TYPEDEF"]
  0 -> 11 [style=solid label="T_UNSIGNED"]
  0 -> 12 [style=solid label="T_VOID"]
  0 -> 13 [style=solid label="T_L_BRACE"]
  0 -> 14 [style=solid label="T_IDENTIFIER"]
  0 -> 15 [style=solid label="T_BOOL"]
  0 -> 16 [style=dashed label="ROOT"]
  0 -> 17 [style=dashed label="FRAME"]
  0 -> 18 [style=dashed label="FUNCTION_DECLARATION"]
  0 -> 19 [style=dashed label="FUNCTION_DEFINITION"]
  0 -> 20 [style=dashed label="SCOPE"]
  0 -> 21 [style=dashed label="ENUMERATION"]
  0 -> 22 [style=dashed label="VARIABLE_DECLARATION"]
  0 -> 23 [style=dashed label="TYPE_DEF"]
  0 -> 24 [style=dashed label="TYPE_SPECIFIER"]
  0 -> 25 [style=dashed label="STRUCT_DEFINITION"]
  1 [label="State 1\n\l 89 TYPE_SPECIFIER: T_CHAR .\l"]
  1 -> "1R89" [style=solid]
 "1R89" [label="R89", fillcolor=3, shape=diamond, style=filled]
  2 [label="State 2\n\l 94 TYPE_SPECIFIER: T_DOUBLE .\l"]
  2 -> "2R94" [style=solid]
 "2R94" [label="R94", fillcolor=3, shape=diamond, style=filled]
  3 [label="State 3\n\l 40 ENUMERATION: T_ENUM . T_IDENTIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 41            | T_ENUM . T_IDENTIFIER T_COLON TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l"]
  3 -> 26 [style=solid label="T_IDENTIFIER"]
  4 [label="State 4\n\l 93 TYPE_SPECIFIER: T_FLOAT .\l"]
  4 -> "4R93" [style=solid]
 "4R93" [label="R93", fillcolor=3, shape=diamond, style=filled]
  5 [label="State 5\n\l 91 TYPE_SPECIFIER: T_INT .\l"]
  5 -> "5R91" [style=solid]
 "5R91" [label="R91", fillcolor=3, shape=diamond, style=filled]
  6 [label="State 6\n\l 92 TYPE_SPECIFIER: T_LONG .\l"]
  6 -> "6R92" [style=solid]
 "6R92" [label="R92", fillcolor=3, shape=diamond, style=filled]
  7 [label="State 7\n\l 90 TYPE_SPECIFIER: T_SHORT .\l"]
  7 -> "7R90" [style=solid]
 "7R90" [label="R90", fillcolor=3, shape=diamond, style=filled]
  8 [label="State 8\n\l 95 TYPE_SPECIFIER: T_SIGNED .\l"]
  8 -> "8R95" [style=solid]
 "8R95" [label="R95", fillcolor=3, shape=diamond, style=filled]
  9 [label="State 9\n\l 99 STRUCT_DEFINITION: T_STRUCT . T_IDENTIFIER T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON\l"]
  9 -> 27 [style=solid label="T_IDENTIFIER"]
  10 [label="State 10\n\l 87 TYPE_DEF: T_TYPEDEF . TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l"]
  10 -> 1 [style=solid label="T_CHAR"]
  10 -> 2 [style=solid label="T_DOUBLE"]
  10 -> 4 [style=solid label="T_FLOAT"]
  10 -> 5 [style=solid label="T_INT"]
  10 -> 6 [style=solid label="T_LONG"]
  10 -> 7 [style=solid label="T_SHORT"]
  10 -> 8 [style=solid label="T_SIGNED"]
  10 -> 11 [style=solid label="T_UNSIGNED"]
  10 -> 12 [style=solid label="T_VOID"]
  10 -> 14 [style=solid label="T_IDENTIFIER"]
  10 -> 15 [style=solid label="T_BOOL"]
  10 -> 28 [style=dashed label="TYPE_SPECIFIER"]
  11 [label="State 11\n\l 96 TYPE_SPECIFIER: T_UNSIGNED .\l"]
  11 -> "11R96" [style=solid]
 "11R96" [label="R96", fillcolor=3, shape=diamond, style=filled]
  12 [label="State 12\n\l 88 TYPE_SPECIFIER: T_VOID .\l"]
  12 -> "12R88" [style=solid]
 "12R88" [label="R88", fillcolor=3, shape=diamond, style=filled]
  13 [label="State 13\n\l 27 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 27      | T_L_BRACE . MULTIPLE_STATEMENTS T_R_BRACE\l 28      | . T_L_BRACE T_R_BRACE\l 28      | T_L_BRACE . T_R_BRACE\l 29 MULTIPLE_STATEMENTS: . SINGLE_STATEMENT MULTIPLE_STATEMENTS\l 30                    | . SINGLE_STATEMENT\l 31 SINGLE_STATEMENT: . SCOPE\l 32                 | . EXPRESSION_STATEMENT\l 33                 | . JUMP_STATEMENT\l 34                 | . ITERATION_STATEMENT\l 35                 | . SELECTION_STATEMENT\l 36                 | . ENUMERATION\l 37                 | . TYPE_DEF\l 38                 | . STRUCT_DEFINITION\l 39                 | . STRUCT_DECLARATION\l 40 ENUMERATION: . T_ENUM T_IDENTIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 41            | . T_ENUM T_IDENTIFIER T_COLON TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 46 SELECTION_STATEMENT: . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 47                    | . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l 48                    | . T_ELSE SINGLE_STATEMENT\l 49                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS WRAPPED_CASE_STATEMENTS\l 50                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 59 ITERATION_STATEMENT: . T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 60                    | . T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l 61                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 62                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT T_R_PARENTHESIS SINGLE_STATEMENT\l 63 JUMP_STATEMENT: . T_RETURN T_SEMICOLON\l 64               | . T_RETURN EXPRESSION T_SEMICOLON\l 65               | . T_BREAK T_SEMICOLON\l 66               | . T_CONTINUE T_SEMICOLON\l 67 EXPRESSION_STATEMENT: . T_SEMICOLON\l 68                     | . EXPRESSION T_SEMICOLON\l 69 EXPRESSION: . VARIABLE_DECLARATION\l 70           | . ASSIGNMENT_STATEMENT\l 71           | . MATH_OR_BITWISE_EXPRESSION\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 87 TYPE_DEF: . T_TYPEDEF TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l 99 STRUCT_DEFINITION: . T_STRUCT T_IDENTIFIER T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON\l100 STRUCT_DECLARATION: . T_STRUCT TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l105 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | . DECLARATOR\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  13 -> 29 [style=solid label="T_BREAK"]
  13 -> 1 [style=solid label="T_CHAR"]
  13 -> 30 [style=solid label="T_CONTINUE"]
  13 -> 31 [style=solid label="T_DO"]
  13 -> 2 [style=solid label="T_DOUBLE"]
  13 -> 32 [style=solid label="T_ELSE"]
  13 -> 3 [style=solid label="T_ENUM"]
  13 -> 4 [style=solid label="T_FLOAT"]
  13 -> 33 [style=solid label="T_FOR"]
  13 -> 34 [style=solid label="T_IF"]
  13 -> 5 [style=solid label="T_INT"]
  13 -> 6 [style=solid label="T_LONG"]
  13 -> 35 [style=solid label="T_RETURN"]
  13 -> 7 [style=solid label="T_SHORT"]
  13 -> 8 [style=solid label="T_SIGNED"]
  13 -> 36 [style=solid label="T_SIZEOF"]
  13 -> 37 [style=solid label="T_STRUCT"]
  13 -> 38 [style=solid label="T_SWITCH"]
  13 -> 10 [style=solid label="T_TYPEDEF"]
  13 -> 11 [style=solid label="T_UNSIGNED"]
  13 -> 12 [style=solid label="T_VOID"]
  13 -> 39 [style=solid label="T_WHILE"]
  13 -> 40 [style=solid label="T_AND"]
  13 -> 41 [style=solid label="T_NOT"]
  13 -> 42 [style=solid label="T_INVERT"]
  13 -> 43 [style=solid label="T_MINUS"]
  13 -> 44 [style=solid label="T_PLUS"]
  13 -> 45 [style=solid label="T_MULT"]
  13 -> 46 [style=solid label="T_INC_OP"]
  13 -> 47 [style=solid label="T_DEC_OP"]
  13 -> 48 [style=solid label="T_SEMICOLON"]
  13 -> 13 [style=solid label="T_L_BRACE"]
  13 -> 49 [style=solid label="T_R_BRACE"]
  13 -> 50 [style=solid label="T_L_PARENTHESIS"]
  13 -> 51 [style=solid label="T_IDENTIFIER"]
  13 -> 52 [style=solid label="T_INT_CONST"]
  13 -> 53 [style=solid label="T_FLOAT_CONST"]
  13 -> 54 [style=solid label="T_CHAR_CONST"]
  13 -> 55 [style=solid label="T_STRING_CONST"]
  13 -> 15 [style=solid label="T_BOOL"]
  13 -> 56 [style=dashed label="SCOPE"]
  13 -> 57 [style=dashed label="MULTIPLE_STATEMENTS"]
  13 -> 58 [style=dashed label="SINGLE_STATEMENT"]
  13 -> 59 [style=dashed label="ENUMERATION"]
  13 -> 60 [style=dashed label="SELECTION_STATEMENT"]
  13 -> 61 [style=dashed label="ITERATION_STATEMENT"]
  13 -> 62 [style=dashed label="JUMP_STATEMENT"]
  13 -> 63 [style=dashed label="EXPRESSION_STATEMENT"]
  13 -> 64 [style=dashed label="EXPRESSION"]
  13 -> 65 [style=dashed label="DECLARATOR"]
  13 -> 66 [style=dashed label="VARIABLE_DECLARATION"]
  13 -> 67 [style=dashed label="TYPE_DEF"]
  13 -> 68 [style=dashed label="TYPE_SPECIFIER"]
  13 -> 69 [style=dashed label="STRUCT_DEFINITION"]
  13 -> 70 [style=dashed label="STRUCT_DECLARATION"]
  13 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  13 -> 72 [style=dashed label="ASSIGNMENT_STATEMENT"]
  13 -> 73 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  13 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  13 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  13 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  13 -> 77 [style=dashed label="UNARY_OPERATOR"]
  13 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  13 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  13 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  13 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  13 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  13 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  13 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  13 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  13 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  13 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  13 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  14 [label="State 14\n\l 98 TYPE_SPECIFIER: T_IDENTIFIER .\l"]
  14 -> "14R98" [style=solid]
 "14R98" [label="R98", fillcolor=3, shape=diamond, style=filled]
  15 [label="State 15\n\l 97 TYPE_SPECIFIER: T_BOOL .\l"]
  15 -> "15R97" [style=solid]
 "15R97" [label="R97", fillcolor=3, shape=diamond, style=filled]
  16 [label="State 16\n\l  0 $accept: ROOT . $end\l"]
  16 -> 89 [style=solid label="$end"]
  17 [label="State 17\n\l  1 ROOT: FRAME .\l"]
  17 -> "17R1" [style=solid]
 "17R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  18 [label="State 18\n\l  2 FRAME: . SCOPE\l  3      | . ENUMERATION\l  4      | . FUNCTION_DEFINITION\l  5      | . FUNCTION_DECLARATION\l  5      | FUNCTION_DECLARATION .  [$end]\l  6      | . TYPE_DEF\l  7      | . STRUCT_DEFINITION\l  8      | . VARIABLE_DECLARATION T_SEMICOLON\l  9      | . STRUCT_DEFINITION FRAME\l 10      | . VARIABLE_DECLARATION T_SEMICOLON FRAME\l 11      | . SCOPE FRAME\l 12      | . FUNCTION_DEFINITION FRAME\l 13      | . FUNCTION_DECLARATION FRAME\l 13      | FUNCTION_DECLARATION . FRAME\l 14      | . ENUMERATION FRAME\l 15      | . TYPE_DEF FRAME\l 16 FUNCTION_DECLARATION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS T_SEMICOLON\l 17 FUNCTION_DEFINITION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS SCOPE\l 27 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 28      | . T_L_BRACE T_R_BRACE\l 40 ENUMERATION: . T_ENUM T_IDENTIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 41            | . T_ENUM T_IDENTIFIER T_COLON TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 87 TYPE_DEF: . T_TYPEDEF TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l 99 STRUCT_DEFINITION: . T_STRUCT T_IDENTIFIER T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON\l"]
  18 -> 1 [style=solid label="T_CHAR"]
  18 -> 2 [style=solid label="T_DOUBLE"]
  18 -> 3 [style=solid label="T_ENUM"]
  18 -> 4 [style=solid label="T_FLOAT"]
  18 -> 5 [style=solid label="T_INT"]
  18 -> 6 [style=solid label="T_LONG"]
  18 -> 7 [style=solid label="T_SHORT"]
  18 -> 8 [style=solid label="T_SIGNED"]
  18 -> 9 [style=solid label="T_STRUCT"]
  18 -> 10 [style=solid label="T_TYPEDEF"]
  18 -> 11 [style=solid label="T_UNSIGNED"]
  18 -> 12 [style=solid label="T_VOID"]
  18 -> 13 [style=solid label="T_L_BRACE"]
  18 -> 14 [style=solid label="T_IDENTIFIER"]
  18 -> 15 [style=solid label="T_BOOL"]
  18 -> 90 [style=dashed label="FRAME"]
  18 -> 18 [style=dashed label="FUNCTION_DECLARATION"]
  18 -> 19 [style=dashed label="FUNCTION_DEFINITION"]
  18 -> 20 [style=dashed label="SCOPE"]
  18 -> 21 [style=dashed label="ENUMERATION"]
  18 -> 22 [style=dashed label="VARIABLE_DECLARATION"]
  18 -> 23 [style=dashed label="TYPE_DEF"]
  18 -> 24 [style=dashed label="TYPE_SPECIFIER"]
  18 -> 25 [style=dashed label="STRUCT_DEFINITION"]
  18 -> "18R5" [style=solid]
 "18R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  19 [label="State 19\n\l  2 FRAME: . SCOPE\l  3      | . ENUMERATION\l  4      | . FUNCTION_DEFINITION\l  4      | FUNCTION_DEFINITION .  [$end]\l  5      | . FUNCTION_DECLARATION\l  6      | . TYPE_DEF\l  7      | . STRUCT_DEFINITION\l  8      | . VARIABLE_DECLARATION T_SEMICOLON\l  9      | . STRUCT_DEFINITION FRAME\l 10      | . VARIABLE_DECLARATION T_SEMICOLON FRAME\l 11      | . SCOPE FRAME\l 12      | . FUNCTION_DEFINITION FRAME\l 12      | FUNCTION_DEFINITION . FRAME\l 13      | . FUNCTION_DECLARATION FRAME\l 14      | . ENUMERATION FRAME\l 15      | . TYPE_DEF FRAME\l 16 FUNCTION_DECLARATION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS T_SEMICOLON\l 17 FUNCTION_DEFINITION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS SCOPE\l 27 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 28      | . T_L_BRACE T_R_BRACE\l 40 ENUMERATION: . T_ENUM T_IDENTIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 41            | . T_ENUM T_IDENTIFIER T_COLON TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 87 TYPE_DEF: . T_TYPEDEF TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l 99 STRUCT_DEFINITION: . T_STRUCT T_IDENTIFIER T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON\l"]
  19 -> 1 [style=solid label="T_CHAR"]
  19 -> 2 [style=solid label="T_DOUBLE"]
  19 -> 3 [style=solid label="T_ENUM"]
  19 -> 4 [style=solid label="T_FLOAT"]
  19 -> 5 [style=solid label="T_INT"]
  19 -> 6 [style=solid label="T_LONG"]
  19 -> 7 [style=solid label="T_SHORT"]
  19 -> 8 [style=solid label="T_SIGNED"]
  19 -> 9 [style=solid label="T_STRUCT"]
  19 -> 10 [style=solid label="T_TYPEDEF"]
  19 -> 11 [style=solid label="T_UNSIGNED"]
  19 -> 12 [style=solid label="T_VOID"]
  19 -> 13 [style=solid label="T_L_BRACE"]
  19 -> 14 [style=solid label="T_IDENTIFIER"]
  19 -> 15 [style=solid label="T_BOOL"]
  19 -> 91 [style=dashed label="FRAME"]
  19 -> 18 [style=dashed label="FUNCTION_DECLARATION"]
  19 -> 19 [style=dashed label="FUNCTION_DEFINITION"]
  19 -> 20 [style=dashed label="SCOPE"]
  19 -> 21 [style=dashed label="ENUMERATION"]
  19 -> 22 [style=dashed label="VARIABLE_DECLARATION"]
  19 -> 23 [style=dashed label="TYPE_DEF"]
  19 -> 24 [style=dashed label="TYPE_SPECIFIER"]
  19 -> 25 [style=dashed label="STRUCT_DEFINITION"]
  19 -> "19R4" [style=solid]
 "19R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  20 [label="State 20\n\l  2 FRAME: . SCOPE\l  2      | SCOPE .  [$end]\l  3      | . ENUMERATION\l  4      | . FUNCTION_DEFINITION\l  5      | . FUNCTION_DECLARATION\l  6      | . TYPE_DEF\l  7      | . STRUCT_DEFINITION\l  8      | . VARIABLE_DECLARATION T_SEMICOLON\l  9      | . STRUCT_DEFINITION FRAME\l 10      | . VARIABLE_DECLARATION T_SEMICOLON FRAME\l 11      | . SCOPE FRAME\l 11      | SCOPE . FRAME\l 12      | . FUNCTION_DEFINITION FRAME\l 13      | . FUNCTION_DECLARATION FRAME\l 14      | . ENUMERATION FRAME\l 15      | . TYPE_DEF FRAME\l 16 FUNCTION_DECLARATION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS T_SEMICOLON\l 17 FUNCTION_DEFINITION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS SCOPE\l 27 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 28      | . T_L_BRACE T_R_BRACE\l 40 ENUMERATION: . T_ENUM T_IDENTIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 41            | . T_ENUM T_IDENTIFIER T_COLON TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 87 TYPE_DEF: . T_TYPEDEF TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l 99 STRUCT_DEFINITION: . T_STRUCT T_IDENTIFIER T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON\l"]
  20 -> 1 [style=solid label="T_CHAR"]
  20 -> 2 [style=solid label="T_DOUBLE"]
  20 -> 3 [style=solid label="T_ENUM"]
  20 -> 4 [style=solid label="T_FLOAT"]
  20 -> 5 [style=solid label="T_INT"]
  20 -> 6 [style=solid label="T_LONG"]
  20 -> 7 [style=solid label="T_SHORT"]
  20 -> 8 [style=solid label="T_SIGNED"]
  20 -> 9 [style=solid label="T_STRUCT"]
  20 -> 10 [style=solid label="T_TYPEDEF"]
  20 -> 11 [style=solid label="T_UNSIGNED"]
  20 -> 12 [style=solid label="T_VOID"]
  20 -> 13 [style=solid label="T_L_BRACE"]
  20 -> 14 [style=solid label="T_IDENTIFIER"]
  20 -> 15 [style=solid label="T_BOOL"]
  20 -> 92 [style=dashed label="FRAME"]
  20 -> 18 [style=dashed label="FUNCTION_DECLARATION"]
  20 -> 19 [style=dashed label="FUNCTION_DEFINITION"]
  20 -> 20 [style=dashed label="SCOPE"]
  20 -> 21 [style=dashed label="ENUMERATION"]
  20 -> 22 [style=dashed label="VARIABLE_DECLARATION"]
  20 -> 23 [style=dashed label="TYPE_DEF"]
  20 -> 24 [style=dashed label="TYPE_SPECIFIER"]
  20 -> 25 [style=dashed label="STRUCT_DEFINITION"]
  20 -> "20R2" [style=solid]
 "20R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  21 [label="State 21\n\l  2 FRAME: . SCOPE\l  3      | . ENUMERATION\l  3      | ENUMERATION .  [$end]\l  4      | . FUNCTION_DEFINITION\l  5      | . FUNCTION_DECLARATION\l  6      | . TYPE_DEF\l  7      | . STRUCT_DEFINITION\l  8      | . VARIABLE_DECLARATION T_SEMICOLON\l  9      | . STRUCT_DEFINITION FRAME\l 10      | . VARIABLE_DECLARATION T_SEMICOLON FRAME\l 11      | . SCOPE FRAME\l 12      | . FUNCTION_DEFINITION FRAME\l 13      | . FUNCTION_DECLARATION FRAME\l 14      | . ENUMERATION FRAME\l 14      | ENUMERATION . FRAME\l 15      | . TYPE_DEF FRAME\l 16 FUNCTION_DECLARATION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS T_SEMICOLON\l 17 FUNCTION_DEFINITION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS SCOPE\l 27 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 28      | . T_L_BRACE T_R_BRACE\l 40 ENUMERATION: . T_ENUM T_IDENTIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 41            | . T_ENUM T_IDENTIFIER T_COLON TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 87 TYPE_DEF: . T_TYPEDEF TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l 99 STRUCT_DEFINITION: . T_STRUCT T_IDENTIFIER T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON\l"]
  21 -> 1 [style=solid label="T_CHAR"]
  21 -> 2 [style=solid label="T_DOUBLE"]
  21 -> 3 [style=solid label="T_ENUM"]
  21 -> 4 [style=solid label="T_FLOAT"]
  21 -> 5 [style=solid label="T_INT"]
  21 -> 6 [style=solid label="T_LONG"]
  21 -> 7 [style=solid label="T_SHORT"]
  21 -> 8 [style=solid label="T_SIGNED"]
  21 -> 9 [style=solid label="T_STRUCT"]
  21 -> 10 [style=solid label="T_TYPEDEF"]
  21 -> 11 [style=solid label="T_UNSIGNED"]
  21 -> 12 [style=solid label="T_VOID"]
  21 -> 13 [style=solid label="T_L_BRACE"]
  21 -> 14 [style=solid label="T_IDENTIFIER"]
  21 -> 15 [style=solid label="T_BOOL"]
  21 -> 93 [style=dashed label="FRAME"]
  21 -> 18 [style=dashed label="FUNCTION_DECLARATION"]
  21 -> 19 [style=dashed label="FUNCTION_DEFINITION"]
  21 -> 20 [style=dashed label="SCOPE"]
  21 -> 21 [style=dashed label="ENUMERATION"]
  21 -> 22 [style=dashed label="VARIABLE_DECLARATION"]
  21 -> 23 [style=dashed label="TYPE_DEF"]
  21 -> 24 [style=dashed label="TYPE_SPECIFIER"]
  21 -> 25 [style=dashed label="STRUCT_DEFINITION"]
  21 -> "21R3" [style=solid]
 "21R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  22 [label="State 22\n\l  8 FRAME: VARIABLE_DECLARATION . T_SEMICOLON\l 10      | VARIABLE_DECLARATION . T_SEMICOLON FRAME\l"]
  22 -> 94 [style=solid label="T_SEMICOLON"]
  23 [label="State 23\n\l  2 FRAME: . SCOPE\l  3      | . ENUMERATION\l  4      | . FUNCTION_DEFINITION\l  5      | . FUNCTION_DECLARATION\l  6      | . TYPE_DEF\l  6      | TYPE_DEF .  [$end]\l  7      | . STRUCT_DEFINITION\l  8      | . VARIABLE_DECLARATION T_SEMICOLON\l  9      | . STRUCT_DEFINITION FRAME\l 10      | . VARIABLE_DECLARATION T_SEMICOLON FRAME\l 11      | . SCOPE FRAME\l 12      | . FUNCTION_DEFINITION FRAME\l 13      | . FUNCTION_DECLARATION FRAME\l 14      | . ENUMERATION FRAME\l 15      | . TYPE_DEF FRAME\l 15      | TYPE_DEF . FRAME\l 16 FUNCTION_DECLARATION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS T_SEMICOLON\l 17 FUNCTION_DEFINITION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS SCOPE\l 27 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 28      | . T_L_BRACE T_R_BRACE\l 40 ENUMERATION: . T_ENUM T_IDENTIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 41            | . T_ENUM T_IDENTIFIER T_COLON TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 87 TYPE_DEF: . T_TYPEDEF TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l 99 STRUCT_DEFINITION: . T_STRUCT T_IDENTIFIER T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON\l"]
  23 -> 1 [style=solid label="T_CHAR"]
  23 -> 2 [style=solid label="T_DOUBLE"]
  23 -> 3 [style=solid label="T_ENUM"]
  23 -> 4 [style=solid label="T_FLOAT"]
  23 -> 5 [style=solid label="T_INT"]
  23 -> 6 [style=solid label="T_LONG"]
  23 -> 7 [style=solid label="T_SHORT"]
  23 -> 8 [style=solid label="T_SIGNED"]
  23 -> 9 [style=solid label="T_STRUCT"]
  23 -> 10 [style=solid label="T_TYPEDEF"]
  23 -> 11 [style=solid label="T_UNSIGNED"]
  23 -> 12 [style=solid label="T_VOID"]
  23 -> 13 [style=solid label="T_L_BRACE"]
  23 -> 14 [style=solid label="T_IDENTIFIER"]
  23 -> 15 [style=solid label="T_BOOL"]
  23 -> 95 [style=dashed label="FRAME"]
  23 -> 18 [style=dashed label="FUNCTION_DECLARATION"]
  23 -> 19 [style=dashed label="FUNCTION_DEFINITION"]
  23 -> 20 [style=dashed label="SCOPE"]
  23 -> 21 [style=dashed label="ENUMERATION"]
  23 -> 22 [style=dashed label="VARIABLE_DECLARATION"]
  23 -> 23 [style=dashed label="TYPE_DEF"]
  23 -> 24 [style=dashed label="TYPE_SPECIFIER"]
  23 -> 25 [style=dashed label="STRUCT_DEFINITION"]
  23 -> "23R6" [style=solid]
 "23R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  24 [label="State 24\n\l 16 FUNCTION_DECLARATION: TYPE_SPECIFIER . DECLARATOR WRAPPED_ARGUMENTS T_SEMICOLON\l 17 FUNCTION_DEFINITION: TYPE_SPECIFIER . DECLARATOR WRAPPED_ARGUMENTS SCOPE\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 86 VARIABLE_DECLARATION: TYPE_SPECIFIER . ASSIGNMENT_STATEMENT\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l105 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | . DECLARATOR\l"]
  24 -> 45 [style=solid label="T_MULT"]
  24 -> 96 [style=solid label="T_IDENTIFIER"]
  24 -> 97 [style=dashed label="DECLARATOR"]
  24 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  24 -> 98 [style=dashed label="ASSIGNMENT_STATEMENT"]
  25 [label="State 25\n\l  2 FRAME: . SCOPE\l  3      | . ENUMERATION\l  4      | . FUNCTION_DEFINITION\l  5      | . FUNCTION_DECLARATION\l  6      | . TYPE_DEF\l  7      | . STRUCT_DEFINITION\l  7      | STRUCT_DEFINITION .  [$end]\l  8      | . VARIABLE_DECLARATION T_SEMICOLON\l  9      | . STRUCT_DEFINITION FRAME\l  9      | STRUCT_DEFINITION . FRAME\l 10      | . VARIABLE_DECLARATION T_SEMICOLON FRAME\l 11      | . SCOPE FRAME\l 12      | . FUNCTION_DEFINITION FRAME\l 13      | . FUNCTION_DECLARATION FRAME\l 14      | . ENUMERATION FRAME\l 15      | . TYPE_DEF FRAME\l 16 FUNCTION_DECLARATION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS T_SEMICOLON\l 17 FUNCTION_DEFINITION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS SCOPE\l 27 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 28      | . T_L_BRACE T_R_BRACE\l 40 ENUMERATION: . T_ENUM T_IDENTIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 41            | . T_ENUM T_IDENTIFIER T_COLON TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 87 TYPE_DEF: . T_TYPEDEF TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l 99 STRUCT_DEFINITION: . T_STRUCT T_IDENTIFIER T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON\l"]
  25 -> 1 [style=solid label="T_CHAR"]
  25 -> 2 [style=solid label="T_DOUBLE"]
  25 -> 3 [style=solid label="T_ENUM"]
  25 -> 4 [style=solid label="T_FLOAT"]
  25 -> 5 [style=solid label="T_INT"]
  25 -> 6 [style=solid label="T_LONG"]
  25 -> 7 [style=solid label="T_SHORT"]
  25 -> 8 [style=solid label="T_SIGNED"]
  25 -> 9 [style=solid label="T_STRUCT"]
  25 -> 10 [style=solid label="T_TYPEDEF"]
  25 -> 11 [style=solid label="T_UNSIGNED"]
  25 -> 12 [style=solid label="T_VOID"]
  25 -> 13 [style=solid label="T_L_BRACE"]
  25 -> 14 [style=solid label="T_IDENTIFIER"]
  25 -> 15 [style=solid label="T_BOOL"]
  25 -> 99 [style=dashed label="FRAME"]
  25 -> 18 [style=dashed label="FUNCTION_DECLARATION"]
  25 -> 19 [style=dashed label="FUNCTION_DEFINITION"]
  25 -> 20 [style=dashed label="SCOPE"]
  25 -> 21 [style=dashed label="ENUMERATION"]
  25 -> 22 [style=dashed label="VARIABLE_DECLARATION"]
  25 -> 23 [style=dashed label="TYPE_DEF"]
  25 -> 24 [style=dashed label="TYPE_SPECIFIER"]
  25 -> 25 [style=dashed label="STRUCT_DEFINITION"]
  25 -> "25R7" [style=solid]
 "25R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  26 [label="State 26\n\l 40 ENUMERATION: T_ENUM T_IDENTIFIER . T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 41            | T_ENUM T_IDENTIFIER . T_COLON TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l"]
  26 -> 100 [style=solid label="T_COLON"]
  26 -> 101 [style=solid label="T_L_BRACE"]
  27 [label="State 27\n\l 99 STRUCT_DEFINITION: T_STRUCT T_IDENTIFIER . T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON\l"]
  27 -> 102 [style=solid label="T_L_BRACE"]
  28 [label="State 28\n\l 87 TYPE_DEF: T_TYPEDEF TYPE_SPECIFIER . T_IDENTIFIER T_SEMICOLON\l"]
  28 -> 103 [style=solid label="T_IDENTIFIER"]
  29 [label="State 29\n\l 65 JUMP_STATEMENT: T_BREAK . T_SEMICOLON\l"]
  29 -> 104 [style=solid label="T_SEMICOLON"]
  30 [label="State 30\n\l 66 JUMP_STATEMENT: T_CONTINUE . T_SEMICOLON\l"]
  30 -> 105 [style=solid label="T_SEMICOLON"]
  31 [label="State 31\n\l 27 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 28      | . T_L_BRACE T_R_BRACE\l 31 SINGLE_STATEMENT: . SCOPE\l 32                 | . EXPRESSION_STATEMENT\l 33                 | . JUMP_STATEMENT\l 34                 | . ITERATION_STATEMENT\l 35                 | . SELECTION_STATEMENT\l 36                 | . ENUMERATION\l 37                 | . TYPE_DEF\l 38                 | . STRUCT_DEFINITION\l 39                 | . STRUCT_DECLARATION\l 40 ENUMERATION: . T_ENUM T_IDENTIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 41            | . T_ENUM T_IDENTIFIER T_COLON TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 46 SELECTION_STATEMENT: . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 47                    | . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l 48                    | . T_ELSE SINGLE_STATEMENT\l 49                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS WRAPPED_CASE_STATEMENTS\l 50                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 59 ITERATION_STATEMENT: . T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 60                    | . T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l 60                    | T_DO . SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l 61                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 62                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT T_R_PARENTHESIS SINGLE_STATEMENT\l 63 JUMP_STATEMENT: . T_RETURN T_SEMICOLON\l 64               | . T_RETURN EXPRESSION T_SEMICOLON\l 65               | . T_BREAK T_SEMICOLON\l 66               | . T_CONTINUE T_SEMICOLON\l 67 EXPRESSION_STATEMENT: . T_SEMICOLON\l 68                     | . EXPRESSION T_SEMICOLON\l 69 EXPRESSION: . VARIABLE_DECLARATION\l 70           | . ASSIGNMENT_STATEMENT\l 71           | . MATH_OR_BITWISE_EXPRESSION\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 87 TYPE_DEF: . T_TYPEDEF TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l 99 STRUCT_DEFINITION: . T_STRUCT T_IDENTIFIER T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON\l100 STRUCT_DECLARATION: . T_STRUCT TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l105 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | . DECLARATOR\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  31 -> 29 [style=solid label="T_BREAK"]
  31 -> 1 [style=solid label="T_CHAR"]
  31 -> 30 [style=solid label="T_CONTINUE"]
  31 -> 31 [style=solid label="T_DO"]
  31 -> 2 [style=solid label="T_DOUBLE"]
  31 -> 32 [style=solid label="T_ELSE"]
  31 -> 3 [style=solid label="T_ENUM"]
  31 -> 4 [style=solid label="T_FLOAT"]
  31 -> 33 [style=solid label="T_FOR"]
  31 -> 34 [style=solid label="T_IF"]
  31 -> 5 [style=solid label="T_INT"]
  31 -> 6 [style=solid label="T_LONG"]
  31 -> 35 [style=solid label="T_RETURN"]
  31 -> 7 [style=solid label="T_SHORT"]
  31 -> 8 [style=solid label="T_SIGNED"]
  31 -> 36 [style=solid label="T_SIZEOF"]
  31 -> 37 [style=solid label="T_STRUCT"]
  31 -> 38 [style=solid label="T_SWITCH"]
  31 -> 10 [style=solid label="T_TYPEDEF"]
  31 -> 11 [style=solid label="T_UNSIGNED"]
  31 -> 12 [style=solid label="T_VOID"]
  31 -> 39 [style=solid label="T_WHILE"]
  31 -> 40 [style=solid label="T_AND"]
  31 -> 41 [style=solid label="T_NOT"]
  31 -> 42 [style=solid label="T_INVERT"]
  31 -> 43 [style=solid label="T_MINUS"]
  31 -> 44 [style=solid label="T_PLUS"]
  31 -> 45 [style=solid label="T_MULT"]
  31 -> 46 [style=solid label="T_INC_OP"]
  31 -> 47 [style=solid label="T_DEC_OP"]
  31 -> 48 [style=solid label="T_SEMICOLON"]
  31 -> 13 [style=solid label="T_L_BRACE"]
  31 -> 50 [style=solid label="T_L_PARENTHESIS"]
  31 -> 51 [style=solid label="T_IDENTIFIER"]
  31 -> 52 [style=solid label="T_INT_CONST"]
  31 -> 53 [style=solid label="T_FLOAT_CONST"]
  31 -> 54 [style=solid label="T_CHAR_CONST"]
  31 -> 55 [style=solid label="T_STRING_CONST"]
  31 -> 15 [style=solid label="T_BOOL"]
  31 -> 56 [style=dashed label="SCOPE"]
  31 -> 106 [style=dashed label="SINGLE_STATEMENT"]
  31 -> 59 [style=dashed label="ENUMERATION"]
  31 -> 60 [style=dashed label="SELECTION_STATEMENT"]
  31 -> 61 [style=dashed label="ITERATION_STATEMENT"]
  31 -> 62 [style=dashed label="JUMP_STATEMENT"]
  31 -> 63 [style=dashed label="EXPRESSION_STATEMENT"]
  31 -> 64 [style=dashed label="EXPRESSION"]
  31 -> 65 [style=dashed label="DECLARATOR"]
  31 -> 66 [style=dashed label="VARIABLE_DECLARATION"]
  31 -> 67 [style=dashed label="TYPE_DEF"]
  31 -> 68 [style=dashed label="TYPE_SPECIFIER"]
  31 -> 69 [style=dashed label="STRUCT_DEFINITION"]
  31 -> 70 [style=dashed label="STRUCT_DECLARATION"]
  31 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  31 -> 72 [style=dashed label="ASSIGNMENT_STATEMENT"]
  31 -> 73 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  31 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  31 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  31 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  31 -> 77 [style=dashed label="UNARY_OPERATOR"]
  31 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  31 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  31 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  31 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  31 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  31 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  31 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  31 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  31 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  31 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  31 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  32 [label="State 32\n\l 27 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 28      | . T_L_BRACE T_R_BRACE\l 31 SINGLE_STATEMENT: . SCOPE\l 32                 | . EXPRESSION_STATEMENT\l 33                 | . JUMP_STATEMENT\l 34                 | . ITERATION_STATEMENT\l 35                 | . SELECTION_STATEMENT\l 36                 | . ENUMERATION\l 37                 | . TYPE_DEF\l 38                 | . STRUCT_DEFINITION\l 39                 | . STRUCT_DECLARATION\l 40 ENUMERATION: . T_ENUM T_IDENTIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 41            | . T_ENUM T_IDENTIFIER T_COLON TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 46 SELECTION_STATEMENT: . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 47                    | . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l 48                    | . T_ELSE SINGLE_STATEMENT\l 48                    | T_ELSE . SINGLE_STATEMENT\l 49                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS WRAPPED_CASE_STATEMENTS\l 50                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 59 ITERATION_STATEMENT: . T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 60                    | . T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l 61                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 62                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT T_R_PARENTHESIS SINGLE_STATEMENT\l 63 JUMP_STATEMENT: . T_RETURN T_SEMICOLON\l 64               | . T_RETURN EXPRESSION T_SEMICOLON\l 65               | . T_BREAK T_SEMICOLON\l 66               | . T_CONTINUE T_SEMICOLON\l 67 EXPRESSION_STATEMENT: . T_SEMICOLON\l 68                     | . EXPRESSION T_SEMICOLON\l 69 EXPRESSION: . VARIABLE_DECLARATION\l 70           | . ASSIGNMENT_STATEMENT\l 71           | . MATH_OR_BITWISE_EXPRESSION\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 87 TYPE_DEF: . T_TYPEDEF TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l 99 STRUCT_DEFINITION: . T_STRUCT T_IDENTIFIER T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON\l100 STRUCT_DECLARATION: . T_STRUCT TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l105 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | . DECLARATOR\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  32 -> 29 [style=solid label="T_BREAK"]
  32 -> 1 [style=solid label="T_CHAR"]
  32 -> 30 [style=solid label="T_CONTINUE"]
  32 -> 31 [style=solid label="T_DO"]
  32 -> 2 [style=solid label="T_DOUBLE"]
  32 -> 32 [style=solid label="T_ELSE"]
  32 -> 3 [style=solid label="T_ENUM"]
  32 -> 4 [style=solid label="T_FLOAT"]
  32 -> 33 [style=solid label="T_FOR"]
  32 -> 34 [style=solid label="T_IF"]
  32 -> 5 [style=solid label="T_INT"]
  32 -> 6 [style=solid label="T_LONG"]
  32 -> 35 [style=solid label="T_RETURN"]
  32 -> 7 [style=solid label="T_SHORT"]
  32 -> 8 [style=solid label="T_SIGNED"]
  32 -> 36 [style=solid label="T_SIZEOF"]
  32 -> 37 [style=solid label="T_STRUCT"]
  32 -> 38 [style=solid label="T_SWITCH"]
  32 -> 10 [style=solid label="T_TYPEDEF"]
  32 -> 11 [style=solid label="T_UNSIGNED"]
  32 -> 12 [style=solid label="T_VOID"]
  32 -> 39 [style=solid label="T_WHILE"]
  32 -> 40 [style=solid label="T_AND"]
  32 -> 41 [style=solid label="T_NOT"]
  32 -> 42 [style=solid label="T_INVERT"]
  32 -> 43 [style=solid label="T_MINUS"]
  32 -> 44 [style=solid label="T_PLUS"]
  32 -> 45 [style=solid label="T_MULT"]
  32 -> 46 [style=solid label="T_INC_OP"]
  32 -> 47 [style=solid label="T_DEC_OP"]
  32 -> 48 [style=solid label="T_SEMICOLON"]
  32 -> 13 [style=solid label="T_L_BRACE"]
  32 -> 50 [style=solid label="T_L_PARENTHESIS"]
  32 -> 51 [style=solid label="T_IDENTIFIER"]
  32 -> 52 [style=solid label="T_INT_CONST"]
  32 -> 53 [style=solid label="T_FLOAT_CONST"]
  32 -> 54 [style=solid label="T_CHAR_CONST"]
  32 -> 55 [style=solid label="T_STRING_CONST"]
  32 -> 15 [style=solid label="T_BOOL"]
  32 -> 56 [style=dashed label="SCOPE"]
  32 -> 107 [style=dashed label="SINGLE_STATEMENT"]
  32 -> 59 [style=dashed label="ENUMERATION"]
  32 -> 60 [style=dashed label="SELECTION_STATEMENT"]
  32 -> 61 [style=dashed label="ITERATION_STATEMENT"]
  32 -> 62 [style=dashed label="JUMP_STATEMENT"]
  32 -> 63 [style=dashed label="EXPRESSION_STATEMENT"]
  32 -> 64 [style=dashed label="EXPRESSION"]
  32 -> 65 [style=dashed label="DECLARATOR"]
  32 -> 66 [style=dashed label="VARIABLE_DECLARATION"]
  32 -> 67 [style=dashed label="TYPE_DEF"]
  32 -> 68 [style=dashed label="TYPE_SPECIFIER"]
  32 -> 69 [style=dashed label="STRUCT_DEFINITION"]
  32 -> 70 [style=dashed label="STRUCT_DECLARATION"]
  32 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  32 -> 72 [style=dashed label="ASSIGNMENT_STATEMENT"]
  32 -> 73 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  32 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  32 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  32 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  32 -> 77 [style=dashed label="UNARY_OPERATOR"]
  32 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  32 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  32 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  32 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  32 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  32 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  32 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  32 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  32 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  32 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  32 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  33 [label="State 33\n\l 61 ITERATION_STATEMENT: T_FOR . T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 62                    | T_FOR . T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT T_R_PARENTHESIS SINGLE_STATEMENT\l"]
  33 -> 108 [style=solid label="T_L_PARENTHESIS"]
  34 [label="State 34\n\l 46 SELECTION_STATEMENT: T_IF . T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 47                    | T_IF . T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l"]
  34 -> 109 [style=solid label="T_L_PARENTHESIS"]
  35 [label="State 35\n\l 63 JUMP_STATEMENT: T_RETURN . T_SEMICOLON\l 64               | T_RETURN . EXPRESSION T_SEMICOLON\l 69 EXPRESSION: . VARIABLE_DECLARATION\l 70           | . ASSIGNMENT_STATEMENT\l 71           | . MATH_OR_BITWISE_EXPRESSION\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l105 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | . DECLARATOR\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  35 -> 1 [style=solid label="T_CHAR"]
  35 -> 2 [style=solid label="T_DOUBLE"]
  35 -> 4 [style=solid label="T_FLOAT"]
  35 -> 5 [style=solid label="T_INT"]
  35 -> 6 [style=solid label="T_LONG"]
  35 -> 7 [style=solid label="T_SHORT"]
  35 -> 8 [style=solid label="T_SIGNED"]
  35 -> 36 [style=solid label="T_SIZEOF"]
  35 -> 11 [style=solid label="T_UNSIGNED"]
  35 -> 12 [style=solid label="T_VOID"]
  35 -> 40 [style=solid label="T_AND"]
  35 -> 41 [style=solid label="T_NOT"]
  35 -> 42 [style=solid label="T_INVERT"]
  35 -> 43 [style=solid label="T_MINUS"]
  35 -> 44 [style=solid label="T_PLUS"]
  35 -> 45 [style=solid label="T_MULT"]
  35 -> 46 [style=solid label="T_INC_OP"]
  35 -> 47 [style=solid label="T_DEC_OP"]
  35 -> 110 [style=solid label="T_SEMICOLON"]
  35 -> 50 [style=solid label="T_L_PARENTHESIS"]
  35 -> 51 [style=solid label="T_IDENTIFIER"]
  35 -> 52 [style=solid label="T_INT_CONST"]
  35 -> 53 [style=solid label="T_FLOAT_CONST"]
  35 -> 54 [style=solid label="T_CHAR_CONST"]
  35 -> 55 [style=solid label="T_STRING_CONST"]
  35 -> 15 [style=solid label="T_BOOL"]
  35 -> 111 [style=dashed label="EXPRESSION"]
  35 -> 65 [style=dashed label="DECLARATOR"]
  35 -> 66 [style=dashed label="VARIABLE_DECLARATION"]
  35 -> 68 [style=dashed label="TYPE_SPECIFIER"]
  35 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  35 -> 72 [style=dashed label="ASSIGNMENT_STATEMENT"]
  35 -> 73 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  35 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  35 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  35 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  35 -> 77 [style=dashed label="UNARY_OPERATOR"]
  35 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  35 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  35 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  35 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  35 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  35 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  35 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  35 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  35 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  35 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  35 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  36 [label="State 36\n\l118 PRIMARY_EXPRESSION: T_SIZEOF . T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | T_SIZEOF . T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l"]
  36 -> 112 [style=solid label="T_L_PARENTHESIS"]
  37 [label="State 37\n\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l 99 STRUCT_DEFINITION: T_STRUCT . T_IDENTIFIER T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON\l100 STRUCT_DECLARATION: T_STRUCT . TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l"]
  37 -> 1 [style=solid label="T_CHAR"]
  37 -> 2 [style=solid label="T_DOUBLE"]
  37 -> 4 [style=solid label="T_FLOAT"]
  37 -> 5 [style=solid label="T_INT"]
  37 -> 6 [style=solid label="T_LONG"]
  37 -> 7 [style=solid label="T_SHORT"]
  37 -> 8 [style=solid label="T_SIGNED"]
  37 -> 11 [style=solid label="T_UNSIGNED"]
  37 -> 12 [style=solid label="T_VOID"]
  37 -> 113 [style=solid label="T_IDENTIFIER"]
  37 -> 15 [style=solid label="T_BOOL"]
  37 -> 114 [style=dashed label="TYPE_SPECIFIER"]
  38 [label="State 38\n\l 49 SELECTION_STATEMENT: T_SWITCH . T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS WRAPPED_CASE_STATEMENTS\l 50                    | T_SWITCH . T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l"]
  38 -> 115 [style=solid label="T_L_PARENTHESIS"]
  39 [label="State 39\n\l 59 ITERATION_STATEMENT: T_WHILE . T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l"]
  39 -> 116 [style=solid label="T_L_PARENTHESIS"]
  40 [label="State 40\n\l127 UNARY_OPERATOR: T_AND .\l"]
  40 -> "40R127" [style=solid]
 "40R127" [label="R127", fillcolor=3, shape=diamond, style=filled]
  41 [label="State 41\n\l131 UNARY_OPERATOR: T_NOT .\l"]
  41 -> "41R131" [style=solid]
 "41R131" [label="R131", fillcolor=3, shape=diamond, style=filled]
  42 [label="State 42\n\l130 UNARY_OPERATOR: T_INVERT .\l"]
  42 -> "42R130" [style=solid]
 "42R130" [label="R130", fillcolor=3, shape=diamond, style=filled]
  43 [label="State 43\n\l129 UNARY_OPERATOR: T_MINUS .\l"]
  43 -> "43R129" [style=solid]
 "43R129" [label="R129", fillcolor=3, shape=diamond, style=filled]
  44 [label="State 44\n\l128 UNARY_OPERATOR: T_PLUS .\l"]
  44 -> "44R128" [style=solid]
 "44R128" [label="R128", fillcolor=3, shape=diamond, style=filled]
  45 [label="State 45\n\l 84 DECLARATOR: T_MULT . T_IDENTIFIER\l"]
  45 -> 117 [style=solid label="T_IDENTIFIER"]
  46 [label="State 46\n\l125 UNARY_OPERATOR: T_INC_OP .\l"]
  46 -> "46R125" [style=solid]
 "46R125" [label="R125", fillcolor=3, shape=diamond, style=filled]
  47 [label="State 47\n\l126 UNARY_OPERATOR: T_DEC_OP .\l"]
  47 -> "47R126" [style=solid]
 "47R126" [label="R126", fillcolor=3, shape=diamond, style=filled]
  48 [label="State 48\n\l 67 EXPRESSION_STATEMENT: T_SEMICOLON .\l"]
  48 -> "48R67" [style=solid]
 "48R67" [label="R67", fillcolor=3, shape=diamond, style=filled]
  49 [label="State 49\n\l 28 SCOPE: T_L_BRACE T_R_BRACE .\l"]
  49 -> "49R28" [style=solid]
 "49R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  50 [label="State 50\n\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l116                   | T_L_PARENTHESIS . MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  50 -> 36 [style=solid label="T_SIZEOF"]
  50 -> 40 [style=solid label="T_AND"]
  50 -> 41 [style=solid label="T_NOT"]
  50 -> 42 [style=solid label="T_INVERT"]
  50 -> 43 [style=solid label="T_MINUS"]
  50 -> 44 [style=solid label="T_PLUS"]
  50 -> 45 [style=solid label="T_MULT"]
  50 -> 46 [style=solid label="T_INC_OP"]
  50 -> 47 [style=solid label="T_DEC_OP"]
  50 -> 50 [style=solid label="T_L_PARENTHESIS"]
  50 -> 96 [style=solid label="T_IDENTIFIER"]
  50 -> 52 [style=solid label="T_INT_CONST"]
  50 -> 53 [style=solid label="T_FLOAT_CONST"]
  50 -> 54 [style=solid label="T_CHAR_CONST"]
  50 -> 55 [style=solid label="T_STRING_CONST"]
  50 -> 118 [style=dashed label="DECLARATOR"]
  50 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  50 -> 119 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  50 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  50 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  50 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  50 -> 77 [style=dashed label="UNARY_OPERATOR"]
  50 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  50 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  50 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  50 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  50 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  50 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  50 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  50 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  50 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  50 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  50 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  51 [label="State 51\n\l 83 DECLARATOR: T_IDENTIFIER .  [T_AND, T_MINUS, T_PLUS, T_MULT, T_DIV, T_MOD, T_LT, T_GT, T_XOR, T_OR, T_RSHIFT_ASSIGN, T_LSHIFT_ASSIGN, T_ADD_ASSIGN, T_SUB_ASSIGN, T_MUL_ASSIGN, T_DIV_ASSIGN, T_MOD_ASSIGN, T_AND_ASSIGN, T_XOR_ASSIGN, T_OR_ASSIGN, T_EQ_ASSIGN, T_RSHIFT_OP, T_LSHIFT_OP, T_INC_OP, T_DEC_OP, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COLON, T_L_PARENTHESIS, T_R_PARENTHESIS]\l 85           | T_IDENTIFIER . T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 98 TYPE_SPECIFIER: T_IDENTIFIER .  [T_MULT, T_R_PARENTHESIS, T_IDENTIFIER]\l101 STRUCT_ATTRIBUTE: T_IDENTIFIER . T_DOT T_IDENTIFIER\l"]
  51 -> 120 [style=solid label="T_DOT"]
  51 -> 121 [style=solid label="T_L_BRACKET"]
  51 -> "51R83" [style=solid]
 "51R83" [label="R83", fillcolor=3, shape=diamond, style=filled]
  51 -> "51R98d" [label="[T_MULT, T_R_PARENTHESIS]", style=solid]
 "51R98d" [label="R98", fillcolor=5, shape=diamond, style=filled]
  51 -> "51R98" [label="[T_IDENTIFIER]", style=solid]
 "51R98" [label="R98", fillcolor=3, shape=diamond, style=filled]
  52 [label="State 52\n\l112 PRIMARY_EXPRESSION: T_INT_CONST .\l"]
  52 -> "52R112" [style=solid]
 "52R112" [label="R112", fillcolor=3, shape=diamond, style=filled]
  53 [label="State 53\n\l113 PRIMARY_EXPRESSION: T_FLOAT_CONST .\l"]
  53 -> "53R113" [style=solid]
 "53R113" [label="R113", fillcolor=3, shape=diamond, style=filled]
  54 [label="State 54\n\l114 PRIMARY_EXPRESSION: T_CHAR_CONST .\l"]
  54 -> "54R114" [style=solid]
 "54R114" [label="R114", fillcolor=3, shape=diamond, style=filled]
  55 [label="State 55\n\l115 PRIMARY_EXPRESSION: T_STRING_CONST .\l"]
  55 -> "55R115" [style=solid]
 "55R115" [label="R115", fillcolor=3, shape=diamond, style=filled]
  56 [label="State 56\n\l 31 SINGLE_STATEMENT: SCOPE .\l"]
  56 -> "56R31" [style=solid]
 "56R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  57 [label="State 57\n\l 27 SCOPE: T_L_BRACE MULTIPLE_STATEMENTS . T_R_BRACE\l"]
  57 -> 122 [style=solid label="T_R_BRACE"]
  58 [label="State 58\n\l 27 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 28      | . T_L_BRACE T_R_BRACE\l 29 MULTIPLE_STATEMENTS: . SINGLE_STATEMENT MULTIPLE_STATEMENTS\l 29                    | SINGLE_STATEMENT . MULTIPLE_STATEMENTS\l 30                    | . SINGLE_STATEMENT\l 30                    | SINGLE_STATEMENT .  [T_BREAK, T_CASE, T_CHAR, T_CONTINUE, T_DEFAULT, T_DO, T_DOUBLE, T_ELSE, T_ENUM, T_FLOAT, T_FOR, T_IF, T_INT, T_LONG, T_RETURN, T_SHORT, T_SIGNED, T_SIZEOF, T_STRUCT, T_SWITCH, T_TYPEDEF, T_UNSIGNED, T_VOID, T_WHILE, T_AND, T_NOT, T_INVERT, T_MINUS, T_PLUS, T_MULT, T_INC_OP, T_DEC_OP, T_SEMICOLON, T_L_BRACE, T_R_BRACE, T_L_PARENTHESIS, T_IDENTIFIER, T_INT_CONST, T_FLOAT_CONST, T_CHAR_CONST, T_STRING_CONST, T_BOOL]\l 31 SINGLE_STATEMENT: . SCOPE\l 32                 | . EXPRESSION_STATEMENT\l 33                 | . JUMP_STATEMENT\l 34                 | . ITERATION_STATEMENT\l 35                 | . SELECTION_STATEMENT\l 36                 | . ENUMERATION\l 37                 | . TYPE_DEF\l 38                 | . STRUCT_DEFINITION\l 39                 | . STRUCT_DECLARATION\l 40 ENUMERATION: . T_ENUM T_IDENTIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 41            | . T_ENUM T_IDENTIFIER T_COLON TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 46 SELECTION_STATEMENT: . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 47                    | . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l 48                    | . T_ELSE SINGLE_STATEMENT\l 49                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS WRAPPED_CASE_STATEMENTS\l 50                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 59 ITERATION_STATEMENT: . T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 60                    | . T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l 61                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 62                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT T_R_PARENTHESIS SINGLE_STATEMENT\l 63 JUMP_STATEMENT: . T_RETURN T_SEMICOLON\l 64               | . T_RETURN EXPRESSION T_SEMICOLON\l 65               | . T_BREAK T_SEMICOLON\l 66               | . T_CONTINUE T_SEMICOLON\l 67 EXPRESSION_STATEMENT: . T_SEMICOLON\l 68                     | . EXPRESSION T_SEMICOLON\l 69 EXPRESSION: . VARIABLE_DECLARATION\l 70           | . ASSIGNMENT_STATEMENT\l 71           | . MATH_OR_BITWISE_EXPRESSION\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 87 TYPE_DEF: . T_TYPEDEF TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l 99 STRUCT_DEFINITION: . T_STRUCT T_IDENTIFIER T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON\l100 STRUCT_DECLARATION: . T_STRUCT TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l105 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | . DECLARATOR\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  58 -> 29 [style=solid label="T_BREAK"]
  58 -> 1 [style=solid label="T_CHAR"]
  58 -> 30 [style=solid label="T_CONTINUE"]
  58 -> 31 [style=solid label="T_DO"]
  58 -> 2 [style=solid label="T_DOUBLE"]
  58 -> 32 [style=solid label="T_ELSE"]
  58 -> 3 [style=solid label="T_ENUM"]
  58 -> 4 [style=solid label="T_FLOAT"]
  58 -> 33 [style=solid label="T_FOR"]
  58 -> 34 [style=solid label="T_IF"]
  58 -> 5 [style=solid label="T_INT"]
  58 -> 6 [style=solid label="T_LONG"]
  58 -> 35 [style=solid label="T_RETURN"]
  58 -> 7 [style=solid label="T_SHORT"]
  58 -> 8 [style=solid label="T_SIGNED"]
  58 -> 36 [style=solid label="T_SIZEOF"]
  58 -> 37 [style=solid label="T_STRUCT"]
  58 -> 38 [style=solid label="T_SWITCH"]
  58 -> 10 [style=solid label="T_TYPEDEF"]
  58 -> 11 [style=solid label="T_UNSIGNED"]
  58 -> 12 [style=solid label="T_VOID"]
  58 -> 39 [style=solid label="T_WHILE"]
  58 -> 40 [style=solid label="T_AND"]
  58 -> 41 [style=solid label="T_NOT"]
  58 -> 42 [style=solid label="T_INVERT"]
  58 -> 43 [style=solid label="T_MINUS"]
  58 -> 44 [style=solid label="T_PLUS"]
  58 -> 45 [style=solid label="T_MULT"]
  58 -> 46 [style=solid label="T_INC_OP"]
  58 -> 47 [style=solid label="T_DEC_OP"]
  58 -> 48 [style=solid label="T_SEMICOLON"]
  58 -> 13 [style=solid label="T_L_BRACE"]
  58 -> 50 [style=solid label="T_L_PARENTHESIS"]
  58 -> 51 [style=solid label="T_IDENTIFIER"]
  58 -> 52 [style=solid label="T_INT_CONST"]
  58 -> 53 [style=solid label="T_FLOAT_CONST"]
  58 -> 54 [style=solid label="T_CHAR_CONST"]
  58 -> 55 [style=solid label="T_STRING_CONST"]
  58 -> 15 [style=solid label="T_BOOL"]
  58 -> 56 [style=dashed label="SCOPE"]
  58 -> 123 [style=dashed label="MULTIPLE_STATEMENTS"]
  58 -> 58 [style=dashed label="SINGLE_STATEMENT"]
  58 -> 59 [style=dashed label="ENUMERATION"]
  58 -> 60 [style=dashed label="SELECTION_STATEMENT"]
  58 -> 61 [style=dashed label="ITERATION_STATEMENT"]
  58 -> 62 [style=dashed label="JUMP_STATEMENT"]
  58 -> 63 [style=dashed label="EXPRESSION_STATEMENT"]
  58 -> 64 [style=dashed label="EXPRESSION"]
  58 -> 65 [style=dashed label="DECLARATOR"]
  58 -> 66 [style=dashed label="VARIABLE_DECLARATION"]
  58 -> 67 [style=dashed label="TYPE_DEF"]
  58 -> 68 [style=dashed label="TYPE_SPECIFIER"]
  58 -> 69 [style=dashed label="STRUCT_DEFINITION"]
  58 -> 70 [style=dashed label="STRUCT_DECLARATION"]
  58 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  58 -> 72 [style=dashed label="ASSIGNMENT_STATEMENT"]
  58 -> 73 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  58 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  58 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  58 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  58 -> 77 [style=dashed label="UNARY_OPERATOR"]
  58 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  58 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  58 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  58 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  58 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  58 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  58 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  58 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  58 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  58 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  58 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  58 -> "58R30d" [label="[T_BREAK, T_CHAR, T_CONTINUE, T_DO, T_DOUBLE, T_ELSE, T_ENUM, T_FLOAT, T_FOR, T_IF, T_INT, T_LONG, T_RETURN, T_SHORT, T_SIGNED, T_SIZEOF, T_STRUCT, T_SWITCH, T_TYPEDEF, T_UNSIGNED, T_VOID, T_WHILE, T_AND, T_NOT, T_INVERT, T_MINUS, T_PLUS, T_MULT, T_INC_OP, T_DEC_OP, T_SEMICOLON, T_L_BRACE, T_L_PARENTHESIS, T_IDENTIFIER, T_INT_CONST, T_FLOAT_CONST, T_CHAR_CONST, T_STRING_CONST, T_BOOL]", style=solid]
 "58R30d" [label="R30", fillcolor=5, shape=diamond, style=filled]
  58 -> "58R30" [style=solid]
 "58R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  59 [label="State 59\n\l 36 SINGLE_STATEMENT: ENUMERATION .\l"]
  59 -> "59R36" [style=solid]
 "59R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  60 [label="State 60\n\l 35 SINGLE_STATEMENT: SELECTION_STATEMENT .\l"]
  60 -> "60R35" [style=solid]
 "60R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  61 [label="State 61\n\l 34 SINGLE_STATEMENT: ITERATION_STATEMENT .\l"]
  61 -> "61R34" [style=solid]
 "61R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  62 [label="State 62\n\l 33 SINGLE_STATEMENT: JUMP_STATEMENT .\l"]
  62 -> "62R33" [style=solid]
 "62R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  63 [label="State 63\n\l 32 SINGLE_STATEMENT: EXPRESSION_STATEMENT .\l"]
  63 -> "63R32" [style=solid]
 "63R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  64 [label="State 64\n\l 68 EXPRESSION_STATEMENT: EXPRESSION . T_SEMICOLON\l"]
  64 -> 124 [style=solid label="T_SEMICOLON"]
  65 [label="State 65\n\l 23 WRAPPED_PARAMETERS: . T_L_PARENTHESIS MULTIPLE_PARAMETERS T_R_PARENTHESIS\l 24                   | . T_L_PARENTHESIS T_R_PARENTHESIS\l 72 ASSIGNMENT_OPERATOR: . T_MUL_ASSIGN\l 73                    | . T_DIV_ASSIGN\l 74                    | . T_MOD_ASSIGN\l 75                    | . T_ADD_ASSIGN\l 76                    | . T_SUB_ASSIGN\l 77                    | . T_LSHIFT_ASSIGN\l 78                    | . T_RSHIFT_ASSIGN\l 79                    | . T_AND_ASSIGN\l 80                    | . T_XOR_ASSIGN\l 81                    | . T_OR_ASSIGN\l105 ASSIGNMENT_STATEMENT: DECLARATOR . T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | DECLARATOR . T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | DECLARATOR . T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | DECLARATOR .  [T_SEMICOLON, T_COLON, T_R_PARENTHESIS]\l110 MATH_OR_BITWISE_EXPRESSION: DECLARATOR . ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: DECLARATOR .  [T_AND, T_MINUS, T_PLUS, T_MULT, T_DIV, T_MOD, T_LT, T_GT, T_XOR, T_OR, T_RSHIFT_OP, T_LSHIFT_OP, T_INC_OP, T_DEC_OP, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_PARENTHESIS]\l117                   | DECLARATOR . WRAPPED_PARAMETERS\l"]
  65 -> 125 [style=solid label="T_RSHIFT_ASSIGN"]
  65 -> 126 [style=solid label="T_LSHIFT_ASSIGN"]
  65 -> 127 [style=solid label="T_ADD_ASSIGN"]
  65 -> 128 [style=solid label="T_SUB_ASSIGN"]
  65 -> 129 [style=solid label="T_MUL_ASSIGN"]
  65 -> 130 [style=solid label="T_DIV_ASSIGN"]
  65 -> 131 [style=solid label="T_MOD_ASSIGN"]
  65 -> 132 [style=solid label="T_AND_ASSIGN"]
  65 -> 133 [style=solid label="T_XOR_ASSIGN"]
  65 -> 134 [style=solid label="T_OR_ASSIGN"]
  65 -> 135 [style=solid label="T_EQ_ASSIGN"]
  65 -> 136 [style=solid label="T_L_PARENTHESIS"]
  65 -> 137 [style=dashed label="WRAPPED_PARAMETERS"]
  65 -> 138 [style=dashed label="ASSIGNMENT_OPERATOR"]
  65 -> "65R108" [label="[T_SEMICOLON, T_COLON, T_R_PARENTHESIS]", style=solid]
 "65R108" [label="R108", fillcolor=3, shape=diamond, style=filled]
  65 -> "65R111d" [label="[T_SEMICOLON, T_COLON, T_R_PARENTHESIS]", style=solid]
 "65R111d" [label="R111", fillcolor=5, shape=diamond, style=filled]
  65 -> "65R111" [style=solid]
 "65R111" [label="R111", fillcolor=3, shape=diamond, style=filled]
  66 [label="State 66\n\l 69 EXPRESSION: VARIABLE_DECLARATION .\l"]
  66 -> "66R69" [style=solid]
 "66R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
  67 [label="State 67\n\l 37 SINGLE_STATEMENT: TYPE_DEF .\l"]
  67 -> "67R37" [style=solid]
 "67R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  68 [label="State 68\n\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 86 VARIABLE_DECLARATION: TYPE_SPECIFIER . ASSIGNMENT_STATEMENT\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l105 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | . DECLARATOR\l"]
  68 -> 45 [style=solid label="T_MULT"]
  68 -> 96 [style=solid label="T_IDENTIFIER"]
  68 -> 139 [style=dashed label="DECLARATOR"]
  68 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  68 -> 98 [style=dashed label="ASSIGNMENT_STATEMENT"]
  69 [label="State 69\n\l 38 SINGLE_STATEMENT: STRUCT_DEFINITION .\l"]
  69 -> "69R38" [style=solid]
 "69R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  70 [label="State 70\n\l 39 SINGLE_STATEMENT: STRUCT_DECLARATION .\l"]
  70 -> "70R39" [style=solid]
 "70R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  71 [label="State 71\n\l 82 DECLARATOR: STRUCT_ATTRIBUTE .\l"]
  71 -> "71R82" [style=solid]
 "71R82" [label="R82", fillcolor=3, shape=diamond, style=filled]
  72 [label="State 72\n\l 70 EXPRESSION: ASSIGNMENT_STATEMENT .\l"]
  72 -> "72R70" [style=solid]
 "72R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  73 [label="State 73\n\l 71 EXPRESSION: MATH_OR_BITWISE_EXPRESSION .\l"]
  73 -> "73R71" [style=solid]
 "73R71" [label="R71", fillcolor=3, shape=diamond, style=filled]
  74 [label="State 74\n\l120 POSTFIX_EXPRESSION: PRIMARY_EXPRESSION .\l"]
  74 -> "74R120" [style=solid]
 "74R120" [label="R120", fillcolor=3, shape=diamond, style=filled]
  75 [label="State 75\n\l121 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION . T_INC_OP\l122                   | POSTFIX_EXPRESSION . T_DEC_OP\l123 UNARY_EXPRESSION: POSTFIX_EXPRESSION .  [T_AND, T_MINUS, T_PLUS, T_MULT, T_DIV, T_MOD, T_LT, T_GT, T_XOR, T_OR, T_RSHIFT_OP, T_LSHIFT_OP, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  75 -> 140 [style=solid label="T_INC_OP"]
  75 -> 141 [style=solid label="T_DEC_OP"]
  75 -> "75R123" [style=solid]
 "75R123" [label="R123", fillcolor=3, shape=diamond, style=filled]
  76 [label="State 76\n\l132 MULTIPLICATIVE_EXPRESSION: UNARY_EXPRESSION .\l"]
  76 -> "76R132" [style=solid]
 "76R132" [label="R132", fillcolor=3, shape=diamond, style=filled]
  77 [label="State 77\n\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l124                 | UNARY_OPERATOR . UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l"]
  77 -> 36 [style=solid label="T_SIZEOF"]
  77 -> 40 [style=solid label="T_AND"]
  77 -> 41 [style=solid label="T_NOT"]
  77 -> 42 [style=solid label="T_INVERT"]
  77 -> 43 [style=solid label="T_MINUS"]
  77 -> 44 [style=solid label="T_PLUS"]
  77 -> 45 [style=solid label="T_MULT"]
  77 -> 46 [style=solid label="T_INC_OP"]
  77 -> 47 [style=solid label="T_DEC_OP"]
  77 -> 50 [style=solid label="T_L_PARENTHESIS"]
  77 -> 96 [style=solid label="T_IDENTIFIER"]
  77 -> 52 [style=solid label="T_INT_CONST"]
  77 -> 53 [style=solid label="T_FLOAT_CONST"]
  77 -> 54 [style=solid label="T_CHAR_CONST"]
  77 -> 55 [style=solid label="T_STRING_CONST"]
  77 -> 142 [style=dashed label="DECLARATOR"]
  77 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  77 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  77 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  77 -> 143 [style=dashed label="UNARY_EXPRESSION"]
  77 -> 77 [style=dashed label="UNARY_OPERATOR"]
  78 [label="State 78\n\l133 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . T_MULT UNARY_EXPRESSION\l134                          | MULTIPLICATIVE_EXPRESSION . T_DIV UNARY_EXPRESSION\l135                          | MULTIPLICATIVE_EXPRESSION . T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION .  [T_AND, T_MINUS, T_PLUS, T_LT, T_GT, T_XOR, T_OR, T_RSHIFT_OP, T_LSHIFT_OP, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  78 -> 144 [style=solid label="T_MULT"]
  78 -> 145 [style=solid label="T_DIV"]
  78 -> 146 [style=solid label="T_MOD"]
  78 -> "78R136" [style=solid]
 "78R136" [label="R136", fillcolor=3, shape=diamond, style=filled]
  79 [label="State 79\n\l137 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | ADDITIVE_EXPRESSION . T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: ADDITIVE_EXPRESSION .  [T_AND, T_LT, T_GT, T_XOR, T_OR, T_RSHIFT_OP, T_LSHIFT_OP, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  79 -> 147 [style=solid label="T_MINUS"]
  79 -> 148 [style=solid label="T_PLUS"]
  79 -> "79R139" [style=solid]
 "79R139" [label="R139", fillcolor=3, shape=diamond, style=filled]
  80 [label="State 80\n\l140 SHIFT_EXPRESSION: SHIFT_EXPRESSION . T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | SHIFT_EXPRESSION . T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: SHIFT_EXPRESSION .  [T_AND, T_LT, T_GT, T_XOR, T_OR, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  80 -> 149 [style=solid label="T_RSHIFT_OP"]
  80 -> 150 [style=solid label="T_LSHIFT_OP"]
  80 -> "80R142" [style=solid]
 "80R142" [label="R142", fillcolor=3, shape=diamond, style=filled]
  81 [label="State 81\n\l143 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION . T_LT SHIFT_EXPRESSION\l144                      | RELATIONAL_EXPRESSION . T_GT SHIFT_EXPRESSION\l145                      | RELATIONAL_EXPRESSION . T_LE_OP SHIFT_EXPRESSION\l146                      | RELATIONAL_EXPRESSION . T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: RELATIONAL_EXPRESSION .  [T_AND, T_XOR, T_OR, T_AND_OP, T_OR_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  81 -> 151 [style=solid label="T_LT"]
  81 -> 152 [style=solid label="T_GT"]
  81 -> 153 [style=solid label="T_LE_OP"]
  81 -> 154 [style=solid label="T_GE_OP"]
  81 -> "81R147" [style=solid]
 "81R147" [label="R147", fillcolor=3, shape=diamond, style=filled]
  82 [label="State 82\n\l148 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION . T_EQ_OP RELATIONAL_EXPRESSION\l149                    | EQUALITY_EXPRESSION . T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: EQUALITY_EXPRESSION .  [T_AND, T_XOR, T_OR, T_AND_OP, T_OR_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  82 -> 155 [style=solid label="T_EQ_OP"]
  82 -> 156 [style=solid label="T_NE_OP"]
  82 -> "82R150" [style=solid]
 "82R150" [label="R150", fillcolor=3, shape=diamond, style=filled]
  83 [label="State 83\n\l151 BITWISE_AND_EXPRESSION: BITWISE_AND_EXPRESSION . T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: BITWISE_AND_EXPRESSION .  [T_XOR, T_OR, T_AND_OP, T_OR_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  83 -> 157 [style=solid label="T_AND"]
  83 -> "83R152" [style=solid]
 "83R152" [label="R152", fillcolor=3, shape=diamond, style=filled]
  84 [label="State 84\n\l153 BITWISE_XOR_EXPRESSION: BITWISE_XOR_EXPRESSION . T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: BITWISE_XOR_EXPRESSION .  [T_OR, T_AND_OP, T_OR_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  84 -> 158 [style=solid label="T_XOR"]
  84 -> "84R154" [style=solid]
 "84R154" [label="R154", fillcolor=3, shape=diamond, style=filled]
  85 [label="State 85\n\l155 BITWISE_OR_EXPRESSION: BITWISE_OR_EXPRESSION . T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: BITWISE_OR_EXPRESSION .  [T_AND_OP, T_OR_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  85 -> 159 [style=solid label="T_OR"]
  85 -> "85R156" [style=solid]
 "85R156" [label="R156", fillcolor=3, shape=diamond, style=filled]
  86 [label="State 86\n\l157 BOOLEAN_AND_EXPRESSION: BOOLEAN_AND_EXPRESSION . T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: BOOLEAN_AND_EXPRESSION .  [T_OR_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  86 -> 160 [style=solid label="T_AND_OP"]
  86 -> "86R158" [style=solid]
 "86R158" [label="R158", fillcolor=3, shape=diamond, style=filled]
  87 [label="State 87\n\l159 BOOLEAN_OR_EXPRESSION: BOOLEAN_OR_EXPRESSION . T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: BOOLEAN_OR_EXPRESSION .  [T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  87 -> 161 [style=solid label="T_OR_OP"]
  87 -> "87R160" [style=solid]
 "87R160" [label="R160", fillcolor=3, shape=diamond, style=filled]
  88 [label="State 88\n\l109 MATH_OR_BITWISE_EXPRESSION: CONDITIONAL_EXPRESSION .\l"]
  88 -> "88R109" [style=solid]
 "88R109" [label="R109", fillcolor=3, shape=diamond, style=filled]
  89 [label="State 89\n\l  0 $accept: ROOT $end .\l"]
  89 -> "89R0" [style=solid]
 "89R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  90 [label="State 90\n\l 13 FRAME: FUNCTION_DECLARATION FRAME .\l"]
  90 -> "90R13" [style=solid]
 "90R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  91 [label="State 91\n\l 12 FRAME: FUNCTION_DEFINITION FRAME .\l"]
  91 -> "91R12" [style=solid]
 "91R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  92 [label="State 92\n\l 11 FRAME: SCOPE FRAME .\l"]
  92 -> "92R11" [style=solid]
 "92R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  93 [label="State 93\n\l 14 FRAME: ENUMERATION FRAME .\l"]
  93 -> "93R14" [style=solid]
 "93R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  94 [label="State 94\n\l  2 FRAME: . SCOPE\l  3      | . ENUMERATION\l  4      | . FUNCTION_DEFINITION\l  5      | . FUNCTION_DECLARATION\l  6      | . TYPE_DEF\l  7      | . STRUCT_DEFINITION\l  8      | . VARIABLE_DECLARATION T_SEMICOLON\l  8      | VARIABLE_DECLARATION T_SEMICOLON .  [$end]\l  9      | . STRUCT_DEFINITION FRAME\l 10      | . VARIABLE_DECLARATION T_SEMICOLON FRAME\l 10      | VARIABLE_DECLARATION T_SEMICOLON . FRAME\l 11      | . SCOPE FRAME\l 12      | . FUNCTION_DEFINITION FRAME\l 13      | . FUNCTION_DECLARATION FRAME\l 14      | . ENUMERATION FRAME\l 15      | . TYPE_DEF FRAME\l 16 FUNCTION_DECLARATION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS T_SEMICOLON\l 17 FUNCTION_DEFINITION: . TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS SCOPE\l 27 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 28      | . T_L_BRACE T_R_BRACE\l 40 ENUMERATION: . T_ENUM T_IDENTIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 41            | . T_ENUM T_IDENTIFIER T_COLON TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 87 TYPE_DEF: . T_TYPEDEF TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l 99 STRUCT_DEFINITION: . T_STRUCT T_IDENTIFIER T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON\l"]
  94 -> 1 [style=solid label="T_CHAR"]
  94 -> 2 [style=solid label="T_DOUBLE"]
  94 -> 3 [style=solid label="T_ENUM"]
  94 -> 4 [style=solid label="T_FLOAT"]
  94 -> 5 [style=solid label="T_INT"]
  94 -> 6 [style=solid label="T_LONG"]
  94 -> 7 [style=solid label="T_SHORT"]
  94 -> 8 [style=solid label="T_SIGNED"]
  94 -> 9 [style=solid label="T_STRUCT"]
  94 -> 10 [style=solid label="T_TYPEDEF"]
  94 -> 11 [style=solid label="T_UNSIGNED"]
  94 -> 12 [style=solid label="T_VOID"]
  94 -> 13 [style=solid label="T_L_BRACE"]
  94 -> 14 [style=solid label="T_IDENTIFIER"]
  94 -> 15 [style=solid label="T_BOOL"]
  94 -> 162 [style=dashed label="FRAME"]
  94 -> 18 [style=dashed label="FUNCTION_DECLARATION"]
  94 -> 19 [style=dashed label="FUNCTION_DEFINITION"]
  94 -> 20 [style=dashed label="SCOPE"]
  94 -> 21 [style=dashed label="ENUMERATION"]
  94 -> 22 [style=dashed label="VARIABLE_DECLARATION"]
  94 -> 23 [style=dashed label="TYPE_DEF"]
  94 -> 24 [style=dashed label="TYPE_SPECIFIER"]
  94 -> 25 [style=dashed label="STRUCT_DEFINITION"]
  94 -> "94R8" [style=solid]
 "94R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  95 [label="State 95\n\l 15 FRAME: TYPE_DEF FRAME .\l"]
  95 -> "95R15" [style=solid]
 "95R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  96 [label="State 96\n\l 83 DECLARATOR: T_IDENTIFIER .  [T_AND, T_MINUS, T_PLUS, T_MULT, T_DIV, T_MOD, T_LT, T_GT, T_XOR, T_OR, T_RSHIFT_ASSIGN, T_LSHIFT_ASSIGN, T_ADD_ASSIGN, T_SUB_ASSIGN, T_MUL_ASSIGN, T_DIV_ASSIGN, T_MOD_ASSIGN, T_AND_ASSIGN, T_XOR_ASSIGN, T_OR_ASSIGN, T_EQ_ASSIGN, T_RSHIFT_OP, T_LSHIFT_OP, T_INC_OP, T_DEC_OP, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_L_PARENTHESIS, T_R_PARENTHESIS, T_R_BRACKET]\l 85           | T_IDENTIFIER . T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: T_IDENTIFIER . T_DOT T_IDENTIFIER\l"]
  96 -> 120 [style=solid label="T_DOT"]
  96 -> 121 [style=solid label="T_L_BRACKET"]
  96 -> "96R83" [style=solid]
 "96R83" [label="R83", fillcolor=3, shape=diamond, style=filled]
  97 [label="State 97\n\l 16 FUNCTION_DECLARATION: TYPE_SPECIFIER DECLARATOR . WRAPPED_ARGUMENTS T_SEMICOLON\l 17 FUNCTION_DEFINITION: TYPE_SPECIFIER DECLARATOR . WRAPPED_ARGUMENTS SCOPE\l 18 WRAPPED_ARGUMENTS: . T_L_PARENTHESIS MULTIPLE_ARGUMENTS T_R_PARENTHESIS\l 19                  | . T_L_PARENTHESIS T_R_PARENTHESIS\l105 ASSIGNMENT_STATEMENT: DECLARATOR . T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | DECLARATOR . T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | DECLARATOR . T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | DECLARATOR .  [T_SEMICOLON]\l"]
  97 -> 135 [style=solid label="T_EQ_ASSIGN"]
  97 -> 163 [style=solid label="T_L_PARENTHESIS"]
  97 -> 164 [style=dashed label="WRAPPED_ARGUMENTS"]
  97 -> "97R108" [style=solid]
 "97R108" [label="R108", fillcolor=3, shape=diamond, style=filled]
  98 [label="State 98\n\l 86 VARIABLE_DECLARATION: TYPE_SPECIFIER ASSIGNMENT_STATEMENT .\l"]
  98 -> "98R86" [style=solid]
 "98R86" [label="R86", fillcolor=3, shape=diamond, style=filled]
  99 [label="State 99\n\l  9 FRAME: STRUCT_DEFINITION FRAME .\l"]
  99 -> "99R9" [style=solid]
 "99R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  100 [label="State 100\n\l 41 ENUMERATION: T_ENUM T_IDENTIFIER T_COLON . TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l"]
  100 -> 1 [style=solid label="T_CHAR"]
  100 -> 2 [style=solid label="T_DOUBLE"]
  100 -> 4 [style=solid label="T_FLOAT"]
  100 -> 5 [style=solid label="T_INT"]
  100 -> 6 [style=solid label="T_LONG"]
  100 -> 7 [style=solid label="T_SHORT"]
  100 -> 8 [style=solid label="T_SIGNED"]
  100 -> 11 [style=solid label="T_UNSIGNED"]
  100 -> 12 [style=solid label="T_VOID"]
  100 -> 14 [style=solid label="T_IDENTIFIER"]
  100 -> 15 [style=solid label="T_BOOL"]
  100 -> 165 [style=dashed label="TYPE_SPECIFIER"]
  101 [label="State 101\n\l 40 ENUMERATION: T_ENUM T_IDENTIFIER T_L_BRACE . MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 42 MULTIPLE_ENUMERATORS: . SINGLE_ENUMERATOR T_COMMA MULTIPLE_ENUMERATORS\l 43                     | . SINGLE_ENUMERATOR\l 44 SINGLE_ENUMERATOR: . T_IDENTIFIER\l 45                  | . T_IDENTIFIER T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l"]
  101 -> 166 [style=solid label="T_IDENTIFIER"]
  101 -> 167 [style=dashed label="MULTIPLE_ENUMERATORS"]
  101 -> 168 [style=dashed label="SINGLE_ENUMERATOR"]
  102 [label="State 102\n\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l 99 STRUCT_DEFINITION: T_STRUCT T_IDENTIFIER T_L_BRACE . MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON\l102 MULTIPLE_ATTRIBUTES: . SINGLE_ATTRIBUTE MULTIPLE_ATTRIBUTES\l103                    | . SINGLE_ATTRIBUTE\l104 SINGLE_ATTRIBUTE: . TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l"]
  102 -> 1 [style=solid label="T_CHAR"]
  102 -> 2 [style=solid label="T_DOUBLE"]
  102 -> 4 [style=solid label="T_FLOAT"]
  102 -> 5 [style=solid label="T_INT"]
  102 -> 6 [style=solid label="T_LONG"]
  102 -> 7 [style=solid label="T_SHORT"]
  102 -> 8 [style=solid label="T_SIGNED"]
  102 -> 11 [style=solid label="T_UNSIGNED"]
  102 -> 12 [style=solid label="T_VOID"]
  102 -> 14 [style=solid label="T_IDENTIFIER"]
  102 -> 15 [style=solid label="T_BOOL"]
  102 -> 169 [style=dashed label="TYPE_SPECIFIER"]
  102 -> 170 [style=dashed label="MULTIPLE_ATTRIBUTES"]
  102 -> 171 [style=dashed label="SINGLE_ATTRIBUTE"]
  103 [label="State 103\n\l 87 TYPE_DEF: T_TYPEDEF TYPE_SPECIFIER T_IDENTIFIER . T_SEMICOLON\l"]
  103 -> 172 [style=solid label="T_SEMICOLON"]
  104 [label="State 104\n\l 65 JUMP_STATEMENT: T_BREAK T_SEMICOLON .\l"]
  104 -> "104R65" [style=solid]
 "104R65" [label="R65", fillcolor=3, shape=diamond, style=filled]
  105 [label="State 105\n\l 66 JUMP_STATEMENT: T_CONTINUE T_SEMICOLON .\l"]
  105 -> "105R66" [style=solid]
 "105R66" [label="R66", fillcolor=3, shape=diamond, style=filled]
  106 [label="State 106\n\l 60 ITERATION_STATEMENT: T_DO SINGLE_STATEMENT . T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l"]
  106 -> 173 [style=solid label="T_WHILE"]
  107 [label="State 107\n\l 48 SELECTION_STATEMENT: T_ELSE SINGLE_STATEMENT .\l"]
  107 -> "107R48" [style=solid]
 "107R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  108 [label="State 108\n\l 61 ITERATION_STATEMENT: T_FOR T_L_PARENTHESIS . EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 62                    | T_FOR T_L_PARENTHESIS . EXPRESSION_STATEMENT EXPRESSION_STATEMENT T_R_PARENTHESIS SINGLE_STATEMENT\l 67 EXPRESSION_STATEMENT: . T_SEMICOLON\l 68                     | . EXPRESSION T_SEMICOLON\l 69 EXPRESSION: . VARIABLE_DECLARATION\l 70           | . ASSIGNMENT_STATEMENT\l 71           | . MATH_OR_BITWISE_EXPRESSION\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l105 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | . DECLARATOR\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  108 -> 1 [style=solid label="T_CHAR"]
  108 -> 2 [style=solid label="T_DOUBLE"]
  108 -> 4 [style=solid label="T_FLOAT"]
  108 -> 5 [style=solid label="T_INT"]
  108 -> 6 [style=solid label="T_LONG"]
  108 -> 7 [style=solid label="T_SHORT"]
  108 -> 8 [style=solid label="T_SIGNED"]
  108 -> 36 [style=solid label="T_SIZEOF"]
  108 -> 11 [style=solid label="T_UNSIGNED"]
  108 -> 12 [style=solid label="T_VOID"]
  108 -> 40 [style=solid label="T_AND"]
  108 -> 41 [style=solid label="T_NOT"]
  108 -> 42 [style=solid label="T_INVERT"]
  108 -> 43 [style=solid label="T_MINUS"]
  108 -> 44 [style=solid label="T_PLUS"]
  108 -> 45 [style=solid label="T_MULT"]
  108 -> 46 [style=solid label="T_INC_OP"]
  108 -> 47 [style=solid label="T_DEC_OP"]
  108 -> 48 [style=solid label="T_SEMICOLON"]
  108 -> 50 [style=solid label="T_L_PARENTHESIS"]
  108 -> 51 [style=solid label="T_IDENTIFIER"]
  108 -> 52 [style=solid label="T_INT_CONST"]
  108 -> 53 [style=solid label="T_FLOAT_CONST"]
  108 -> 54 [style=solid label="T_CHAR_CONST"]
  108 -> 55 [style=solid label="T_STRING_CONST"]
  108 -> 15 [style=solid label="T_BOOL"]
  108 -> 174 [style=dashed label="EXPRESSION_STATEMENT"]
  108 -> 64 [style=dashed label="EXPRESSION"]
  108 -> 65 [style=dashed label="DECLARATOR"]
  108 -> 66 [style=dashed label="VARIABLE_DECLARATION"]
  108 -> 68 [style=dashed label="TYPE_SPECIFIER"]
  108 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  108 -> 72 [style=dashed label="ASSIGNMENT_STATEMENT"]
  108 -> 73 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  108 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  108 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  108 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  108 -> 77 [style=dashed label="UNARY_OPERATOR"]
  108 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  108 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  108 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  108 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  108 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  108 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  108 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  108 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  108 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  108 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  108 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  109 [label="State 109\n\l 46 SELECTION_STATEMENT: T_IF T_L_PARENTHESIS . EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 47                    | T_IF T_L_PARENTHESIS . EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l 69 EXPRESSION: . VARIABLE_DECLARATION\l 70           | . ASSIGNMENT_STATEMENT\l 71           | . MATH_OR_BITWISE_EXPRESSION\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l105 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | . DECLARATOR\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  109 -> 1 [style=solid label="T_CHAR"]
  109 -> 2 [style=solid label="T_DOUBLE"]
  109 -> 4 [style=solid label="T_FLOAT"]
  109 -> 5 [style=solid label="T_INT"]
  109 -> 6 [style=solid label="T_LONG"]
  109 -> 7 [style=solid label="T_SHORT"]
  109 -> 8 [style=solid label="T_SIGNED"]
  109 -> 36 [style=solid label="T_SIZEOF"]
  109 -> 11 [style=solid label="T_UNSIGNED"]
  109 -> 12 [style=solid label="T_VOID"]
  109 -> 40 [style=solid label="T_AND"]
  109 -> 41 [style=solid label="T_NOT"]
  109 -> 42 [style=solid label="T_INVERT"]
  109 -> 43 [style=solid label="T_MINUS"]
  109 -> 44 [style=solid label="T_PLUS"]
  109 -> 45 [style=solid label="T_MULT"]
  109 -> 46 [style=solid label="T_INC_OP"]
  109 -> 47 [style=solid label="T_DEC_OP"]
  109 -> 50 [style=solid label="T_L_PARENTHESIS"]
  109 -> 51 [style=solid label="T_IDENTIFIER"]
  109 -> 52 [style=solid label="T_INT_CONST"]
  109 -> 53 [style=solid label="T_FLOAT_CONST"]
  109 -> 54 [style=solid label="T_CHAR_CONST"]
  109 -> 55 [style=solid label="T_STRING_CONST"]
  109 -> 15 [style=solid label="T_BOOL"]
  109 -> 175 [style=dashed label="EXPRESSION"]
  109 -> 65 [style=dashed label="DECLARATOR"]
  109 -> 66 [style=dashed label="VARIABLE_DECLARATION"]
  109 -> 68 [style=dashed label="TYPE_SPECIFIER"]
  109 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  109 -> 72 [style=dashed label="ASSIGNMENT_STATEMENT"]
  109 -> 73 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  109 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  109 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  109 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  109 -> 77 [style=dashed label="UNARY_OPERATOR"]
  109 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  109 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  109 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  109 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  109 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  109 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  109 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  109 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  109 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  109 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  109 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  110 [label="State 110\n\l 63 JUMP_STATEMENT: T_RETURN T_SEMICOLON .\l"]
  110 -> "110R63" [style=solid]
 "110R63" [label="R63", fillcolor=3, shape=diamond, style=filled]
  111 [label="State 111\n\l 64 JUMP_STATEMENT: T_RETURN EXPRESSION . T_SEMICOLON\l"]
  111 -> 176 [style=solid label="T_SEMICOLON"]
  112 [label="State 112\n\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l118 PRIMARY_EXPRESSION: T_SIZEOF T_L_PARENTHESIS . TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | T_SIZEOF T_L_PARENTHESIS . DECLARATOR T_R_PARENTHESIS\l"]
  112 -> 1 [style=solid label="T_CHAR"]
  112 -> 2 [style=solid label="T_DOUBLE"]
  112 -> 4 [style=solid label="T_FLOAT"]
  112 -> 5 [style=solid label="T_INT"]
  112 -> 6 [style=solid label="T_LONG"]
  112 -> 7 [style=solid label="T_SHORT"]
  112 -> 8 [style=solid label="T_SIGNED"]
  112 -> 11 [style=solid label="T_UNSIGNED"]
  112 -> 12 [style=solid label="T_VOID"]
  112 -> 45 [style=solid label="T_MULT"]
  112 -> 51 [style=solid label="T_IDENTIFIER"]
  112 -> 15 [style=solid label="T_BOOL"]
  112 -> 177 [style=dashed label="DECLARATOR"]
  112 -> 178 [style=dashed label="TYPE_SPECIFIER"]
  112 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  113 [label="State 113\n\l 98 TYPE_SPECIFIER: T_IDENTIFIER .  [T_IDENTIFIER]\l 99 STRUCT_DEFINITION: T_STRUCT T_IDENTIFIER . T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON\l"]
  113 -> 102 [style=solid label="T_L_BRACE"]
  113 -> "113R98" [style=solid]
 "113R98" [label="R98", fillcolor=3, shape=diamond, style=filled]
  114 [label="State 114\n\l100 STRUCT_DECLARATION: T_STRUCT TYPE_SPECIFIER . T_IDENTIFIER T_SEMICOLON\l"]
  114 -> 179 [style=solid label="T_IDENTIFIER"]
  115 [label="State 115\n\l 49 SELECTION_STATEMENT: T_SWITCH T_L_PARENTHESIS . EXPRESSION T_R_PARENTHESIS WRAPPED_CASE_STATEMENTS\l 50                    | T_SWITCH T_L_PARENTHESIS . EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 69 EXPRESSION: . VARIABLE_DECLARATION\l 70           | . ASSIGNMENT_STATEMENT\l 71           | . MATH_OR_BITWISE_EXPRESSION\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l105 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | . DECLARATOR\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  115 -> 1 [style=solid label="T_CHAR"]
  115 -> 2 [style=solid label="T_DOUBLE"]
  115 -> 4 [style=solid label="T_FLOAT"]
  115 -> 5 [style=solid label="T_INT"]
  115 -> 6 [style=solid label="T_LONG"]
  115 -> 7 [style=solid label="T_SHORT"]
  115 -> 8 [style=solid label="T_SIGNED"]
  115 -> 36 [style=solid label="T_SIZEOF"]
  115 -> 11 [style=solid label="T_UNSIGNED"]
  115 -> 12 [style=solid label="T_VOID"]
  115 -> 40 [style=solid label="T_AND"]
  115 -> 41 [style=solid label="T_NOT"]
  115 -> 42 [style=solid label="T_INVERT"]
  115 -> 43 [style=solid label="T_MINUS"]
  115 -> 44 [style=solid label="T_PLUS"]
  115 -> 45 [style=solid label="T_MULT"]
  115 -> 46 [style=solid label="T_INC_OP"]
  115 -> 47 [style=solid label="T_DEC_OP"]
  115 -> 50 [style=solid label="T_L_PARENTHESIS"]
  115 -> 51 [style=solid label="T_IDENTIFIER"]
  115 -> 52 [style=solid label="T_INT_CONST"]
  115 -> 53 [style=solid label="T_FLOAT_CONST"]
  115 -> 54 [style=solid label="T_CHAR_CONST"]
  115 -> 55 [style=solid label="T_STRING_CONST"]
  115 -> 15 [style=solid label="T_BOOL"]
  115 -> 180 [style=dashed label="EXPRESSION"]
  115 -> 65 [style=dashed label="DECLARATOR"]
  115 -> 66 [style=dashed label="VARIABLE_DECLARATION"]
  115 -> 68 [style=dashed label="TYPE_SPECIFIER"]
  115 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  115 -> 72 [style=dashed label="ASSIGNMENT_STATEMENT"]
  115 -> 73 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  115 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  115 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  115 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  115 -> 77 [style=dashed label="UNARY_OPERATOR"]
  115 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  115 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  115 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  115 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  115 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  115 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  115 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  115 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  115 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  115 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  115 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  116 [label="State 116\n\l 59 ITERATION_STATEMENT: T_WHILE T_L_PARENTHESIS . EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 69 EXPRESSION: . VARIABLE_DECLARATION\l 70           | . ASSIGNMENT_STATEMENT\l 71           | . MATH_OR_BITWISE_EXPRESSION\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l105 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | . DECLARATOR\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  116 -> 1 [style=solid label="T_CHAR"]
  116 -> 2 [style=solid label="T_DOUBLE"]
  116 -> 4 [style=solid label="T_FLOAT"]
  116 -> 5 [style=solid label="T_INT"]
  116 -> 6 [style=solid label="T_LONG"]
  116 -> 7 [style=solid label="T_SHORT"]
  116 -> 8 [style=solid label="T_SIGNED"]
  116 -> 36 [style=solid label="T_SIZEOF"]
  116 -> 11 [style=solid label="T_UNSIGNED"]
  116 -> 12 [style=solid label="T_VOID"]
  116 -> 40 [style=solid label="T_AND"]
  116 -> 41 [style=solid label="T_NOT"]
  116 -> 42 [style=solid label="T_INVERT"]
  116 -> 43 [style=solid label="T_MINUS"]
  116 -> 44 [style=solid label="T_PLUS"]
  116 -> 45 [style=solid label="T_MULT"]
  116 -> 46 [style=solid label="T_INC_OP"]
  116 -> 47 [style=solid label="T_DEC_OP"]
  116 -> 50 [style=solid label="T_L_PARENTHESIS"]
  116 -> 51 [style=solid label="T_IDENTIFIER"]
  116 -> 52 [style=solid label="T_INT_CONST"]
  116 -> 53 [style=solid label="T_FLOAT_CONST"]
  116 -> 54 [style=solid label="T_CHAR_CONST"]
  116 -> 55 [style=solid label="T_STRING_CONST"]
  116 -> 15 [style=solid label="T_BOOL"]
  116 -> 181 [style=dashed label="EXPRESSION"]
  116 -> 65 [style=dashed label="DECLARATOR"]
  116 -> 66 [style=dashed label="VARIABLE_DECLARATION"]
  116 -> 68 [style=dashed label="TYPE_SPECIFIER"]
  116 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  116 -> 72 [style=dashed label="ASSIGNMENT_STATEMENT"]
  116 -> 73 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  116 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  116 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  116 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  116 -> 77 [style=dashed label="UNARY_OPERATOR"]
  116 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  116 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  116 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  116 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  116 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  116 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  116 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  116 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  116 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  116 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  116 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  117 [label="State 117\n\l 84 DECLARATOR: T_MULT T_IDENTIFIER .\l"]
  117 -> "117R84" [style=solid]
 "117R84" [label="R84", fillcolor=3, shape=diamond, style=filled]
  118 [label="State 118\n\l 23 WRAPPED_PARAMETERS: . T_L_PARENTHESIS MULTIPLE_PARAMETERS T_R_PARENTHESIS\l 24                   | . T_L_PARENTHESIS T_R_PARENTHESIS\l 72 ASSIGNMENT_OPERATOR: . T_MUL_ASSIGN\l 73                    | . T_DIV_ASSIGN\l 74                    | . T_MOD_ASSIGN\l 75                    | . T_ADD_ASSIGN\l 76                    | . T_SUB_ASSIGN\l 77                    | . T_LSHIFT_ASSIGN\l 78                    | . T_RSHIFT_ASSIGN\l 79                    | . T_AND_ASSIGN\l 80                    | . T_XOR_ASSIGN\l 81                    | . T_OR_ASSIGN\l110 MATH_OR_BITWISE_EXPRESSION: DECLARATOR . ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: DECLARATOR .  [T_AND, T_MINUS, T_PLUS, T_MULT, T_DIV, T_MOD, T_LT, T_GT, T_XOR, T_OR, T_RSHIFT_OP, T_LSHIFT_OP, T_INC_OP, T_DEC_OP, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l117                   | DECLARATOR . WRAPPED_PARAMETERS\l"]
  118 -> 125 [style=solid label="T_RSHIFT_ASSIGN"]
  118 -> 126 [style=solid label="T_LSHIFT_ASSIGN"]
  118 -> 127 [style=solid label="T_ADD_ASSIGN"]
  118 -> 128 [style=solid label="T_SUB_ASSIGN"]
  118 -> 129 [style=solid label="T_MUL_ASSIGN"]
  118 -> 130 [style=solid label="T_DIV_ASSIGN"]
  118 -> 131 [style=solid label="T_MOD_ASSIGN"]
  118 -> 132 [style=solid label="T_AND_ASSIGN"]
  118 -> 133 [style=solid label="T_XOR_ASSIGN"]
  118 -> 134 [style=solid label="T_OR_ASSIGN"]
  118 -> 136 [style=solid label="T_L_PARENTHESIS"]
  118 -> 137 [style=dashed label="WRAPPED_PARAMETERS"]
  118 -> 138 [style=dashed label="ASSIGNMENT_OPERATOR"]
  118 -> "118R111" [style=solid]
 "118R111" [label="R111", fillcolor=3, shape=diamond, style=filled]
  119 [label="State 119\n\l116 PRIMARY_EXPRESSION: T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION . T_R_PARENTHESIS\l"]
  119 -> 182 [style=solid label="T_R_PARENTHESIS"]
  120 [label="State 120\n\l101 STRUCT_ATTRIBUTE: T_IDENTIFIER T_DOT . T_IDENTIFIER\l"]
  120 -> 183 [style=solid label="T_IDENTIFIER"]
  121 [label="State 121\n\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 85           | T_IDENTIFIER T_L_BRACKET . MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  121 -> 36 [style=solid label="T_SIZEOF"]
  121 -> 40 [style=solid label="T_AND"]
  121 -> 41 [style=solid label="T_NOT"]
  121 -> 42 [style=solid label="T_INVERT"]
  121 -> 43 [style=solid label="T_MINUS"]
  121 -> 44 [style=solid label="T_PLUS"]
  121 -> 45 [style=solid label="T_MULT"]
  121 -> 46 [style=solid label="T_INC_OP"]
  121 -> 47 [style=solid label="T_DEC_OP"]
  121 -> 50 [style=solid label="T_L_PARENTHESIS"]
  121 -> 96 [style=solid label="T_IDENTIFIER"]
  121 -> 52 [style=solid label="T_INT_CONST"]
  121 -> 53 [style=solid label="T_FLOAT_CONST"]
  121 -> 54 [style=solid label="T_CHAR_CONST"]
  121 -> 55 [style=solid label="T_STRING_CONST"]
  121 -> 118 [style=dashed label="DECLARATOR"]
  121 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  121 -> 184 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  121 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  121 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  121 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  121 -> 77 [style=dashed label="UNARY_OPERATOR"]
  121 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  121 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  121 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  121 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  121 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  121 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  121 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  121 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  121 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  121 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  121 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  122 [label="State 122\n\l 27 SCOPE: T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE .\l"]
  122 -> "122R27" [style=solid]
 "122R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  123 [label="State 123\n\l 29 MULTIPLE_STATEMENTS: SINGLE_STATEMENT MULTIPLE_STATEMENTS .\l"]
  123 -> "123R29" [style=solid]
 "123R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  124 [label="State 124\n\l 68 EXPRESSION_STATEMENT: EXPRESSION T_SEMICOLON .\l"]
  124 -> "124R68" [style=solid]
 "124R68" [label="R68", fillcolor=3, shape=diamond, style=filled]
  125 [label="State 125\n\l 78 ASSIGNMENT_OPERATOR: T_RSHIFT_ASSIGN .\l"]
  125 -> "125R78" [style=solid]
 "125R78" [label="R78", fillcolor=3, shape=diamond, style=filled]
  126 [label="State 126\n\l 77 ASSIGNMENT_OPERATOR: T_LSHIFT_ASSIGN .\l"]
  126 -> "126R77" [style=solid]
 "126R77" [label="R77", fillcolor=3, shape=diamond, style=filled]
  127 [label="State 127\n\l 75 ASSIGNMENT_OPERATOR: T_ADD_ASSIGN .\l"]
  127 -> "127R75" [style=solid]
 "127R75" [label="R75", fillcolor=3, shape=diamond, style=filled]
  128 [label="State 128\n\l 76 ASSIGNMENT_OPERATOR: T_SUB_ASSIGN .\l"]
  128 -> "128R76" [style=solid]
 "128R76" [label="R76", fillcolor=3, shape=diamond, style=filled]
  129 [label="State 129\n\l 72 ASSIGNMENT_OPERATOR: T_MUL_ASSIGN .\l"]
  129 -> "129R72" [style=solid]
 "129R72" [label="R72", fillcolor=3, shape=diamond, style=filled]
  130 [label="State 130\n\l 73 ASSIGNMENT_OPERATOR: T_DIV_ASSIGN .\l"]
  130 -> "130R73" [style=solid]
 "130R73" [label="R73", fillcolor=3, shape=diamond, style=filled]
  131 [label="State 131\n\l 74 ASSIGNMENT_OPERATOR: T_MOD_ASSIGN .\l"]
  131 -> "131R74" [style=solid]
 "131R74" [label="R74", fillcolor=3, shape=diamond, style=filled]
  132 [label="State 132\n\l 79 ASSIGNMENT_OPERATOR: T_AND_ASSIGN .\l"]
  132 -> "132R79" [style=solid]
 "132R79" [label="R79", fillcolor=3, shape=diamond, style=filled]
  133 [label="State 133\n\l 80 ASSIGNMENT_OPERATOR: T_XOR_ASSIGN .\l"]
  133 -> "133R80" [style=solid]
 "133R80" [label="R80", fillcolor=3, shape=diamond, style=filled]
  134 [label="State 134\n\l 81 ASSIGNMENT_OPERATOR: T_OR_ASSIGN .\l"]
  134 -> "134R81" [style=solid]
 "134R81" [label="R81", fillcolor=3, shape=diamond, style=filled]
  135 [label="State 135\n\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l105 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l105                     | DECLARATOR T_EQ_ASSIGN . MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l106                     | DECLARATOR T_EQ_ASSIGN . ASSIGNMENT_STATEMENT\l107                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l107                     | DECLARATOR T_EQ_ASSIGN . MATH_OR_BITWISE_EXPRESSION\l108                     | . DECLARATOR\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  135 -> 36 [style=solid label="T_SIZEOF"]
  135 -> 40 [style=solid label="T_AND"]
  135 -> 41 [style=solid label="T_NOT"]
  135 -> 42 [style=solid label="T_INVERT"]
  135 -> 43 [style=solid label="T_MINUS"]
  135 -> 44 [style=solid label="T_PLUS"]
  135 -> 45 [style=solid label="T_MULT"]
  135 -> 46 [style=solid label="T_INC_OP"]
  135 -> 47 [style=solid label="T_DEC_OP"]
  135 -> 50 [style=solid label="T_L_PARENTHESIS"]
  135 -> 96 [style=solid label="T_IDENTIFIER"]
  135 -> 52 [style=solid label="T_INT_CONST"]
  135 -> 53 [style=solid label="T_FLOAT_CONST"]
  135 -> 54 [style=solid label="T_CHAR_CONST"]
  135 -> 55 [style=solid label="T_STRING_CONST"]
  135 -> 65 [style=dashed label="DECLARATOR"]
  135 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  135 -> 185 [style=dashed label="ASSIGNMENT_STATEMENT"]
  135 -> 186 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  135 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  135 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  135 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  135 -> 77 [style=dashed label="UNARY_OPERATOR"]
  135 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  135 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  135 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  135 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  135 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  135 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  135 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  135 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  135 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  135 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  135 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  136 [label="State 136\n\l 23 WRAPPED_PARAMETERS: T_L_PARENTHESIS . MULTIPLE_PARAMETERS T_R_PARENTHESIS\l 24                   | T_L_PARENTHESIS . T_R_PARENTHESIS\l 25 MULTIPLE_PARAMETERS: . MATH_OR_BITWISE_EXPRESSION T_COMMA MULTIPLE_PARAMETERS\l 26                    | . MATH_OR_BITWISE_EXPRESSION\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  136 -> 36 [style=solid label="T_SIZEOF"]
  136 -> 40 [style=solid label="T_AND"]
  136 -> 41 [style=solid label="T_NOT"]
  136 -> 42 [style=solid label="T_INVERT"]
  136 -> 43 [style=solid label="T_MINUS"]
  136 -> 44 [style=solid label="T_PLUS"]
  136 -> 45 [style=solid label="T_MULT"]
  136 -> 46 [style=solid label="T_INC_OP"]
  136 -> 47 [style=solid label="T_DEC_OP"]
  136 -> 50 [style=solid label="T_L_PARENTHESIS"]
  136 -> 187 [style=solid label="T_R_PARENTHESIS"]
  136 -> 96 [style=solid label="T_IDENTIFIER"]
  136 -> 52 [style=solid label="T_INT_CONST"]
  136 -> 53 [style=solid label="T_FLOAT_CONST"]
  136 -> 54 [style=solid label="T_CHAR_CONST"]
  136 -> 55 [style=solid label="T_STRING_CONST"]
  136 -> 188 [style=dashed label="MULTIPLE_PARAMETERS"]
  136 -> 118 [style=dashed label="DECLARATOR"]
  136 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  136 -> 189 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  136 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  136 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  136 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  136 -> 77 [style=dashed label="UNARY_OPERATOR"]
  136 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  136 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  136 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  136 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  136 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  136 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  136 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  136 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  136 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  136 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  136 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  137 [label="State 137\n\l117 PRIMARY_EXPRESSION: DECLARATOR WRAPPED_PARAMETERS .\l"]
  137 -> "137R117" [style=solid]
 "137R117" [label="R117", fillcolor=3, shape=diamond, style=filled]
  138 [label="State 138\n\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l110                           | DECLARATOR ASSIGNMENT_OPERATOR . MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  138 -> 36 [style=solid label="T_SIZEOF"]
  138 -> 40 [style=solid label="T_AND"]
  138 -> 41 [style=solid label="T_NOT"]
  138 -> 42 [style=solid label="T_INVERT"]
  138 -> 43 [style=solid label="T_MINUS"]
  138 -> 44 [style=solid label="T_PLUS"]
  138 -> 45 [style=solid label="T_MULT"]
  138 -> 46 [style=solid label="T_INC_OP"]
  138 -> 47 [style=solid label="T_DEC_OP"]
  138 -> 50 [style=solid label="T_L_PARENTHESIS"]
  138 -> 96 [style=solid label="T_IDENTIFIER"]
  138 -> 52 [style=solid label="T_INT_CONST"]
  138 -> 53 [style=solid label="T_FLOAT_CONST"]
  138 -> 54 [style=solid label="T_CHAR_CONST"]
  138 -> 55 [style=solid label="T_STRING_CONST"]
  138 -> 118 [style=dashed label="DECLARATOR"]
  138 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  138 -> 190 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  138 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  138 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  138 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  138 -> 77 [style=dashed label="UNARY_OPERATOR"]
  138 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  138 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  138 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  138 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  138 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  138 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  138 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  138 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  138 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  138 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  138 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  139 [label="State 139\n\l105 ASSIGNMENT_STATEMENT: DECLARATOR . T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | DECLARATOR . T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | DECLARATOR . T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | DECLARATOR .  [T_SEMICOLON, T_COLON, T_R_PARENTHESIS]\l"]
  139 -> 135 [style=solid label="T_EQ_ASSIGN"]
  139 -> "139R108" [style=solid]
 "139R108" [label="R108", fillcolor=3, shape=diamond, style=filled]
  140 [label="State 140\n\l121 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION T_INC_OP .\l"]
  140 -> "140R121" [style=solid]
 "140R121" [label="R121", fillcolor=3, shape=diamond, style=filled]
  141 [label="State 141\n\l122 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION T_DEC_OP .\l"]
  141 -> "141R122" [style=solid]
 "141R122" [label="R122", fillcolor=3, shape=diamond, style=filled]
  142 [label="State 142\n\l 23 WRAPPED_PARAMETERS: . T_L_PARENTHESIS MULTIPLE_PARAMETERS T_R_PARENTHESIS\l 24                   | . T_L_PARENTHESIS T_R_PARENTHESIS\l111 PRIMARY_EXPRESSION: DECLARATOR .  [T_AND, T_MINUS, T_PLUS, T_MULT, T_DIV, T_MOD, T_LT, T_GT, T_XOR, T_OR, T_RSHIFT_OP, T_LSHIFT_OP, T_INC_OP, T_DEC_OP, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l117                   | DECLARATOR . WRAPPED_PARAMETERS\l"]
  142 -> 136 [style=solid label="T_L_PARENTHESIS"]
  142 -> 137 [style=dashed label="WRAPPED_PARAMETERS"]
  142 -> "142R111" [style=solid]
 "142R111" [label="R111", fillcolor=3, shape=diamond, style=filled]
  143 [label="State 143\n\l124 UNARY_EXPRESSION: UNARY_OPERATOR UNARY_EXPRESSION .\l"]
  143 -> "143R124" [style=solid]
 "143R124" [label="R124", fillcolor=3, shape=diamond, style=filled]
  144 [label="State 144\n\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l133 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION T_MULT . UNARY_EXPRESSION\l"]
  144 -> 36 [style=solid label="T_SIZEOF"]
  144 -> 40 [style=solid label="T_AND"]
  144 -> 41 [style=solid label="T_NOT"]
  144 -> 42 [style=solid label="T_INVERT"]
  144 -> 43 [style=solid label="T_MINUS"]
  144 -> 44 [style=solid label="T_PLUS"]
  144 -> 45 [style=solid label="T_MULT"]
  144 -> 46 [style=solid label="T_INC_OP"]
  144 -> 47 [style=solid label="T_DEC_OP"]
  144 -> 50 [style=solid label="T_L_PARENTHESIS"]
  144 -> 96 [style=solid label="T_IDENTIFIER"]
  144 -> 52 [style=solid label="T_INT_CONST"]
  144 -> 53 [style=solid label="T_FLOAT_CONST"]
  144 -> 54 [style=solid label="T_CHAR_CONST"]
  144 -> 55 [style=solid label="T_STRING_CONST"]
  144 -> 142 [style=dashed label="DECLARATOR"]
  144 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  144 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  144 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  144 -> 191 [style=dashed label="UNARY_EXPRESSION"]
  144 -> 77 [style=dashed label="UNARY_OPERATOR"]
  145 [label="State 145\n\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l134 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION T_DIV . UNARY_EXPRESSION\l"]
  145 -> 36 [style=solid label="T_SIZEOF"]
  145 -> 40 [style=solid label="T_AND"]
  145 -> 41 [style=solid label="T_NOT"]
  145 -> 42 [style=solid label="T_INVERT"]
  145 -> 43 [style=solid label="T_MINUS"]
  145 -> 44 [style=solid label="T_PLUS"]
  145 -> 45 [style=solid label="T_MULT"]
  145 -> 46 [style=solid label="T_INC_OP"]
  145 -> 47 [style=solid label="T_DEC_OP"]
  145 -> 50 [style=solid label="T_L_PARENTHESIS"]
  145 -> 96 [style=solid label="T_IDENTIFIER"]
  145 -> 52 [style=solid label="T_INT_CONST"]
  145 -> 53 [style=solid label="T_FLOAT_CONST"]
  145 -> 54 [style=solid label="T_CHAR_CONST"]
  145 -> 55 [style=solid label="T_STRING_CONST"]
  145 -> 142 [style=dashed label="DECLARATOR"]
  145 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  145 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  145 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  145 -> 192 [style=dashed label="UNARY_EXPRESSION"]
  145 -> 77 [style=dashed label="UNARY_OPERATOR"]
  146 [label="State 146\n\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l135 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION T_MOD . UNARY_EXPRESSION\l"]
  146 -> 36 [style=solid label="T_SIZEOF"]
  146 -> 40 [style=solid label="T_AND"]
  146 -> 41 [style=solid label="T_NOT"]
  146 -> 42 [style=solid label="T_INVERT"]
  146 -> 43 [style=solid label="T_MINUS"]
  146 -> 44 [style=solid label="T_PLUS"]
  146 -> 45 [style=solid label="T_MULT"]
  146 -> 46 [style=solid label="T_INC_OP"]
  146 -> 47 [style=solid label="T_DEC_OP"]
  146 -> 50 [style=solid label="T_L_PARENTHESIS"]
  146 -> 96 [style=solid label="T_IDENTIFIER"]
  146 -> 52 [style=solid label="T_INT_CONST"]
  146 -> 53 [style=solid label="T_FLOAT_CONST"]
  146 -> 54 [style=solid label="T_CHAR_CONST"]
  146 -> 55 [style=solid label="T_STRING_CONST"]
  146 -> 142 [style=dashed label="DECLARATOR"]
  146 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  146 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  146 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  146 -> 193 [style=dashed label="UNARY_EXPRESSION"]
  146 -> 77 [style=dashed label="UNARY_OPERATOR"]
  147 [label="State 147\n\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l138 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION T_MINUS . MULTIPLICATIVE_EXPRESSION\l"]
  147 -> 36 [style=solid label="T_SIZEOF"]
  147 -> 40 [style=solid label="T_AND"]
  147 -> 41 [style=solid label="T_NOT"]
  147 -> 42 [style=solid label="T_INVERT"]
  147 -> 43 [style=solid label="T_MINUS"]
  147 -> 44 [style=solid label="T_PLUS"]
  147 -> 45 [style=solid label="T_MULT"]
  147 -> 46 [style=solid label="T_INC_OP"]
  147 -> 47 [style=solid label="T_DEC_OP"]
  147 -> 50 [style=solid label="T_L_PARENTHESIS"]
  147 -> 96 [style=solid label="T_IDENTIFIER"]
  147 -> 52 [style=solid label="T_INT_CONST"]
  147 -> 53 [style=solid label="T_FLOAT_CONST"]
  147 -> 54 [style=solid label="T_CHAR_CONST"]
  147 -> 55 [style=solid label="T_STRING_CONST"]
  147 -> 142 [style=dashed label="DECLARATOR"]
  147 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  147 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  147 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  147 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  147 -> 77 [style=dashed label="UNARY_OPERATOR"]
  147 -> 194 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  148 [label="State 148\n\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l137 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION T_PLUS . MULTIPLICATIVE_EXPRESSION\l"]
  148 -> 36 [style=solid label="T_SIZEOF"]
  148 -> 40 [style=solid label="T_AND"]
  148 -> 41 [style=solid label="T_NOT"]
  148 -> 42 [style=solid label="T_INVERT"]
  148 -> 43 [style=solid label="T_MINUS"]
  148 -> 44 [style=solid label="T_PLUS"]
  148 -> 45 [style=solid label="T_MULT"]
  148 -> 46 [style=solid label="T_INC_OP"]
  148 -> 47 [style=solid label="T_DEC_OP"]
  148 -> 50 [style=solid label="T_L_PARENTHESIS"]
  148 -> 96 [style=solid label="T_IDENTIFIER"]
  148 -> 52 [style=solid label="T_INT_CONST"]
  148 -> 53 [style=solid label="T_FLOAT_CONST"]
  148 -> 54 [style=solid label="T_CHAR_CONST"]
  148 -> 55 [style=solid label="T_STRING_CONST"]
  148 -> 142 [style=dashed label="DECLARATOR"]
  148 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  148 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  148 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  148 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  148 -> 77 [style=dashed label="UNARY_OPERATOR"]
  148 -> 195 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  149 [label="State 149\n\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l141 SHIFT_EXPRESSION: SHIFT_EXPRESSION T_RSHIFT_OP . ADDITIVE_EXPRESSION\l"]
  149 -> 36 [style=solid label="T_SIZEOF"]
  149 -> 40 [style=solid label="T_AND"]
  149 -> 41 [style=solid label="T_NOT"]
  149 -> 42 [style=solid label="T_INVERT"]
  149 -> 43 [style=solid label="T_MINUS"]
  149 -> 44 [style=solid label="T_PLUS"]
  149 -> 45 [style=solid label="T_MULT"]
  149 -> 46 [style=solid label="T_INC_OP"]
  149 -> 47 [style=solid label="T_DEC_OP"]
  149 -> 50 [style=solid label="T_L_PARENTHESIS"]
  149 -> 96 [style=solid label="T_IDENTIFIER"]
  149 -> 52 [style=solid label="T_INT_CONST"]
  149 -> 53 [style=solid label="T_FLOAT_CONST"]
  149 -> 54 [style=solid label="T_CHAR_CONST"]
  149 -> 55 [style=solid label="T_STRING_CONST"]
  149 -> 142 [style=dashed label="DECLARATOR"]
  149 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  149 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  149 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  149 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  149 -> 77 [style=dashed label="UNARY_OPERATOR"]
  149 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  149 -> 196 [style=dashed label="ADDITIVE_EXPRESSION"]
  150 [label="State 150\n\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l140 SHIFT_EXPRESSION: SHIFT_EXPRESSION T_LSHIFT_OP . ADDITIVE_EXPRESSION\l"]
  150 -> 36 [style=solid label="T_SIZEOF"]
  150 -> 40 [style=solid label="T_AND"]
  150 -> 41 [style=solid label="T_NOT"]
  150 -> 42 [style=solid label="T_INVERT"]
  150 -> 43 [style=solid label="T_MINUS"]
  150 -> 44 [style=solid label="T_PLUS"]
  150 -> 45 [style=solid label="T_MULT"]
  150 -> 46 [style=solid label="T_INC_OP"]
  150 -> 47 [style=solid label="T_DEC_OP"]
  150 -> 50 [style=solid label="T_L_PARENTHESIS"]
  150 -> 96 [style=solid label="T_IDENTIFIER"]
  150 -> 52 [style=solid label="T_INT_CONST"]
  150 -> 53 [style=solid label="T_FLOAT_CONST"]
  150 -> 54 [style=solid label="T_CHAR_CONST"]
  150 -> 55 [style=solid label="T_STRING_CONST"]
  150 -> 142 [style=dashed label="DECLARATOR"]
  150 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  150 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  150 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  150 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  150 -> 77 [style=dashed label="UNARY_OPERATOR"]
  150 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  150 -> 197 [style=dashed label="ADDITIVE_EXPRESSION"]
  151 [label="State 151\n\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l143 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION T_LT . SHIFT_EXPRESSION\l"]
  151 -> 36 [style=solid label="T_SIZEOF"]
  151 -> 40 [style=solid label="T_AND"]
  151 -> 41 [style=solid label="T_NOT"]
  151 -> 42 [style=solid label="T_INVERT"]
  151 -> 43 [style=solid label="T_MINUS"]
  151 -> 44 [style=solid label="T_PLUS"]
  151 -> 45 [style=solid label="T_MULT"]
  151 -> 46 [style=solid label="T_INC_OP"]
  151 -> 47 [style=solid label="T_DEC_OP"]
  151 -> 50 [style=solid label="T_L_PARENTHESIS"]
  151 -> 96 [style=solid label="T_IDENTIFIER"]
  151 -> 52 [style=solid label="T_INT_CONST"]
  151 -> 53 [style=solid label="T_FLOAT_CONST"]
  151 -> 54 [style=solid label="T_CHAR_CONST"]
  151 -> 55 [style=solid label="T_STRING_CONST"]
  151 -> 142 [style=dashed label="DECLARATOR"]
  151 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  151 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  151 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  151 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  151 -> 77 [style=dashed label="UNARY_OPERATOR"]
  151 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  151 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  151 -> 198 [style=dashed label="SHIFT_EXPRESSION"]
  152 [label="State 152\n\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l144 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION T_GT . SHIFT_EXPRESSION\l"]
  152 -> 36 [style=solid label="T_SIZEOF"]
  152 -> 40 [style=solid label="T_AND"]
  152 -> 41 [style=solid label="T_NOT"]
  152 -> 42 [style=solid label="T_INVERT"]
  152 -> 43 [style=solid label="T_MINUS"]
  152 -> 44 [style=solid label="T_PLUS"]
  152 -> 45 [style=solid label="T_MULT"]
  152 -> 46 [style=solid label="T_INC_OP"]
  152 -> 47 [style=solid label="T_DEC_OP"]
  152 -> 50 [style=solid label="T_L_PARENTHESIS"]
  152 -> 96 [style=solid label="T_IDENTIFIER"]
  152 -> 52 [style=solid label="T_INT_CONST"]
  152 -> 53 [style=solid label="T_FLOAT_CONST"]
  152 -> 54 [style=solid label="T_CHAR_CONST"]
  152 -> 55 [style=solid label="T_STRING_CONST"]
  152 -> 142 [style=dashed label="DECLARATOR"]
  152 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  152 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  152 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  152 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  152 -> 77 [style=dashed label="UNARY_OPERATOR"]
  152 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  152 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  152 -> 199 [style=dashed label="SHIFT_EXPRESSION"]
  153 [label="State 153\n\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l145 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION T_LE_OP . SHIFT_EXPRESSION\l"]
  153 -> 36 [style=solid label="T_SIZEOF"]
  153 -> 40 [style=solid label="T_AND"]
  153 -> 41 [style=solid label="T_NOT"]
  153 -> 42 [style=solid label="T_INVERT"]
  153 -> 43 [style=solid label="T_MINUS"]
  153 -> 44 [style=solid label="T_PLUS"]
  153 -> 45 [style=solid label="T_MULT"]
  153 -> 46 [style=solid label="T_INC_OP"]
  153 -> 47 [style=solid label="T_DEC_OP"]
  153 -> 50 [style=solid label="T_L_PARENTHESIS"]
  153 -> 96 [style=solid label="T_IDENTIFIER"]
  153 -> 52 [style=solid label="T_INT_CONST"]
  153 -> 53 [style=solid label="T_FLOAT_CONST"]
  153 -> 54 [style=solid label="T_CHAR_CONST"]
  153 -> 55 [style=solid label="T_STRING_CONST"]
  153 -> 142 [style=dashed label="DECLARATOR"]
  153 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  153 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  153 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  153 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  153 -> 77 [style=dashed label="UNARY_OPERATOR"]
  153 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  153 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  153 -> 200 [style=dashed label="SHIFT_EXPRESSION"]
  154 [label="State 154\n\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l146 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION T_GE_OP . SHIFT_EXPRESSION\l"]
  154 -> 36 [style=solid label="T_SIZEOF"]
  154 -> 40 [style=solid label="T_AND"]
  154 -> 41 [style=solid label="T_NOT"]
  154 -> 42 [style=solid label="T_INVERT"]
  154 -> 43 [style=solid label="T_MINUS"]
  154 -> 44 [style=solid label="T_PLUS"]
  154 -> 45 [style=solid label="T_MULT"]
  154 -> 46 [style=solid label="T_INC_OP"]
  154 -> 47 [style=solid label="T_DEC_OP"]
  154 -> 50 [style=solid label="T_L_PARENTHESIS"]
  154 -> 96 [style=solid label="T_IDENTIFIER"]
  154 -> 52 [style=solid label="T_INT_CONST"]
  154 -> 53 [style=solid label="T_FLOAT_CONST"]
  154 -> 54 [style=solid label="T_CHAR_CONST"]
  154 -> 55 [style=solid label="T_STRING_CONST"]
  154 -> 142 [style=dashed label="DECLARATOR"]
  154 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  154 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  154 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  154 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  154 -> 77 [style=dashed label="UNARY_OPERATOR"]
  154 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  154 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  154 -> 201 [style=dashed label="SHIFT_EXPRESSION"]
  155 [label="State 155\n\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l148 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION T_EQ_OP . RELATIONAL_EXPRESSION\l"]
  155 -> 36 [style=solid label="T_SIZEOF"]
  155 -> 40 [style=solid label="T_AND"]
  155 -> 41 [style=solid label="T_NOT"]
  155 -> 42 [style=solid label="T_INVERT"]
  155 -> 43 [style=solid label="T_MINUS"]
  155 -> 44 [style=solid label="T_PLUS"]
  155 -> 45 [style=solid label="T_MULT"]
  155 -> 46 [style=solid label="T_INC_OP"]
  155 -> 47 [style=solid label="T_DEC_OP"]
  155 -> 50 [style=solid label="T_L_PARENTHESIS"]
  155 -> 96 [style=solid label="T_IDENTIFIER"]
  155 -> 52 [style=solid label="T_INT_CONST"]
  155 -> 53 [style=solid label="T_FLOAT_CONST"]
  155 -> 54 [style=solid label="T_CHAR_CONST"]
  155 -> 55 [style=solid label="T_STRING_CONST"]
  155 -> 142 [style=dashed label="DECLARATOR"]
  155 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  155 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  155 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  155 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  155 -> 77 [style=dashed label="UNARY_OPERATOR"]
  155 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  155 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  155 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  155 -> 202 [style=dashed label="RELATIONAL_EXPRESSION"]
  156 [label="State 156\n\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l149 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION T_NE_OP . RELATIONAL_EXPRESSION\l"]
  156 -> 36 [style=solid label="T_SIZEOF"]
  156 -> 40 [style=solid label="T_AND"]
  156 -> 41 [style=solid label="T_NOT"]
  156 -> 42 [style=solid label="T_INVERT"]
  156 -> 43 [style=solid label="T_MINUS"]
  156 -> 44 [style=solid label="T_PLUS"]
  156 -> 45 [style=solid label="T_MULT"]
  156 -> 46 [style=solid label="T_INC_OP"]
  156 -> 47 [style=solid label="T_DEC_OP"]
  156 -> 50 [style=solid label="T_L_PARENTHESIS"]
  156 -> 96 [style=solid label="T_IDENTIFIER"]
  156 -> 52 [style=solid label="T_INT_CONST"]
  156 -> 53 [style=solid label="T_FLOAT_CONST"]
  156 -> 54 [style=solid label="T_CHAR_CONST"]
  156 -> 55 [style=solid label="T_STRING_CONST"]
  156 -> 142 [style=dashed label="DECLARATOR"]
  156 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  156 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  156 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  156 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  156 -> 77 [style=dashed label="UNARY_OPERATOR"]
  156 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  156 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  156 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  156 -> 203 [style=dashed label="RELATIONAL_EXPRESSION"]
  157 [label="State 157\n\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l151 BITWISE_AND_EXPRESSION: BITWISE_AND_EXPRESSION T_AND . EQUALITY_EXPRESSION\l"]
  157 -> 36 [style=solid label="T_SIZEOF"]
  157 -> 40 [style=solid label="T_AND"]
  157 -> 41 [style=solid label="T_NOT"]
  157 -> 42 [style=solid label="T_INVERT"]
  157 -> 43 [style=solid label="T_MINUS"]
  157 -> 44 [style=solid label="T_PLUS"]
  157 -> 45 [style=solid label="T_MULT"]
  157 -> 46 [style=solid label="T_INC_OP"]
  157 -> 47 [style=solid label="T_DEC_OP"]
  157 -> 50 [style=solid label="T_L_PARENTHESIS"]
  157 -> 96 [style=solid label="T_IDENTIFIER"]
  157 -> 52 [style=solid label="T_INT_CONST"]
  157 -> 53 [style=solid label="T_FLOAT_CONST"]
  157 -> 54 [style=solid label="T_CHAR_CONST"]
  157 -> 55 [style=solid label="T_STRING_CONST"]
  157 -> 142 [style=dashed label="DECLARATOR"]
  157 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  157 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  157 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  157 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  157 -> 77 [style=dashed label="UNARY_OPERATOR"]
  157 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  157 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  157 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  157 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  157 -> 204 [style=dashed label="EQUALITY_EXPRESSION"]
  158 [label="State 158\n\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l153 BITWISE_XOR_EXPRESSION: BITWISE_XOR_EXPRESSION T_XOR . BITWISE_AND_EXPRESSION\l"]
  158 -> 36 [style=solid label="T_SIZEOF"]
  158 -> 40 [style=solid label="T_AND"]
  158 -> 41 [style=solid label="T_NOT"]
  158 -> 42 [style=solid label="T_INVERT"]
  158 -> 43 [style=solid label="T_MINUS"]
  158 -> 44 [style=solid label="T_PLUS"]
  158 -> 45 [style=solid label="T_MULT"]
  158 -> 46 [style=solid label="T_INC_OP"]
  158 -> 47 [style=solid label="T_DEC_OP"]
  158 -> 50 [style=solid label="T_L_PARENTHESIS"]
  158 -> 96 [style=solid label="T_IDENTIFIER"]
  158 -> 52 [style=solid label="T_INT_CONST"]
  158 -> 53 [style=solid label="T_FLOAT_CONST"]
  158 -> 54 [style=solid label="T_CHAR_CONST"]
  158 -> 55 [style=solid label="T_STRING_CONST"]
  158 -> 142 [style=dashed label="DECLARATOR"]
  158 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  158 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  158 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  158 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  158 -> 77 [style=dashed label="UNARY_OPERATOR"]
  158 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  158 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  158 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  158 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  158 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  158 -> 205 [style=dashed label="BITWISE_AND_EXPRESSION"]
  159 [label="State 159\n\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l155                      | BITWISE_OR_EXPRESSION T_OR . BITWISE_OR_EXPRESSION\l"]
  159 -> 36 [style=solid label="T_SIZEOF"]
  159 -> 40 [style=solid label="T_AND"]
  159 -> 41 [style=solid label="T_NOT"]
  159 -> 42 [style=solid label="T_INVERT"]
  159 -> 43 [style=solid label="T_MINUS"]
  159 -> 44 [style=solid label="T_PLUS"]
  159 -> 45 [style=solid label="T_MULT"]
  159 -> 46 [style=solid label="T_INC_OP"]
  159 -> 47 [style=solid label="T_DEC_OP"]
  159 -> 50 [style=solid label="T_L_PARENTHESIS"]
  159 -> 96 [style=solid label="T_IDENTIFIER"]
  159 -> 52 [style=solid label="T_INT_CONST"]
  159 -> 53 [style=solid label="T_FLOAT_CONST"]
  159 -> 54 [style=solid label="T_CHAR_CONST"]
  159 -> 55 [style=solid label="T_STRING_CONST"]
  159 -> 142 [style=dashed label="DECLARATOR"]
  159 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  159 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  159 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  159 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  159 -> 77 [style=dashed label="UNARY_OPERATOR"]
  159 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  159 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  159 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  159 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  159 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  159 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  159 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  159 -> 206 [style=dashed label="BITWISE_OR_EXPRESSION"]
  160 [label="State 160\n\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l157 BOOLEAN_AND_EXPRESSION: BOOLEAN_AND_EXPRESSION T_AND_OP . BITWISE_OR_EXPRESSION\l"]
  160 -> 36 [style=solid label="T_SIZEOF"]
  160 -> 40 [style=solid label="T_AND"]
  160 -> 41 [style=solid label="T_NOT"]
  160 -> 42 [style=solid label="T_INVERT"]
  160 -> 43 [style=solid label="T_MINUS"]
  160 -> 44 [style=solid label="T_PLUS"]
  160 -> 45 [style=solid label="T_MULT"]
  160 -> 46 [style=solid label="T_INC_OP"]
  160 -> 47 [style=solid label="T_DEC_OP"]
  160 -> 50 [style=solid label="T_L_PARENTHESIS"]
  160 -> 96 [style=solid label="T_IDENTIFIER"]
  160 -> 52 [style=solid label="T_INT_CONST"]
  160 -> 53 [style=solid label="T_FLOAT_CONST"]
  160 -> 54 [style=solid label="T_CHAR_CONST"]
  160 -> 55 [style=solid label="T_STRING_CONST"]
  160 -> 142 [style=dashed label="DECLARATOR"]
  160 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  160 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  160 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  160 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  160 -> 77 [style=dashed label="UNARY_OPERATOR"]
  160 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  160 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  160 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  160 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  160 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  160 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  160 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  160 -> 207 [style=dashed label="BITWISE_OR_EXPRESSION"]
  161 [label="State 161\n\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l159 BOOLEAN_OR_EXPRESSION: BOOLEAN_OR_EXPRESSION T_OR_OP . BOOLEAN_AND_EXPRESSION\l"]
  161 -> 36 [style=solid label="T_SIZEOF"]
  161 -> 40 [style=solid label="T_AND"]
  161 -> 41 [style=solid label="T_NOT"]
  161 -> 42 [style=solid label="T_INVERT"]
  161 -> 43 [style=solid label="T_MINUS"]
  161 -> 44 [style=solid label="T_PLUS"]
  161 -> 45 [style=solid label="T_MULT"]
  161 -> 46 [style=solid label="T_INC_OP"]
  161 -> 47 [style=solid label="T_DEC_OP"]
  161 -> 50 [style=solid label="T_L_PARENTHESIS"]
  161 -> 96 [style=solid label="T_IDENTIFIER"]
  161 -> 52 [style=solid label="T_INT_CONST"]
  161 -> 53 [style=solid label="T_FLOAT_CONST"]
  161 -> 54 [style=solid label="T_CHAR_CONST"]
  161 -> 55 [style=solid label="T_STRING_CONST"]
  161 -> 142 [style=dashed label="DECLARATOR"]
  161 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  161 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  161 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  161 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  161 -> 77 [style=dashed label="UNARY_OPERATOR"]
  161 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  161 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  161 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  161 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  161 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  161 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  161 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  161 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  161 -> 208 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  162 [label="State 162\n\l 10 FRAME: VARIABLE_DECLARATION T_SEMICOLON FRAME .\l"]
  162 -> "162R10" [style=solid]
 "162R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  163 [label="State 163\n\l 18 WRAPPED_ARGUMENTS: T_L_PARENTHESIS . MULTIPLE_ARGUMENTS T_R_PARENTHESIS\l 19                  | T_L_PARENTHESIS . T_R_PARENTHESIS\l 20 MULTIPLE_ARGUMENTS: . SINGLE_ARGUMENT T_COMMA MULTIPLE_ARGUMENTS\l 21                   | . SINGLE_ARGUMENT\l 22 SINGLE_ARGUMENT: . TYPE_SPECIFIER DECLARATOR\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l"]
  163 -> 1 [style=solid label="T_CHAR"]
  163 -> 2 [style=solid label="T_DOUBLE"]
  163 -> 4 [style=solid label="T_FLOAT"]
  163 -> 5 [style=solid label="T_INT"]
  163 -> 6 [style=solid label="T_LONG"]
  163 -> 7 [style=solid label="T_SHORT"]
  163 -> 8 [style=solid label="T_SIGNED"]
  163 -> 11 [style=solid label="T_UNSIGNED"]
  163 -> 12 [style=solid label="T_VOID"]
  163 -> 209 [style=solid label="T_R_PARENTHESIS"]
  163 -> 14 [style=solid label="T_IDENTIFIER"]
  163 -> 15 [style=solid label="T_BOOL"]
  163 -> 210 [style=dashed label="MULTIPLE_ARGUMENTS"]
  163 -> 211 [style=dashed label="SINGLE_ARGUMENT"]
  163 -> 212 [style=dashed label="TYPE_SPECIFIER"]
  164 [label="State 164\n\l 16 FUNCTION_DECLARATION: TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS . T_SEMICOLON\l 17 FUNCTION_DEFINITION: TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS . SCOPE\l 27 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 28      | . T_L_BRACE T_R_BRACE\l"]
  164 -> 213 [style=solid label="T_SEMICOLON"]
  164 -> 13 [style=solid label="T_L_BRACE"]
  164 -> 214 [style=dashed label="SCOPE"]
  165 [label="State 165\n\l 41 ENUMERATION: T_ENUM T_IDENTIFIER T_COLON TYPE_SPECIFIER . T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l"]
  165 -> 215 [style=solid label="T_L_BRACE"]
  166 [label="State 166\n\l 44 SINGLE_ENUMERATOR: T_IDENTIFIER .  [T_COMMA, T_R_BRACE]\l 45                  | T_IDENTIFIER . T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l"]
  166 -> 216 [style=solid label="T_EQ_ASSIGN"]
  166 -> "166R44" [style=solid]
 "166R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  167 [label="State 167\n\l 40 ENUMERATION: T_ENUM T_IDENTIFIER T_L_BRACE MULTIPLE_ENUMERATORS . T_R_BRACE T_SEMICOLON\l"]
  167 -> 217 [style=solid label="T_R_BRACE"]
  168 [label="State 168\n\l 42 MULTIPLE_ENUMERATORS: SINGLE_ENUMERATOR . T_COMMA MULTIPLE_ENUMERATORS\l 43                     | SINGLE_ENUMERATOR .  [T_R_BRACE]\l"]
  168 -> 218 [style=solid label="T_COMMA"]
  168 -> "168R43" [style=solid]
 "168R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  169 [label="State 169\n\l104 SINGLE_ATTRIBUTE: TYPE_SPECIFIER . T_IDENTIFIER T_SEMICOLON\l"]
  169 -> 219 [style=solid label="T_IDENTIFIER"]
  170 [label="State 170\n\l 99 STRUCT_DEFINITION: T_STRUCT T_IDENTIFIER T_L_BRACE MULTIPLE_ATTRIBUTES . T_R_BRACE T_SEMICOLON\l"]
  170 -> 220 [style=solid label="T_R_BRACE"]
  171 [label="State 171\n\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l102 MULTIPLE_ATTRIBUTES: . SINGLE_ATTRIBUTE MULTIPLE_ATTRIBUTES\l102                    | SINGLE_ATTRIBUTE . MULTIPLE_ATTRIBUTES\l103                    | . SINGLE_ATTRIBUTE\l103                    | SINGLE_ATTRIBUTE .  [T_R_BRACE]\l104 SINGLE_ATTRIBUTE: . TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l"]
  171 -> 1 [style=solid label="T_CHAR"]
  171 -> 2 [style=solid label="T_DOUBLE"]
  171 -> 4 [style=solid label="T_FLOAT"]
  171 -> 5 [style=solid label="T_INT"]
  171 -> 6 [style=solid label="T_LONG"]
  171 -> 7 [style=solid label="T_SHORT"]
  171 -> 8 [style=solid label="T_SIGNED"]
  171 -> 11 [style=solid label="T_UNSIGNED"]
  171 -> 12 [style=solid label="T_VOID"]
  171 -> 14 [style=solid label="T_IDENTIFIER"]
  171 -> 15 [style=solid label="T_BOOL"]
  171 -> 169 [style=dashed label="TYPE_SPECIFIER"]
  171 -> 221 [style=dashed label="MULTIPLE_ATTRIBUTES"]
  171 -> 171 [style=dashed label="SINGLE_ATTRIBUTE"]
  171 -> "171R103" [style=solid]
 "171R103" [label="R103", fillcolor=3, shape=diamond, style=filled]
  172 [label="State 172\n\l 87 TYPE_DEF: T_TYPEDEF TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON .\l"]
  172 -> "172R87" [style=solid]
 "172R87" [label="R87", fillcolor=3, shape=diamond, style=filled]
  173 [label="State 173\n\l 60 ITERATION_STATEMENT: T_DO SINGLE_STATEMENT T_WHILE . T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l"]
  173 -> 222 [style=solid label="T_L_PARENTHESIS"]
  174 [label="State 174\n\l 61 ITERATION_STATEMENT: T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT . EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 62                    | T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT . EXPRESSION_STATEMENT T_R_PARENTHESIS SINGLE_STATEMENT\l 67 EXPRESSION_STATEMENT: . T_SEMICOLON\l 68                     | . EXPRESSION T_SEMICOLON\l 69 EXPRESSION: . VARIABLE_DECLARATION\l 70           | . ASSIGNMENT_STATEMENT\l 71           | . MATH_OR_BITWISE_EXPRESSION\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l105 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | . DECLARATOR\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  174 -> 1 [style=solid label="T_CHAR"]
  174 -> 2 [style=solid label="T_DOUBLE"]
  174 -> 4 [style=solid label="T_FLOAT"]
  174 -> 5 [style=solid label="T_INT"]
  174 -> 6 [style=solid label="T_LONG"]
  174 -> 7 [style=solid label="T_SHORT"]
  174 -> 8 [style=solid label="T_SIGNED"]
  174 -> 36 [style=solid label="T_SIZEOF"]
  174 -> 11 [style=solid label="T_UNSIGNED"]
  174 -> 12 [style=solid label="T_VOID"]
  174 -> 40 [style=solid label="T_AND"]
  174 -> 41 [style=solid label="T_NOT"]
  174 -> 42 [style=solid label="T_INVERT"]
  174 -> 43 [style=solid label="T_MINUS"]
  174 -> 44 [style=solid label="T_PLUS"]
  174 -> 45 [style=solid label="T_MULT"]
  174 -> 46 [style=solid label="T_INC_OP"]
  174 -> 47 [style=solid label="T_DEC_OP"]
  174 -> 48 [style=solid label="T_SEMICOLON"]
  174 -> 50 [style=solid label="T_L_PARENTHESIS"]
  174 -> 51 [style=solid label="T_IDENTIFIER"]
  174 -> 52 [style=solid label="T_INT_CONST"]
  174 -> 53 [style=solid label="T_FLOAT_CONST"]
  174 -> 54 [style=solid label="T_CHAR_CONST"]
  174 -> 55 [style=solid label="T_STRING_CONST"]
  174 -> 15 [style=solid label="T_BOOL"]
  174 -> 223 [style=dashed label="EXPRESSION_STATEMENT"]
  174 -> 64 [style=dashed label="EXPRESSION"]
  174 -> 65 [style=dashed label="DECLARATOR"]
  174 -> 66 [style=dashed label="VARIABLE_DECLARATION"]
  174 -> 68 [style=dashed label="TYPE_SPECIFIER"]
  174 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  174 -> 72 [style=dashed label="ASSIGNMENT_STATEMENT"]
  174 -> 73 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  174 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  174 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  174 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  174 -> 77 [style=dashed label="UNARY_OPERATOR"]
  174 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  174 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  174 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  174 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  174 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  174 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  174 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  174 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  174 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  174 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  174 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  175 [label="State 175\n\l 46 SELECTION_STATEMENT: T_IF T_L_PARENTHESIS EXPRESSION . T_R_PARENTHESIS SINGLE_STATEMENT\l 47                    | T_IF T_L_PARENTHESIS EXPRESSION . T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l"]
  175 -> 224 [style=solid label="T_R_PARENTHESIS"]
  176 [label="State 176\n\l 64 JUMP_STATEMENT: T_RETURN EXPRESSION T_SEMICOLON .\l"]
  176 -> "176R64" [style=solid]
 "176R64" [label="R64", fillcolor=3, shape=diamond, style=filled]
  177 [label="State 177\n\l119 PRIMARY_EXPRESSION: T_SIZEOF T_L_PARENTHESIS DECLARATOR . T_R_PARENTHESIS\l"]
  177 -> 225 [style=solid label="T_R_PARENTHESIS"]
  178 [label="State 178\n\l118 PRIMARY_EXPRESSION: T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER . T_R_PARENTHESIS\l"]
  178 -> 226 [style=solid label="T_R_PARENTHESIS"]
  179 [label="State 179\n\l100 STRUCT_DECLARATION: T_STRUCT TYPE_SPECIFIER T_IDENTIFIER . T_SEMICOLON\l"]
  179 -> 227 [style=solid label="T_SEMICOLON"]
  180 [label="State 180\n\l 49 SELECTION_STATEMENT: T_SWITCH T_L_PARENTHESIS EXPRESSION . T_R_PARENTHESIS WRAPPED_CASE_STATEMENTS\l 50                    | T_SWITCH T_L_PARENTHESIS EXPRESSION . T_R_PARENTHESIS SINGLE_STATEMENT\l"]
  180 -> 228 [style=solid label="T_R_PARENTHESIS"]
  181 [label="State 181\n\l 59 ITERATION_STATEMENT: T_WHILE T_L_PARENTHESIS EXPRESSION . T_R_PARENTHESIS SINGLE_STATEMENT\l"]
  181 -> 229 [style=solid label="T_R_PARENTHESIS"]
  182 [label="State 182\n\l116 PRIMARY_EXPRESSION: T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS .\l"]
  182 -> "182R116" [style=solid]
 "182R116" [label="R116", fillcolor=3, shape=diamond, style=filled]
  183 [label="State 183\n\l101 STRUCT_ATTRIBUTE: T_IDENTIFIER T_DOT T_IDENTIFIER .\l"]
  183 -> "183R101" [style=solid]
 "183R101" [label="R101", fillcolor=3, shape=diamond, style=filled]
  184 [label="State 184\n\l 85 DECLARATOR: T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION . T_R_BRACKET\l"]
  184 -> 230 [style=solid label="T_R_BRACKET"]
  185 [label="State 185\n\l106 ASSIGNMENT_STATEMENT: DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT .\l"]
  185 -> "185R106" [style=solid]
 "185R106" [label="R106", fillcolor=3, shape=diamond, style=filled]
  186 [label="State 186\n\l105 ASSIGNMENT_STATEMENT: DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION . T_COMMA ASSIGNMENT_STATEMENT\l107                     | DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION .  [T_SEMICOLON, T_COLON, T_R_PARENTHESIS]\l"]
  186 -> 231 [style=solid label="T_COMMA"]
  186 -> "186R107" [style=solid]
 "186R107" [label="R107", fillcolor=3, shape=diamond, style=filled]
  187 [label="State 187\n\l 24 WRAPPED_PARAMETERS: T_L_PARENTHESIS T_R_PARENTHESIS .\l"]
  187 -> "187R24" [style=solid]
 "187R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  188 [label="State 188\n\l 23 WRAPPED_PARAMETERS: T_L_PARENTHESIS MULTIPLE_PARAMETERS . T_R_PARENTHESIS\l"]
  188 -> 232 [style=solid label="T_R_PARENTHESIS"]
  189 [label="State 189\n\l 25 MULTIPLE_PARAMETERS: MATH_OR_BITWISE_EXPRESSION . T_COMMA MULTIPLE_PARAMETERS\l 26                    | MATH_OR_BITWISE_EXPRESSION .  [T_R_PARENTHESIS]\l"]
  189 -> 233 [style=solid label="T_COMMA"]
  189 -> "189R26" [style=solid]
 "189R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  190 [label="State 190\n\l110 MATH_OR_BITWISE_EXPRESSION: DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION .\l"]
  190 -> "190R110" [style=solid]
 "190R110" [label="R110", fillcolor=3, shape=diamond, style=filled]
  191 [label="State 191\n\l133 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION .\l"]
  191 -> "191R133" [style=solid]
 "191R133" [label="R133", fillcolor=3, shape=diamond, style=filled]
  192 [label="State 192\n\l134 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION .\l"]
  192 -> "192R134" [style=solid]
 "192R134" [label="R134", fillcolor=3, shape=diamond, style=filled]
  193 [label="State 193\n\l135 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION .\l"]
  193 -> "193R135" [style=solid]
 "193R135" [label="R135", fillcolor=3, shape=diamond, style=filled]
  194 [label="State 194\n\l133 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . T_MULT UNARY_EXPRESSION\l134                          | MULTIPLICATIVE_EXPRESSION . T_DIV UNARY_EXPRESSION\l135                          | MULTIPLICATIVE_EXPRESSION . T_MOD UNARY_EXPRESSION\l138 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION .  [T_AND, T_MINUS, T_PLUS, T_LT, T_GT, T_XOR, T_OR, T_RSHIFT_OP, T_LSHIFT_OP, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  194 -> 144 [style=solid label="T_MULT"]
  194 -> 145 [style=solid label="T_DIV"]
  194 -> 146 [style=solid label="T_MOD"]
  194 -> "194R138" [style=solid]
 "194R138" [label="R138", fillcolor=3, shape=diamond, style=filled]
  195 [label="State 195\n\l133 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . T_MULT UNARY_EXPRESSION\l134                          | MULTIPLICATIVE_EXPRESSION . T_DIV UNARY_EXPRESSION\l135                          | MULTIPLICATIVE_EXPRESSION . T_MOD UNARY_EXPRESSION\l137 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION .  [T_AND, T_MINUS, T_PLUS, T_LT, T_GT, T_XOR, T_OR, T_RSHIFT_OP, T_LSHIFT_OP, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  195 -> 144 [style=solid label="T_MULT"]
  195 -> 145 [style=solid label="T_DIV"]
  195 -> 146 [style=solid label="T_MOD"]
  195 -> "195R137" [style=solid]
 "195R137" [label="R137", fillcolor=3, shape=diamond, style=filled]
  196 [label="State 196\n\l137 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | ADDITIVE_EXPRESSION . T_MINUS MULTIPLICATIVE_EXPRESSION\l141 SHIFT_EXPRESSION: SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION .  [T_AND, T_LT, T_GT, T_XOR, T_OR, T_RSHIFT_OP, T_LSHIFT_OP, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  196 -> 147 [style=solid label="T_MINUS"]
  196 -> 148 [style=solid label="T_PLUS"]
  196 -> "196R141" [style=solid]
 "196R141" [label="R141", fillcolor=3, shape=diamond, style=filled]
  197 [label="State 197\n\l137 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | ADDITIVE_EXPRESSION . T_MINUS MULTIPLICATIVE_EXPRESSION\l140 SHIFT_EXPRESSION: SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION .  [T_AND, T_LT, T_GT, T_XOR, T_OR, T_RSHIFT_OP, T_LSHIFT_OP, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  197 -> 147 [style=solid label="T_MINUS"]
  197 -> 148 [style=solid label="T_PLUS"]
  197 -> "197R140" [style=solid]
 "197R140" [label="R140", fillcolor=3, shape=diamond, style=filled]
  198 [label="State 198\n\l140 SHIFT_EXPRESSION: SHIFT_EXPRESSION . T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | SHIFT_EXPRESSION . T_RSHIFT_OP ADDITIVE_EXPRESSION\l143 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION .  [T_AND, T_LT, T_GT, T_XOR, T_OR, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  198 -> 149 [style=solid label="T_RSHIFT_OP"]
  198 -> 150 [style=solid label="T_LSHIFT_OP"]
  198 -> "198R143" [style=solid]
 "198R143" [label="R143", fillcolor=3, shape=diamond, style=filled]
  199 [label="State 199\n\l140 SHIFT_EXPRESSION: SHIFT_EXPRESSION . T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | SHIFT_EXPRESSION . T_RSHIFT_OP ADDITIVE_EXPRESSION\l144 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION .  [T_AND, T_LT, T_GT, T_XOR, T_OR, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  199 -> 149 [style=solid label="T_RSHIFT_OP"]
  199 -> 150 [style=solid label="T_LSHIFT_OP"]
  199 -> "199R144" [style=solid]
 "199R144" [label="R144", fillcolor=3, shape=diamond, style=filled]
  200 [label="State 200\n\l140 SHIFT_EXPRESSION: SHIFT_EXPRESSION . T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | SHIFT_EXPRESSION . T_RSHIFT_OP ADDITIVE_EXPRESSION\l145 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION .  [T_AND, T_LT, T_GT, T_XOR, T_OR, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  200 -> 149 [style=solid label="T_RSHIFT_OP"]
  200 -> 150 [style=solid label="T_LSHIFT_OP"]
  200 -> "200R145" [style=solid]
 "200R145" [label="R145", fillcolor=3, shape=diamond, style=filled]
  201 [label="State 201\n\l140 SHIFT_EXPRESSION: SHIFT_EXPRESSION . T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | SHIFT_EXPRESSION . T_RSHIFT_OP ADDITIVE_EXPRESSION\l146 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION .  [T_AND, T_LT, T_GT, T_XOR, T_OR, T_AND_OP, T_OR_OP, T_LE_OP, T_GE_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  201 -> 149 [style=solid label="T_RSHIFT_OP"]
  201 -> 150 [style=solid label="T_LSHIFT_OP"]
  201 -> "201R146" [style=solid]
 "201R146" [label="R146", fillcolor=3, shape=diamond, style=filled]
  202 [label="State 202\n\l143 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION . T_LT SHIFT_EXPRESSION\l144                      | RELATIONAL_EXPRESSION . T_GT SHIFT_EXPRESSION\l145                      | RELATIONAL_EXPRESSION . T_LE_OP SHIFT_EXPRESSION\l146                      | RELATIONAL_EXPRESSION . T_GE_OP SHIFT_EXPRESSION\l148 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION .  [T_AND, T_XOR, T_OR, T_AND_OP, T_OR_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  202 -> 151 [style=solid label="T_LT"]
  202 -> 152 [style=solid label="T_GT"]
  202 -> 153 [style=solid label="T_LE_OP"]
  202 -> 154 [style=solid label="T_GE_OP"]
  202 -> "202R148" [style=solid]
 "202R148" [label="R148", fillcolor=3, shape=diamond, style=filled]
  203 [label="State 203\n\l143 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION . T_LT SHIFT_EXPRESSION\l144                      | RELATIONAL_EXPRESSION . T_GT SHIFT_EXPRESSION\l145                      | RELATIONAL_EXPRESSION . T_LE_OP SHIFT_EXPRESSION\l146                      | RELATIONAL_EXPRESSION . T_GE_OP SHIFT_EXPRESSION\l149 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION .  [T_AND, T_XOR, T_OR, T_AND_OP, T_OR_OP, T_EQ_OP, T_NE_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  203 -> 151 [style=solid label="T_LT"]
  203 -> 152 [style=solid label="T_GT"]
  203 -> 153 [style=solid label="T_LE_OP"]
  203 -> 154 [style=solid label="T_GE_OP"]
  203 -> "203R149" [style=solid]
 "203R149" [label="R149", fillcolor=3, shape=diamond, style=filled]
  204 [label="State 204\n\l148 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION . T_EQ_OP RELATIONAL_EXPRESSION\l149                    | EQUALITY_EXPRESSION . T_NE_OP RELATIONAL_EXPRESSION\l151 BITWISE_AND_EXPRESSION: BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION .  [T_AND, T_XOR, T_OR, T_AND_OP, T_OR_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  204 -> 155 [style=solid label="T_EQ_OP"]
  204 -> 156 [style=solid label="T_NE_OP"]
  204 -> "204R151" [style=solid]
 "204R151" [label="R151", fillcolor=3, shape=diamond, style=filled]
  205 [label="State 205\n\l151 BITWISE_AND_EXPRESSION: BITWISE_AND_EXPRESSION . T_AND EQUALITY_EXPRESSION\l153 BITWISE_XOR_EXPRESSION: BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION .  [T_XOR, T_OR, T_AND_OP, T_OR_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  205 -> 157 [style=solid label="T_AND"]
  205 -> "205R153" [style=solid]
 "205R153" [label="R153", fillcolor=3, shape=diamond, style=filled]
  206 [label="State 206\n\l155 BITWISE_OR_EXPRESSION: BITWISE_OR_EXPRESSION . T_OR BITWISE_OR_EXPRESSION\l155                      | BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION .  [T_OR, T_AND_OP, T_OR_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  206 -> 159 [style=solid label="T_OR"]
  206 -> "206R155d" [label="[T_OR]", style=solid]
 "206R155d" [label="R155", fillcolor=5, shape=diamond, style=filled]
  206 -> "206R155" [style=solid]
 "206R155" [label="R155", fillcolor=3, shape=diamond, style=filled]
  207 [label="State 207\n\l155 BITWISE_OR_EXPRESSION: BITWISE_OR_EXPRESSION . T_OR BITWISE_OR_EXPRESSION\l157 BOOLEAN_AND_EXPRESSION: BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION .  [T_AND_OP, T_OR_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  207 -> 159 [style=solid label="T_OR"]
  207 -> "207R157" [style=solid]
 "207R157" [label="R157", fillcolor=3, shape=diamond, style=filled]
  208 [label="State 208\n\l157 BOOLEAN_AND_EXPRESSION: BOOLEAN_AND_EXPRESSION . T_AND_OP BITWISE_OR_EXPRESSION\l159 BOOLEAN_OR_EXPRESSION: BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION .  [T_OR_OP, T_SEMICOLON, T_COMMA, T_COLON, T_R_BRACE, T_R_PARENTHESIS, T_R_BRACKET]\l"]
  208 -> 160 [style=solid label="T_AND_OP"]
  208 -> "208R159" [style=solid]
 "208R159" [label="R159", fillcolor=3, shape=diamond, style=filled]
  209 [label="State 209\n\l 19 WRAPPED_ARGUMENTS: T_L_PARENTHESIS T_R_PARENTHESIS .\l"]
  209 -> "209R19" [style=solid]
 "209R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  210 [label="State 210\n\l 18 WRAPPED_ARGUMENTS: T_L_PARENTHESIS MULTIPLE_ARGUMENTS . T_R_PARENTHESIS\l"]
  210 -> 234 [style=solid label="T_R_PARENTHESIS"]
  211 [label="State 211\n\l 20 MULTIPLE_ARGUMENTS: SINGLE_ARGUMENT . T_COMMA MULTIPLE_ARGUMENTS\l 21                   | SINGLE_ARGUMENT .  [T_R_PARENTHESIS]\l"]
  211 -> 235 [style=solid label="T_COMMA"]
  211 -> "211R21" [style=solid]
 "211R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  212 [label="State 212\n\l 22 SINGLE_ARGUMENT: TYPE_SPECIFIER . DECLARATOR\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l"]
  212 -> 45 [style=solid label="T_MULT"]
  212 -> 96 [style=solid label="T_IDENTIFIER"]
  212 -> 236 [style=dashed label="DECLARATOR"]
  212 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  213 [label="State 213\n\l 16 FUNCTION_DECLARATION: TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS T_SEMICOLON .\l"]
  213 -> "213R16" [style=solid]
 "213R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  214 [label="State 214\n\l 17 FUNCTION_DEFINITION: TYPE_SPECIFIER DECLARATOR WRAPPED_ARGUMENTS SCOPE .\l"]
  214 -> "214R17" [style=solid]
 "214R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  215 [label="State 215\n\l 41 ENUMERATION: T_ENUM T_IDENTIFIER T_COLON TYPE_SPECIFIER T_L_BRACE . MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 42 MULTIPLE_ENUMERATORS: . SINGLE_ENUMERATOR T_COMMA MULTIPLE_ENUMERATORS\l 43                     | . SINGLE_ENUMERATOR\l 44 SINGLE_ENUMERATOR: . T_IDENTIFIER\l 45                  | . T_IDENTIFIER T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l"]
  215 -> 166 [style=solid label="T_IDENTIFIER"]
  215 -> 237 [style=dashed label="MULTIPLE_ENUMERATORS"]
  215 -> 168 [style=dashed label="SINGLE_ENUMERATOR"]
  216 [label="State 216\n\l 45 SINGLE_ENUMERATOR: T_IDENTIFIER T_EQ_ASSIGN . MATH_OR_BITWISE_EXPRESSION\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  216 -> 36 [style=solid label="T_SIZEOF"]
  216 -> 40 [style=solid label="T_AND"]
  216 -> 41 [style=solid label="T_NOT"]
  216 -> 42 [style=solid label="T_INVERT"]
  216 -> 43 [style=solid label="T_MINUS"]
  216 -> 44 [style=solid label="T_PLUS"]
  216 -> 45 [style=solid label="T_MULT"]
  216 -> 46 [style=solid label="T_INC_OP"]
  216 -> 47 [style=solid label="T_DEC_OP"]
  216 -> 50 [style=solid label="T_L_PARENTHESIS"]
  216 -> 96 [style=solid label="T_IDENTIFIER"]
  216 -> 52 [style=solid label="T_INT_CONST"]
  216 -> 53 [style=solid label="T_FLOAT_CONST"]
  216 -> 54 [style=solid label="T_CHAR_CONST"]
  216 -> 55 [style=solid label="T_STRING_CONST"]
  216 -> 118 [style=dashed label="DECLARATOR"]
  216 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  216 -> 238 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  216 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  216 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  216 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  216 -> 77 [style=dashed label="UNARY_OPERATOR"]
  216 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  216 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  216 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  216 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  216 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  216 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  216 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  216 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  216 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  216 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  216 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  217 [label="State 217\n\l 40 ENUMERATION: T_ENUM T_IDENTIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE . T_SEMICOLON\l"]
  217 -> 239 [style=solid label="T_SEMICOLON"]
  218 [label="State 218\n\l 42 MULTIPLE_ENUMERATORS: . SINGLE_ENUMERATOR T_COMMA MULTIPLE_ENUMERATORS\l 42                     | SINGLE_ENUMERATOR T_COMMA . MULTIPLE_ENUMERATORS\l 43                     | . SINGLE_ENUMERATOR\l 44 SINGLE_ENUMERATOR: . T_IDENTIFIER\l 45                  | . T_IDENTIFIER T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l"]
  218 -> 166 [style=solid label="T_IDENTIFIER"]
  218 -> 240 [style=dashed label="MULTIPLE_ENUMERATORS"]
  218 -> 168 [style=dashed label="SINGLE_ENUMERATOR"]
  219 [label="State 219\n\l104 SINGLE_ATTRIBUTE: TYPE_SPECIFIER T_IDENTIFIER . T_SEMICOLON\l"]
  219 -> 241 [style=solid label="T_SEMICOLON"]
  220 [label="State 220\n\l 99 STRUCT_DEFINITION: T_STRUCT T_IDENTIFIER T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE . T_SEMICOLON\l"]
  220 -> 242 [style=solid label="T_SEMICOLON"]
  221 [label="State 221\n\l102 MULTIPLE_ATTRIBUTES: SINGLE_ATTRIBUTE MULTIPLE_ATTRIBUTES .\l"]
  221 -> "221R102" [style=solid]
 "221R102" [label="R102", fillcolor=3, shape=diamond, style=filled]
  222 [label="State 222\n\l 60 ITERATION_STATEMENT: T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS . EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l 69 EXPRESSION: . VARIABLE_DECLARATION\l 70           | . ASSIGNMENT_STATEMENT\l 71           | . MATH_OR_BITWISE_EXPRESSION\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l105 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | . DECLARATOR\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  222 -> 1 [style=solid label="T_CHAR"]
  222 -> 2 [style=solid label="T_DOUBLE"]
  222 -> 4 [style=solid label="T_FLOAT"]
  222 -> 5 [style=solid label="T_INT"]
  222 -> 6 [style=solid label="T_LONG"]
  222 -> 7 [style=solid label="T_SHORT"]
  222 -> 8 [style=solid label="T_SIGNED"]
  222 -> 36 [style=solid label="T_SIZEOF"]
  222 -> 11 [style=solid label="T_UNSIGNED"]
  222 -> 12 [style=solid label="T_VOID"]
  222 -> 40 [style=solid label="T_AND"]
  222 -> 41 [style=solid label="T_NOT"]
  222 -> 42 [style=solid label="T_INVERT"]
  222 -> 43 [style=solid label="T_MINUS"]
  222 -> 44 [style=solid label="T_PLUS"]
  222 -> 45 [style=solid label="T_MULT"]
  222 -> 46 [style=solid label="T_INC_OP"]
  222 -> 47 [style=solid label="T_DEC_OP"]
  222 -> 50 [style=solid label="T_L_PARENTHESIS"]
  222 -> 51 [style=solid label="T_IDENTIFIER"]
  222 -> 52 [style=solid label="T_INT_CONST"]
  222 -> 53 [style=solid label="T_FLOAT_CONST"]
  222 -> 54 [style=solid label="T_CHAR_CONST"]
  222 -> 55 [style=solid label="T_STRING_CONST"]
  222 -> 15 [style=solid label="T_BOOL"]
  222 -> 243 [style=dashed label="EXPRESSION"]
  222 -> 65 [style=dashed label="DECLARATOR"]
  222 -> 66 [style=dashed label="VARIABLE_DECLARATION"]
  222 -> 68 [style=dashed label="TYPE_SPECIFIER"]
  222 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  222 -> 72 [style=dashed label="ASSIGNMENT_STATEMENT"]
  222 -> 73 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  222 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  222 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  222 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  222 -> 77 [style=dashed label="UNARY_OPERATOR"]
  222 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  222 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  222 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  222 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  222 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  222 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  222 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  222 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  222 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  222 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  222 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  223 [label="State 223\n\l 61 ITERATION_STATEMENT: T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT . EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 62                    | T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT . T_R_PARENTHESIS SINGLE_STATEMENT\l 69 EXPRESSION: . VARIABLE_DECLARATION\l 70           | . ASSIGNMENT_STATEMENT\l 71           | . MATH_OR_BITWISE_EXPRESSION\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l105 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | . DECLARATOR\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  223 -> 1 [style=solid label="T_CHAR"]
  223 -> 2 [style=solid label="T_DOUBLE"]
  223 -> 4 [style=solid label="T_FLOAT"]
  223 -> 5 [style=solid label="T_INT"]
  223 -> 6 [style=solid label="T_LONG"]
  223 -> 7 [style=solid label="T_SHORT"]
  223 -> 8 [style=solid label="T_SIGNED"]
  223 -> 36 [style=solid label="T_SIZEOF"]
  223 -> 11 [style=solid label="T_UNSIGNED"]
  223 -> 12 [style=solid label="T_VOID"]
  223 -> 40 [style=solid label="T_AND"]
  223 -> 41 [style=solid label="T_NOT"]
  223 -> 42 [style=solid label="T_INVERT"]
  223 -> 43 [style=solid label="T_MINUS"]
  223 -> 44 [style=solid label="T_PLUS"]
  223 -> 45 [style=solid label="T_MULT"]
  223 -> 46 [style=solid label="T_INC_OP"]
  223 -> 47 [style=solid label="T_DEC_OP"]
  223 -> 50 [style=solid label="T_L_PARENTHESIS"]
  223 -> 244 [style=solid label="T_R_PARENTHESIS"]
  223 -> 51 [style=solid label="T_IDENTIFIER"]
  223 -> 52 [style=solid label="T_INT_CONST"]
  223 -> 53 [style=solid label="T_FLOAT_CONST"]
  223 -> 54 [style=solid label="T_CHAR_CONST"]
  223 -> 55 [style=solid label="T_STRING_CONST"]
  223 -> 15 [style=solid label="T_BOOL"]
  223 -> 245 [style=dashed label="EXPRESSION"]
  223 -> 65 [style=dashed label="DECLARATOR"]
  223 -> 66 [style=dashed label="VARIABLE_DECLARATION"]
  223 -> 68 [style=dashed label="TYPE_SPECIFIER"]
  223 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  223 -> 72 [style=dashed label="ASSIGNMENT_STATEMENT"]
  223 -> 73 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  223 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  223 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  223 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  223 -> 77 [style=dashed label="UNARY_OPERATOR"]
  223 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  223 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  223 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  223 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  223 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  223 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  223 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  223 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  223 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  223 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  223 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  224 [label="State 224\n\l 27 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 28      | . T_L_BRACE T_R_BRACE\l 31 SINGLE_STATEMENT: . SCOPE\l 32                 | . EXPRESSION_STATEMENT\l 33                 | . JUMP_STATEMENT\l 34                 | . ITERATION_STATEMENT\l 35                 | . SELECTION_STATEMENT\l 36                 | . ENUMERATION\l 37                 | . TYPE_DEF\l 38                 | . STRUCT_DEFINITION\l 39                 | . STRUCT_DECLARATION\l 40 ENUMERATION: . T_ENUM T_IDENTIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 41            | . T_ENUM T_IDENTIFIER T_COLON TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 46 SELECTION_STATEMENT: . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 46                    | T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS . SINGLE_STATEMENT\l 47                    | . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l 47                    | T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS . SINGLE_STATEMENT SELECTION_STATEMENT\l 48                    | . T_ELSE SINGLE_STATEMENT\l 49                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS WRAPPED_CASE_STATEMENTS\l 50                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 59 ITERATION_STATEMENT: . T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 60                    | . T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l 61                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 62                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT T_R_PARENTHESIS SINGLE_STATEMENT\l 63 JUMP_STATEMENT: . T_RETURN T_SEMICOLON\l 64               | . T_RETURN EXPRESSION T_SEMICOLON\l 65               | . T_BREAK T_SEMICOLON\l 66               | . T_CONTINUE T_SEMICOLON\l 67 EXPRESSION_STATEMENT: . T_SEMICOLON\l 68                     | . EXPRESSION T_SEMICOLON\l 69 EXPRESSION: . VARIABLE_DECLARATION\l 70           | . ASSIGNMENT_STATEMENT\l 71           | . MATH_OR_BITWISE_EXPRESSION\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 87 TYPE_DEF: . T_TYPEDEF TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l 99 STRUCT_DEFINITION: . T_STRUCT T_IDENTIFIER T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON\l100 STRUCT_DECLARATION: . T_STRUCT TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l105 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | . DECLARATOR\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  224 -> 29 [style=solid label="T_BREAK"]
  224 -> 1 [style=solid label="T_CHAR"]
  224 -> 30 [style=solid label="T_CONTINUE"]
  224 -> 31 [style=solid label="T_DO"]
  224 -> 2 [style=solid label="T_DOUBLE"]
  224 -> 32 [style=solid label="T_ELSE"]
  224 -> 3 [style=solid label="T_ENUM"]
  224 -> 4 [style=solid label="T_FLOAT"]
  224 -> 33 [style=solid label="T_FOR"]
  224 -> 34 [style=solid label="T_IF"]
  224 -> 5 [style=solid label="T_INT"]
  224 -> 6 [style=solid label="T_LONG"]
  224 -> 35 [style=solid label="T_RETURN"]
  224 -> 7 [style=solid label="T_SHORT"]
  224 -> 8 [style=solid label="T_SIGNED"]
  224 -> 36 [style=solid label="T_SIZEOF"]
  224 -> 37 [style=solid label="T_STRUCT"]
  224 -> 38 [style=solid label="T_SWITCH"]
  224 -> 10 [style=solid label="T_TYPEDEF"]
  224 -> 11 [style=solid label="T_UNSIGNED"]
  224 -> 12 [style=solid label="T_VOID"]
  224 -> 39 [style=solid label="T_WHILE"]
  224 -> 40 [style=solid label="T_AND"]
  224 -> 41 [style=solid label="T_NOT"]
  224 -> 42 [style=solid label="T_INVERT"]
  224 -> 43 [style=solid label="T_MINUS"]
  224 -> 44 [style=solid label="T_PLUS"]
  224 -> 45 [style=solid label="T_MULT"]
  224 -> 46 [style=solid label="T_INC_OP"]
  224 -> 47 [style=solid label="T_DEC_OP"]
  224 -> 48 [style=solid label="T_SEMICOLON"]
  224 -> 13 [style=solid label="T_L_BRACE"]
  224 -> 50 [style=solid label="T_L_PARENTHESIS"]
  224 -> 51 [style=solid label="T_IDENTIFIER"]
  224 -> 52 [style=solid label="T_INT_CONST"]
  224 -> 53 [style=solid label="T_FLOAT_CONST"]
  224 -> 54 [style=solid label="T_CHAR_CONST"]
  224 -> 55 [style=solid label="T_STRING_CONST"]
  224 -> 15 [style=solid label="T_BOOL"]
  224 -> 56 [style=dashed label="SCOPE"]
  224 -> 246 [style=dashed label="SINGLE_STATEMENT"]
  224 -> 59 [style=dashed label="ENUMERATION"]
  224 -> 60 [style=dashed label="SELECTION_STATEMENT"]
  224 -> 61 [style=dashed label="ITERATION_STATEMENT"]
  224 -> 62 [style=dashed label="JUMP_STATEMENT"]
  224 -> 63 [style=dashed label="EXPRESSION_STATEMENT"]
  224 -> 64 [style=dashed label="EXPRESSION"]
  224 -> 65 [style=dashed label="DECLARATOR"]
  224 -> 66 [style=dashed label="VARIABLE_DECLARATION"]
  224 -> 67 [style=dashed label="TYPE_DEF"]
  224 -> 68 [style=dashed label="TYPE_SPECIFIER"]
  224 -> 69 [style=dashed label="STRUCT_DEFINITION"]
  224 -> 70 [style=dashed label="STRUCT_DECLARATION"]
  224 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  224 -> 72 [style=dashed label="ASSIGNMENT_STATEMENT"]
  224 -> 73 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  224 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  224 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  224 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  224 -> 77 [style=dashed label="UNARY_OPERATOR"]
  224 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  224 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  224 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  224 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  224 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  224 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  224 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  224 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  224 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  224 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  224 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  225 [label="State 225\n\l119 PRIMARY_EXPRESSION: T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS .\l"]
  225 -> "225R119" [style=solid]
 "225R119" [label="R119", fillcolor=3, shape=diamond, style=filled]
  226 [label="State 226\n\l118 PRIMARY_EXPRESSION: T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS .\l"]
  226 -> "226R118" [style=solid]
 "226R118" [label="R118", fillcolor=3, shape=diamond, style=filled]
  227 [label="State 227\n\l100 STRUCT_DECLARATION: T_STRUCT TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON .\l"]
  227 -> "227R100" [style=solid]
 "227R100" [label="R100", fillcolor=3, shape=diamond, style=filled]
  228 [label="State 228\n\l 27 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 28      | . T_L_BRACE T_R_BRACE\l 31 SINGLE_STATEMENT: . SCOPE\l 32                 | . EXPRESSION_STATEMENT\l 33                 | . JUMP_STATEMENT\l 34                 | . ITERATION_STATEMENT\l 35                 | . SELECTION_STATEMENT\l 36                 | . ENUMERATION\l 37                 | . TYPE_DEF\l 38                 | . STRUCT_DEFINITION\l 39                 | . STRUCT_DECLARATION\l 40 ENUMERATION: . T_ENUM T_IDENTIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 41            | . T_ENUM T_IDENTIFIER T_COLON TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 46 SELECTION_STATEMENT: . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 47                    | . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l 48                    | . T_ELSE SINGLE_STATEMENT\l 49                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS WRAPPED_CASE_STATEMENTS\l 49                    | T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS . WRAPPED_CASE_STATEMENTS\l 50                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 50                    | T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS . SINGLE_STATEMENT\l 51 WRAPPED_CASE_STATEMENTS: . T_L_BRACE MULTIPLE_CASE_STATEMENTS T_R_BRACE\l 59 ITERATION_STATEMENT: . T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 60                    | . T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l 61                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 62                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT T_R_PARENTHESIS SINGLE_STATEMENT\l 63 JUMP_STATEMENT: . T_RETURN T_SEMICOLON\l 64               | . T_RETURN EXPRESSION T_SEMICOLON\l 65               | . T_BREAK T_SEMICOLON\l 66               | . T_CONTINUE T_SEMICOLON\l 67 EXPRESSION_STATEMENT: . T_SEMICOLON\l 68                     | . EXPRESSION T_SEMICOLON\l 69 EXPRESSION: . VARIABLE_DECLARATION\l 70           | . ASSIGNMENT_STATEMENT\l 71           | . MATH_OR_BITWISE_EXPRESSION\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 87 TYPE_DEF: . T_TYPEDEF TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l 99 STRUCT_DEFINITION: . T_STRUCT T_IDENTIFIER T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON\l100 STRUCT_DECLARATION: . T_STRUCT TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l105 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | . DECLARATOR\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  228 -> 29 [style=solid label="T_BREAK"]
  228 -> 1 [style=solid label="T_CHAR"]
  228 -> 30 [style=solid label="T_CONTINUE"]
  228 -> 31 [style=solid label="T_DO"]
  228 -> 2 [style=solid label="T_DOUBLE"]
  228 -> 32 [style=solid label="T_ELSE"]
  228 -> 3 [style=solid label="T_ENUM"]
  228 -> 4 [style=solid label="T_FLOAT"]
  228 -> 33 [style=solid label="T_FOR"]
  228 -> 34 [style=solid label="T_IF"]
  228 -> 5 [style=solid label="T_INT"]
  228 -> 6 [style=solid label="T_LONG"]
  228 -> 35 [style=solid label="T_RETURN"]
  228 -> 7 [style=solid label="T_SHORT"]
  228 -> 8 [style=solid label="T_SIGNED"]
  228 -> 36 [style=solid label="T_SIZEOF"]
  228 -> 37 [style=solid label="T_STRUCT"]
  228 -> 38 [style=solid label="T_SWITCH"]
  228 -> 10 [style=solid label="T_TYPEDEF"]
  228 -> 11 [style=solid label="T_UNSIGNED"]
  228 -> 12 [style=solid label="T_VOID"]
  228 -> 39 [style=solid label="T_WHILE"]
  228 -> 40 [style=solid label="T_AND"]
  228 -> 41 [style=solid label="T_NOT"]
  228 -> 42 [style=solid label="T_INVERT"]
  228 -> 43 [style=solid label="T_MINUS"]
  228 -> 44 [style=solid label="T_PLUS"]
  228 -> 45 [style=solid label="T_MULT"]
  228 -> 46 [style=solid label="T_INC_OP"]
  228 -> 47 [style=solid label="T_DEC_OP"]
  228 -> 48 [style=solid label="T_SEMICOLON"]
  228 -> 247 [style=solid label="T_L_BRACE"]
  228 -> 50 [style=solid label="T_L_PARENTHESIS"]
  228 -> 51 [style=solid label="T_IDENTIFIER"]
  228 -> 52 [style=solid label="T_INT_CONST"]
  228 -> 53 [style=solid label="T_FLOAT_CONST"]
  228 -> 54 [style=solid label="T_CHAR_CONST"]
  228 -> 55 [style=solid label="T_STRING_CONST"]
  228 -> 15 [style=solid label="T_BOOL"]
  228 -> 56 [style=dashed label="SCOPE"]
  228 -> 248 [style=dashed label="SINGLE_STATEMENT"]
  228 -> 59 [style=dashed label="ENUMERATION"]
  228 -> 60 [style=dashed label="SELECTION_STATEMENT"]
  228 -> 249 [style=dashed label="WRAPPED_CASE_STATEMENTS"]
  228 -> 61 [style=dashed label="ITERATION_STATEMENT"]
  228 -> 62 [style=dashed label="JUMP_STATEMENT"]
  228 -> 63 [style=dashed label="EXPRESSION_STATEMENT"]
  228 -> 64 [style=dashed label="EXPRESSION"]
  228 -> 65 [style=dashed label="DECLARATOR"]
  228 -> 66 [style=dashed label="VARIABLE_DECLARATION"]
  228 -> 67 [style=dashed label="TYPE_DEF"]
  228 -> 68 [style=dashed label="TYPE_SPECIFIER"]
  228 -> 69 [style=dashed label="STRUCT_DEFINITION"]
  228 -> 70 [style=dashed label="STRUCT_DECLARATION"]
  228 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  228 -> 72 [style=dashed label="ASSIGNMENT_STATEMENT"]
  228 -> 73 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  228 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  228 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  228 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  228 -> 77 [style=dashed label="UNARY_OPERATOR"]
  228 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  228 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  228 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  228 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  228 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  228 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  228 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  228 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  228 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  228 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  228 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  229 [label="State 229\n\l 27 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 28      | . T_L_BRACE T_R_BRACE\l 31 SINGLE_STATEMENT: . SCOPE\l 32                 | . EXPRESSION_STATEMENT\l 33                 | . JUMP_STATEMENT\l 34                 | . ITERATION_STATEMENT\l 35                 | . SELECTION_STATEMENT\l 36                 | . ENUMERATION\l 37                 | . TYPE_DEF\l 38                 | . STRUCT_DEFINITION\l 39                 | . STRUCT_DECLARATION\l 40 ENUMERATION: . T_ENUM T_IDENTIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 41            | . T_ENUM T_IDENTIFIER T_COLON TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 46 SELECTION_STATEMENT: . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 47                    | . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l 48                    | . T_ELSE SINGLE_STATEMENT\l 49                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS WRAPPED_CASE_STATEMENTS\l 50                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 59 ITERATION_STATEMENT: . T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 59                    | T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS . SINGLE_STATEMENT\l 60                    | . T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l 61                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 62                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT T_R_PARENTHESIS SINGLE_STATEMENT\l 63 JUMP_STATEMENT: . T_RETURN T_SEMICOLON\l 64               | . T_RETURN EXPRESSION T_SEMICOLON\l 65               | . T_BREAK T_SEMICOLON\l 66               | . T_CONTINUE T_SEMICOLON\l 67 EXPRESSION_STATEMENT: . T_SEMICOLON\l 68                     | . EXPRESSION T_SEMICOLON\l 69 EXPRESSION: . VARIABLE_DECLARATION\l 70           | . ASSIGNMENT_STATEMENT\l 71           | . MATH_OR_BITWISE_EXPRESSION\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 87 TYPE_DEF: . T_TYPEDEF TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l 99 STRUCT_DEFINITION: . T_STRUCT T_IDENTIFIER T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON\l100 STRUCT_DECLARATION: . T_STRUCT TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l105 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | . DECLARATOR\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  229 -> 29 [style=solid label="T_BREAK"]
  229 -> 1 [style=solid label="T_CHAR"]
  229 -> 30 [style=solid label="T_CONTINUE"]
  229 -> 31 [style=solid label="T_DO"]
  229 -> 2 [style=solid label="T_DOUBLE"]
  229 -> 32 [style=solid label="T_ELSE"]
  229 -> 3 [style=solid label="T_ENUM"]
  229 -> 4 [style=solid label="T_FLOAT"]
  229 -> 33 [style=solid label="T_FOR"]
  229 -> 34 [style=solid label="T_IF"]
  229 -> 5 [style=solid label="T_INT"]
  229 -> 6 [style=solid label="T_LONG"]
  229 -> 35 [style=solid label="T_RETURN"]
  229 -> 7 [style=solid label="T_SHORT"]
  229 -> 8 [style=solid label="T_SIGNED"]
  229 -> 36 [style=solid label="T_SIZEOF"]
  229 -> 37 [style=solid label="T_STRUCT"]
  229 -> 38 [style=solid label="T_SWITCH"]
  229 -> 10 [style=solid label="T_TYPEDEF"]
  229 -> 11 [style=solid label="T_UNSIGNED"]
  229 -> 12 [style=solid label="T_VOID"]
  229 -> 39 [style=solid label="T_WHILE"]
  229 -> 40 [style=solid label="T_AND"]
  229 -> 41 [style=solid label="T_NOT"]
  229 -> 42 [style=solid label="T_INVERT"]
  229 -> 43 [style=solid label="T_MINUS"]
  229 -> 44 [style=solid label="T_PLUS"]
  229 -> 45 [style=solid label="T_MULT"]
  229 -> 46 [style=solid label="T_INC_OP"]
  229 -> 47 [style=solid label="T_DEC_OP"]
  229 -> 48 [style=solid label="T_SEMICOLON"]
  229 -> 13 [style=solid label="T_L_BRACE"]
  229 -> 50 [style=solid label="T_L_PARENTHESIS"]
  229 -> 51 [style=solid label="T_IDENTIFIER"]
  229 -> 52 [style=solid label="T_INT_CONST"]
  229 -> 53 [style=solid label="T_FLOAT_CONST"]
  229 -> 54 [style=solid label="T_CHAR_CONST"]
  229 -> 55 [style=solid label="T_STRING_CONST"]
  229 -> 15 [style=solid label="T_BOOL"]
  229 -> 56 [style=dashed label="SCOPE"]
  229 -> 250 [style=dashed label="SINGLE_STATEMENT"]
  229 -> 59 [style=dashed label="ENUMERATION"]
  229 -> 60 [style=dashed label="SELECTION_STATEMENT"]
  229 -> 61 [style=dashed label="ITERATION_STATEMENT"]
  229 -> 62 [style=dashed label="JUMP_STATEMENT"]
  229 -> 63 [style=dashed label="EXPRESSION_STATEMENT"]
  229 -> 64 [style=dashed label="EXPRESSION"]
  229 -> 65 [style=dashed label="DECLARATOR"]
  229 -> 66 [style=dashed label="VARIABLE_DECLARATION"]
  229 -> 67 [style=dashed label="TYPE_DEF"]
  229 -> 68 [style=dashed label="TYPE_SPECIFIER"]
  229 -> 69 [style=dashed label="STRUCT_DEFINITION"]
  229 -> 70 [style=dashed label="STRUCT_DECLARATION"]
  229 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  229 -> 72 [style=dashed label="ASSIGNMENT_STATEMENT"]
  229 -> 73 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  229 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  229 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  229 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  229 -> 77 [style=dashed label="UNARY_OPERATOR"]
  229 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  229 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  229 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  229 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  229 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  229 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  229 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  229 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  229 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  229 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  229 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  230 [label="State 230\n\l 85 DECLARATOR: T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET .\l"]
  230 -> "230R85" [style=solid]
 "230R85" [label="R85", fillcolor=3, shape=diamond, style=filled]
  231 [label="State 231\n\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l105 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l105                     | DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA . ASSIGNMENT_STATEMENT\l106                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | . DECLARATOR\l"]
  231 -> 45 [style=solid label="T_MULT"]
  231 -> 96 [style=solid label="T_IDENTIFIER"]
  231 -> 139 [style=dashed label="DECLARATOR"]
  231 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  231 -> 251 [style=dashed label="ASSIGNMENT_STATEMENT"]
  232 [label="State 232\n\l 23 WRAPPED_PARAMETERS: T_L_PARENTHESIS MULTIPLE_PARAMETERS T_R_PARENTHESIS .\l"]
  232 -> "232R23" [style=solid]
 "232R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  233 [label="State 233\n\l 25 MULTIPLE_PARAMETERS: . MATH_OR_BITWISE_EXPRESSION T_COMMA MULTIPLE_PARAMETERS\l 25                    | MATH_OR_BITWISE_EXPRESSION T_COMMA . MULTIPLE_PARAMETERS\l 26                    | . MATH_OR_BITWISE_EXPRESSION\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  233 -> 36 [style=solid label="T_SIZEOF"]
  233 -> 40 [style=solid label="T_AND"]
  233 -> 41 [style=solid label="T_NOT"]
  233 -> 42 [style=solid label="T_INVERT"]
  233 -> 43 [style=solid label="T_MINUS"]
  233 -> 44 [style=solid label="T_PLUS"]
  233 -> 45 [style=solid label="T_MULT"]
  233 -> 46 [style=solid label="T_INC_OP"]
  233 -> 47 [style=solid label="T_DEC_OP"]
  233 -> 50 [style=solid label="T_L_PARENTHESIS"]
  233 -> 96 [style=solid label="T_IDENTIFIER"]
  233 -> 52 [style=solid label="T_INT_CONST"]
  233 -> 53 [style=solid label="T_FLOAT_CONST"]
  233 -> 54 [style=solid label="T_CHAR_CONST"]
  233 -> 55 [style=solid label="T_STRING_CONST"]
  233 -> 252 [style=dashed label="MULTIPLE_PARAMETERS"]
  233 -> 118 [style=dashed label="DECLARATOR"]
  233 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  233 -> 189 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  233 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  233 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  233 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  233 -> 77 [style=dashed label="UNARY_OPERATOR"]
  233 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  233 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  233 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  233 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  233 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  233 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  233 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  233 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  233 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  233 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  233 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  234 [label="State 234\n\l 18 WRAPPED_ARGUMENTS: T_L_PARENTHESIS MULTIPLE_ARGUMENTS T_R_PARENTHESIS .\l"]
  234 -> "234R18" [style=solid]
 "234R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  235 [label="State 235\n\l 20 MULTIPLE_ARGUMENTS: . SINGLE_ARGUMENT T_COMMA MULTIPLE_ARGUMENTS\l 20                   | SINGLE_ARGUMENT T_COMMA . MULTIPLE_ARGUMENTS\l 21                   | . SINGLE_ARGUMENT\l 22 SINGLE_ARGUMENT: . TYPE_SPECIFIER DECLARATOR\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l"]
  235 -> 1 [style=solid label="T_CHAR"]
  235 -> 2 [style=solid label="T_DOUBLE"]
  235 -> 4 [style=solid label="T_FLOAT"]
  235 -> 5 [style=solid label="T_INT"]
  235 -> 6 [style=solid label="T_LONG"]
  235 -> 7 [style=solid label="T_SHORT"]
  235 -> 8 [style=solid label="T_SIGNED"]
  235 -> 11 [style=solid label="T_UNSIGNED"]
  235 -> 12 [style=solid label="T_VOID"]
  235 -> 14 [style=solid label="T_IDENTIFIER"]
  235 -> 15 [style=solid label="T_BOOL"]
  235 -> 253 [style=dashed label="MULTIPLE_ARGUMENTS"]
  235 -> 211 [style=dashed label="SINGLE_ARGUMENT"]
  235 -> 212 [style=dashed label="TYPE_SPECIFIER"]
  236 [label="State 236\n\l 22 SINGLE_ARGUMENT: TYPE_SPECIFIER DECLARATOR .\l"]
  236 -> "236R22" [style=solid]
 "236R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  237 [label="State 237\n\l 41 ENUMERATION: T_ENUM T_IDENTIFIER T_COLON TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS . T_R_BRACE T_SEMICOLON\l"]
  237 -> 254 [style=solid label="T_R_BRACE"]
  238 [label="State 238\n\l 45 SINGLE_ENUMERATOR: T_IDENTIFIER T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION .\l"]
  238 -> "238R45" [style=solid]
 "238R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  239 [label="State 239\n\l 40 ENUMERATION: T_ENUM T_IDENTIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON .\l"]
  239 -> "239R40" [style=solid]
 "239R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  240 [label="State 240\n\l 42 MULTIPLE_ENUMERATORS: SINGLE_ENUMERATOR T_COMMA MULTIPLE_ENUMERATORS .\l"]
  240 -> "240R42" [style=solid]
 "240R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  241 [label="State 241\n\l104 SINGLE_ATTRIBUTE: TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON .\l"]
  241 -> "241R104" [style=solid]
 "241R104" [label="R104", fillcolor=3, shape=diamond, style=filled]
  242 [label="State 242\n\l 99 STRUCT_DEFINITION: T_STRUCT T_IDENTIFIER T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON .\l"]
  242 -> "242R99" [style=solid]
 "242R99" [label="R99", fillcolor=3, shape=diamond, style=filled]
  243 [label="State 243\n\l 60 ITERATION_STATEMENT: T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION . T_R_PARENTHESIS T_SEMICOLON\l"]
  243 -> 255 [style=solid label="T_R_PARENTHESIS"]
  244 [label="State 244\n\l 27 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 28      | . T_L_BRACE T_R_BRACE\l 31 SINGLE_STATEMENT: . SCOPE\l 32                 | . EXPRESSION_STATEMENT\l 33                 | . JUMP_STATEMENT\l 34                 | . ITERATION_STATEMENT\l 35                 | . SELECTION_STATEMENT\l 36                 | . ENUMERATION\l 37                 | . TYPE_DEF\l 38                 | . STRUCT_DEFINITION\l 39                 | . STRUCT_DECLARATION\l 40 ENUMERATION: . T_ENUM T_IDENTIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 41            | . T_ENUM T_IDENTIFIER T_COLON TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 46 SELECTION_STATEMENT: . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 47                    | . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l 48                    | . T_ELSE SINGLE_STATEMENT\l 49                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS WRAPPED_CASE_STATEMENTS\l 50                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 59 ITERATION_STATEMENT: . T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 60                    | . T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l 61                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 62                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT T_R_PARENTHESIS SINGLE_STATEMENT\l 62                    | T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT T_R_PARENTHESIS . SINGLE_STATEMENT\l 63 JUMP_STATEMENT: . T_RETURN T_SEMICOLON\l 64               | . T_RETURN EXPRESSION T_SEMICOLON\l 65               | . T_BREAK T_SEMICOLON\l 66               | . T_CONTINUE T_SEMICOLON\l 67 EXPRESSION_STATEMENT: . T_SEMICOLON\l 68                     | . EXPRESSION T_SEMICOLON\l 69 EXPRESSION: . VARIABLE_DECLARATION\l 70           | . ASSIGNMENT_STATEMENT\l 71           | . MATH_OR_BITWISE_EXPRESSION\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 87 TYPE_DEF: . T_TYPEDEF TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l 99 STRUCT_DEFINITION: . T_STRUCT T_IDENTIFIER T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON\l100 STRUCT_DECLARATION: . T_STRUCT TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l105 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | . DECLARATOR\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  244 -> 29 [style=solid label="T_BREAK"]
  244 -> 1 [style=solid label="T_CHAR"]
  244 -> 30 [style=solid label="T_CONTINUE"]
  244 -> 31 [style=solid label="T_DO"]
  244 -> 2 [style=solid label="T_DOUBLE"]
  244 -> 32 [style=solid label="T_ELSE"]
  244 -> 3 [style=solid label="T_ENUM"]
  244 -> 4 [style=solid label="T_FLOAT"]
  244 -> 33 [style=solid label="T_FOR"]
  244 -> 34 [style=solid label="T_IF"]
  244 -> 5 [style=solid label="T_INT"]
  244 -> 6 [style=solid label="T_LONG"]
  244 -> 35 [style=solid label="T_RETURN"]
  244 -> 7 [style=solid label="T_SHORT"]
  244 -> 8 [style=solid label="T_SIGNED"]
  244 -> 36 [style=solid label="T_SIZEOF"]
  244 -> 37 [style=solid label="T_STRUCT"]
  244 -> 38 [style=solid label="T_SWITCH"]
  244 -> 10 [style=solid label="T_TYPEDEF"]
  244 -> 11 [style=solid label="T_UNSIGNED"]
  244 -> 12 [style=solid label="T_VOID"]
  244 -> 39 [style=solid label="T_WHILE"]
  244 -> 40 [style=solid label="T_AND"]
  244 -> 41 [style=solid label="T_NOT"]
  244 -> 42 [style=solid label="T_INVERT"]
  244 -> 43 [style=solid label="T_MINUS"]
  244 -> 44 [style=solid label="T_PLUS"]
  244 -> 45 [style=solid label="T_MULT"]
  244 -> 46 [style=solid label="T_INC_OP"]
  244 -> 47 [style=solid label="T_DEC_OP"]
  244 -> 48 [style=solid label="T_SEMICOLON"]
  244 -> 13 [style=solid label="T_L_BRACE"]
  244 -> 50 [style=solid label="T_L_PARENTHESIS"]
  244 -> 51 [style=solid label="T_IDENTIFIER"]
  244 -> 52 [style=solid label="T_INT_CONST"]
  244 -> 53 [style=solid label="T_FLOAT_CONST"]
  244 -> 54 [style=solid label="T_CHAR_CONST"]
  244 -> 55 [style=solid label="T_STRING_CONST"]
  244 -> 15 [style=solid label="T_BOOL"]
  244 -> 56 [style=dashed label="SCOPE"]
  244 -> 256 [style=dashed label="SINGLE_STATEMENT"]
  244 -> 59 [style=dashed label="ENUMERATION"]
  244 -> 60 [style=dashed label="SELECTION_STATEMENT"]
  244 -> 61 [style=dashed label="ITERATION_STATEMENT"]
  244 -> 62 [style=dashed label="JUMP_STATEMENT"]
  244 -> 63 [style=dashed label="EXPRESSION_STATEMENT"]
  244 -> 64 [style=dashed label="EXPRESSION"]
  244 -> 65 [style=dashed label="DECLARATOR"]
  244 -> 66 [style=dashed label="VARIABLE_DECLARATION"]
  244 -> 67 [style=dashed label="TYPE_DEF"]
  244 -> 68 [style=dashed label="TYPE_SPECIFIER"]
  244 -> 69 [style=dashed label="STRUCT_DEFINITION"]
  244 -> 70 [style=dashed label="STRUCT_DECLARATION"]
  244 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  244 -> 72 [style=dashed label="ASSIGNMENT_STATEMENT"]
  244 -> 73 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  244 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  244 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  244 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  244 -> 77 [style=dashed label="UNARY_OPERATOR"]
  244 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  244 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  244 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  244 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  244 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  244 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  244 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  244 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  244 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  244 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  244 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  245 [label="State 245\n\l 61 ITERATION_STATEMENT: T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION . T_R_PARENTHESIS SINGLE_STATEMENT\l"]
  245 -> 257 [style=solid label="T_R_PARENTHESIS"]
  246 [label="State 246\n\l 46 SELECTION_STATEMENT: . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 46                    | T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT .  [T_BREAK, T_CASE, T_CHAR, T_CONTINUE, T_DEFAULT, T_DO, T_DOUBLE, T_ELSE, T_ENUM, T_FLOAT, T_FOR, T_IF, T_INT, T_LONG, T_RETURN, T_SHORT, T_SIGNED, T_SIZEOF, T_STRUCT, T_SWITCH, T_TYPEDEF, T_UNSIGNED, T_VOID, T_WHILE, T_AND, T_NOT, T_INVERT, T_MINUS, T_PLUS, T_MULT, T_INC_OP, T_DEC_OP, T_SEMICOLON, T_L_BRACE, T_R_BRACE, T_L_PARENTHESIS, T_IDENTIFIER, T_INT_CONST, T_FLOAT_CONST, T_CHAR_CONST, T_STRING_CONST, T_BOOL]\l 47                    | . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l 47                    | T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT . SELECTION_STATEMENT\l 48                    | . T_ELSE SINGLE_STATEMENT\l 49                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS WRAPPED_CASE_STATEMENTS\l 50                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l"]
  246 -> 32 [style=solid label="T_ELSE"]
  246 -> 34 [style=solid label="T_IF"]
  246 -> 38 [style=solid label="T_SWITCH"]
  246 -> 258 [style=dashed label="SELECTION_STATEMENT"]
  246 -> "246R46d" [label="[T_ELSE, T_IF, T_SWITCH]", style=solid]
 "246R46d" [label="R46", fillcolor=5, shape=diamond, style=filled]
  246 -> "246R46" [style=solid]
 "246R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  247 [label="State 247\n\l 27 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 27      | T_L_BRACE . MULTIPLE_STATEMENTS T_R_BRACE\l 28      | . T_L_BRACE T_R_BRACE\l 28      | T_L_BRACE . T_R_BRACE\l 29 MULTIPLE_STATEMENTS: . SINGLE_STATEMENT MULTIPLE_STATEMENTS\l 30                    | . SINGLE_STATEMENT\l 31 SINGLE_STATEMENT: . SCOPE\l 32                 | . EXPRESSION_STATEMENT\l 33                 | . JUMP_STATEMENT\l 34                 | . ITERATION_STATEMENT\l 35                 | . SELECTION_STATEMENT\l 36                 | . ENUMERATION\l 37                 | . TYPE_DEF\l 38                 | . STRUCT_DEFINITION\l 39                 | . STRUCT_DECLARATION\l 40 ENUMERATION: . T_ENUM T_IDENTIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 41            | . T_ENUM T_IDENTIFIER T_COLON TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 46 SELECTION_STATEMENT: . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 47                    | . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l 48                    | . T_ELSE SINGLE_STATEMENT\l 49                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS WRAPPED_CASE_STATEMENTS\l 50                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 51 WRAPPED_CASE_STATEMENTS: T_L_BRACE . MULTIPLE_CASE_STATEMENTS T_R_BRACE\l 52 MULTIPLE_CASE_STATEMENTS: . SINGLE_CASE_STATEMENT MULTIPLE_CASE_STATEMENTS\l 53                         | . SINGLE_CASE_STATEMENT\l 54 SINGLE_CASE_STATEMENT: . T_CASE EXPRESSION T_COLON MULTIPLE_STATEMENTS\l 55                      | . T_CASE EXPRESSION T_COLON\l 56                      | . T_DEFAULT T_COLON MULTIPLE_STATEMENTS\l 57                      | . T_DEFAULT T_COLON\l 58                      | . SINGLE_STATEMENT\l 59 ITERATION_STATEMENT: . T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 60                    | . T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l 61                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 62                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT T_R_PARENTHESIS SINGLE_STATEMENT\l 63 JUMP_STATEMENT: . T_RETURN T_SEMICOLON\l 64               | . T_RETURN EXPRESSION T_SEMICOLON\l 65               | . T_BREAK T_SEMICOLON\l 66               | . T_CONTINUE T_SEMICOLON\l 67 EXPRESSION_STATEMENT: . T_SEMICOLON\l 68                     | . EXPRESSION T_SEMICOLON\l 69 EXPRESSION: . VARIABLE_DECLARATION\l 70           | . ASSIGNMENT_STATEMENT\l 71           | . MATH_OR_BITWISE_EXPRESSION\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 87 TYPE_DEF: . T_TYPEDEF TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l 99 STRUCT_DEFINITION: . T_STRUCT T_IDENTIFIER T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON\l100 STRUCT_DECLARATION: . T_STRUCT TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l105 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | . DECLARATOR\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  247 -> 29 [style=solid label="T_BREAK"]
  247 -> 259 [style=solid label="T_CASE"]
  247 -> 1 [style=solid label="T_CHAR"]
  247 -> 30 [style=solid label="T_CONTINUE"]
  247 -> 260 [style=solid label="T_DEFAULT"]
  247 -> 31 [style=solid label="T_DO"]
  247 -> 2 [style=solid label="T_DOUBLE"]
  247 -> 32 [style=solid label="T_ELSE"]
  247 -> 3 [style=solid label="T_ENUM"]
  247 -> 4 [style=solid label="T_FLOAT"]
  247 -> 33 [style=solid label="T_FOR"]
  247 -> 34 [style=solid label="T_IF"]
  247 -> 5 [style=solid label="T_INT"]
  247 -> 6 [style=solid label="T_LONG"]
  247 -> 35 [style=solid label="T_RETURN"]
  247 -> 7 [style=solid label="T_SHORT"]
  247 -> 8 [style=solid label="T_SIGNED"]
  247 -> 36 [style=solid label="T_SIZEOF"]
  247 -> 37 [style=solid label="T_STRUCT"]
  247 -> 38 [style=solid label="T_SWITCH"]
  247 -> 10 [style=solid label="T_TYPEDEF"]
  247 -> 11 [style=solid label="T_UNSIGNED"]
  247 -> 12 [style=solid label="T_VOID"]
  247 -> 39 [style=solid label="T_WHILE"]
  247 -> 40 [style=solid label="T_AND"]
  247 -> 41 [style=solid label="T_NOT"]
  247 -> 42 [style=solid label="T_INVERT"]
  247 -> 43 [style=solid label="T_MINUS"]
  247 -> 44 [style=solid label="T_PLUS"]
  247 -> 45 [style=solid label="T_MULT"]
  247 -> 46 [style=solid label="T_INC_OP"]
  247 -> 47 [style=solid label="T_DEC_OP"]
  247 -> 48 [style=solid label="T_SEMICOLON"]
  247 -> 13 [style=solid label="T_L_BRACE"]
  247 -> 49 [style=solid label="T_R_BRACE"]
  247 -> 50 [style=solid label="T_L_PARENTHESIS"]
  247 -> 51 [style=solid label="T_IDENTIFIER"]
  247 -> 52 [style=solid label="T_INT_CONST"]
  247 -> 53 [style=solid label="T_FLOAT_CONST"]
  247 -> 54 [style=solid label="T_CHAR_CONST"]
  247 -> 55 [style=solid label="T_STRING_CONST"]
  247 -> 15 [style=solid label="T_BOOL"]
  247 -> 56 [style=dashed label="SCOPE"]
  247 -> 57 [style=dashed label="MULTIPLE_STATEMENTS"]
  247 -> 261 [style=dashed label="SINGLE_STATEMENT"]
  247 -> 59 [style=dashed label="ENUMERATION"]
  247 -> 60 [style=dashed label="SELECTION_STATEMENT"]
  247 -> 262 [style=dashed label="MULTIPLE_CASE_STATEMENTS"]
  247 -> 263 [style=dashed label="SINGLE_CASE_STATEMENT"]
  247 -> 61 [style=dashed label="ITERATION_STATEMENT"]
  247 -> 62 [style=dashed label="JUMP_STATEMENT"]
  247 -> 63 [style=dashed label="EXPRESSION_STATEMENT"]
  247 -> 64 [style=dashed label="EXPRESSION"]
  247 -> 65 [style=dashed label="DECLARATOR"]
  247 -> 66 [style=dashed label="VARIABLE_DECLARATION"]
  247 -> 67 [style=dashed label="TYPE_DEF"]
  247 -> 68 [style=dashed label="TYPE_SPECIFIER"]
  247 -> 69 [style=dashed label="STRUCT_DEFINITION"]
  247 -> 70 [style=dashed label="STRUCT_DECLARATION"]
  247 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  247 -> 72 [style=dashed label="ASSIGNMENT_STATEMENT"]
  247 -> 73 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  247 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  247 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  247 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  247 -> 77 [style=dashed label="UNARY_OPERATOR"]
  247 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  247 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  247 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  247 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  247 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  247 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  247 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  247 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  247 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  247 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  247 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  248 [label="State 248\n\l 50 SELECTION_STATEMENT: T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT .\l"]
  248 -> "248R50" [style=solid]
 "248R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  249 [label="State 249\n\l 49 SELECTION_STATEMENT: T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS WRAPPED_CASE_STATEMENTS .\l"]
  249 -> "249R49" [style=solid]
 "249R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  250 [label="State 250\n\l 59 ITERATION_STATEMENT: T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT .\l"]
  250 -> "250R59" [style=solid]
 "250R59" [label="R59", fillcolor=3, shape=diamond, style=filled]
  251 [label="State 251\n\l105 ASSIGNMENT_STATEMENT: DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT .\l"]
  251 -> "251R105" [style=solid]
 "251R105" [label="R105", fillcolor=3, shape=diamond, style=filled]
  252 [label="State 252\n\l 25 MULTIPLE_PARAMETERS: MATH_OR_BITWISE_EXPRESSION T_COMMA MULTIPLE_PARAMETERS .\l"]
  252 -> "252R25" [style=solid]
 "252R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  253 [label="State 253\n\l 20 MULTIPLE_ARGUMENTS: SINGLE_ARGUMENT T_COMMA MULTIPLE_ARGUMENTS .\l"]
  253 -> "253R20" [style=solid]
 "253R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  254 [label="State 254\n\l 41 ENUMERATION: T_ENUM T_IDENTIFIER T_COLON TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE . T_SEMICOLON\l"]
  254 -> 264 [style=solid label="T_SEMICOLON"]
  255 [label="State 255\n\l 60 ITERATION_STATEMENT: T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS . T_SEMICOLON\l"]
  255 -> 265 [style=solid label="T_SEMICOLON"]
  256 [label="State 256\n\l 62 ITERATION_STATEMENT: T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT T_R_PARENTHESIS SINGLE_STATEMENT .\l"]
  256 -> "256R62" [style=solid]
 "256R62" [label="R62", fillcolor=3, shape=diamond, style=filled]
  257 [label="State 257\n\l 27 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 28      | . T_L_BRACE T_R_BRACE\l 31 SINGLE_STATEMENT: . SCOPE\l 32                 | . EXPRESSION_STATEMENT\l 33                 | . JUMP_STATEMENT\l 34                 | . ITERATION_STATEMENT\l 35                 | . SELECTION_STATEMENT\l 36                 | . ENUMERATION\l 37                 | . TYPE_DEF\l 38                 | . STRUCT_DEFINITION\l 39                 | . STRUCT_DECLARATION\l 40 ENUMERATION: . T_ENUM T_IDENTIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 41            | . T_ENUM T_IDENTIFIER T_COLON TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 46 SELECTION_STATEMENT: . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 47                    | . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l 48                    | . T_ELSE SINGLE_STATEMENT\l 49                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS WRAPPED_CASE_STATEMENTS\l 50                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 59 ITERATION_STATEMENT: . T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 60                    | . T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l 61                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 61                    | T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS . SINGLE_STATEMENT\l 62                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT T_R_PARENTHESIS SINGLE_STATEMENT\l 63 JUMP_STATEMENT: . T_RETURN T_SEMICOLON\l 64               | . T_RETURN EXPRESSION T_SEMICOLON\l 65               | . T_BREAK T_SEMICOLON\l 66               | . T_CONTINUE T_SEMICOLON\l 67 EXPRESSION_STATEMENT: . T_SEMICOLON\l 68                     | . EXPRESSION T_SEMICOLON\l 69 EXPRESSION: . VARIABLE_DECLARATION\l 70           | . ASSIGNMENT_STATEMENT\l 71           | . MATH_OR_BITWISE_EXPRESSION\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 87 TYPE_DEF: . T_TYPEDEF TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l 99 STRUCT_DEFINITION: . T_STRUCT T_IDENTIFIER T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON\l100 STRUCT_DECLARATION: . T_STRUCT TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l105 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | . DECLARATOR\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  257 -> 29 [style=solid label="T_BREAK"]
  257 -> 1 [style=solid label="T_CHAR"]
  257 -> 30 [style=solid label="T_CONTINUE"]
  257 -> 31 [style=solid label="T_DO"]
  257 -> 2 [style=solid label="T_DOUBLE"]
  257 -> 32 [style=solid label="T_ELSE"]
  257 -> 3 [style=solid label="T_ENUM"]
  257 -> 4 [style=solid label="T_FLOAT"]
  257 -> 33 [style=solid label="T_FOR"]
  257 -> 34 [style=solid label="T_IF"]
  257 -> 5 [style=solid label="T_INT"]
  257 -> 6 [style=solid label="T_LONG"]
  257 -> 35 [style=solid label="T_RETURN"]
  257 -> 7 [style=solid label="T_SHORT"]
  257 -> 8 [style=solid label="T_SIGNED"]
  257 -> 36 [style=solid label="T_SIZEOF"]
  257 -> 37 [style=solid label="T_STRUCT"]
  257 -> 38 [style=solid label="T_SWITCH"]
  257 -> 10 [style=solid label="T_TYPEDEF"]
  257 -> 11 [style=solid label="T_UNSIGNED"]
  257 -> 12 [style=solid label="T_VOID"]
  257 -> 39 [style=solid label="T_WHILE"]
  257 -> 40 [style=solid label="T_AND"]
  257 -> 41 [style=solid label="T_NOT"]
  257 -> 42 [style=solid label="T_INVERT"]
  257 -> 43 [style=solid label="T_MINUS"]
  257 -> 44 [style=solid label="T_PLUS"]
  257 -> 45 [style=solid label="T_MULT"]
  257 -> 46 [style=solid label="T_INC_OP"]
  257 -> 47 [style=solid label="T_DEC_OP"]
  257 -> 48 [style=solid label="T_SEMICOLON"]
  257 -> 13 [style=solid label="T_L_BRACE"]
  257 -> 50 [style=solid label="T_L_PARENTHESIS"]
  257 -> 51 [style=solid label="T_IDENTIFIER"]
  257 -> 52 [style=solid label="T_INT_CONST"]
  257 -> 53 [style=solid label="T_FLOAT_CONST"]
  257 -> 54 [style=solid label="T_CHAR_CONST"]
  257 -> 55 [style=solid label="T_STRING_CONST"]
  257 -> 15 [style=solid label="T_BOOL"]
  257 -> 56 [style=dashed label="SCOPE"]
  257 -> 266 [style=dashed label="SINGLE_STATEMENT"]
  257 -> 59 [style=dashed label="ENUMERATION"]
  257 -> 60 [style=dashed label="SELECTION_STATEMENT"]
  257 -> 61 [style=dashed label="ITERATION_STATEMENT"]
  257 -> 62 [style=dashed label="JUMP_STATEMENT"]
  257 -> 63 [style=dashed label="EXPRESSION_STATEMENT"]
  257 -> 64 [style=dashed label="EXPRESSION"]
  257 -> 65 [style=dashed label="DECLARATOR"]
  257 -> 66 [style=dashed label="VARIABLE_DECLARATION"]
  257 -> 67 [style=dashed label="TYPE_DEF"]
  257 -> 68 [style=dashed label="TYPE_SPECIFIER"]
  257 -> 69 [style=dashed label="STRUCT_DEFINITION"]
  257 -> 70 [style=dashed label="STRUCT_DECLARATION"]
  257 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  257 -> 72 [style=dashed label="ASSIGNMENT_STATEMENT"]
  257 -> 73 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  257 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  257 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  257 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  257 -> 77 [style=dashed label="UNARY_OPERATOR"]
  257 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  257 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  257 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  257 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  257 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  257 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  257 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  257 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  257 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  257 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  257 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  258 [label="State 258\n\l 47 SELECTION_STATEMENT: T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT .\l"]
  258 -> "258R47" [style=solid]
 "258R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  259 [label="State 259\n\l 54 SINGLE_CASE_STATEMENT: T_CASE . EXPRESSION T_COLON MULTIPLE_STATEMENTS\l 55                      | T_CASE . EXPRESSION T_COLON\l 69 EXPRESSION: . VARIABLE_DECLARATION\l 70           | . ASSIGNMENT_STATEMENT\l 71           | . MATH_OR_BITWISE_EXPRESSION\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l105 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | . DECLARATOR\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  259 -> 1 [style=solid label="T_CHAR"]
  259 -> 2 [style=solid label="T_DOUBLE"]
  259 -> 4 [style=solid label="T_FLOAT"]
  259 -> 5 [style=solid label="T_INT"]
  259 -> 6 [style=solid label="T_LONG"]
  259 -> 7 [style=solid label="T_SHORT"]
  259 -> 8 [style=solid label="T_SIGNED"]
  259 -> 36 [style=solid label="T_SIZEOF"]
  259 -> 11 [style=solid label="T_UNSIGNED"]
  259 -> 12 [style=solid label="T_VOID"]
  259 -> 40 [style=solid label="T_AND"]
  259 -> 41 [style=solid label="T_NOT"]
  259 -> 42 [style=solid label="T_INVERT"]
  259 -> 43 [style=solid label="T_MINUS"]
  259 -> 44 [style=solid label="T_PLUS"]
  259 -> 45 [style=solid label="T_MULT"]
  259 -> 46 [style=solid label="T_INC_OP"]
  259 -> 47 [style=solid label="T_DEC_OP"]
  259 -> 50 [style=solid label="T_L_PARENTHESIS"]
  259 -> 51 [style=solid label="T_IDENTIFIER"]
  259 -> 52 [style=solid label="T_INT_CONST"]
  259 -> 53 [style=solid label="T_FLOAT_CONST"]
  259 -> 54 [style=solid label="T_CHAR_CONST"]
  259 -> 55 [style=solid label="T_STRING_CONST"]
  259 -> 15 [style=solid label="T_BOOL"]
  259 -> 267 [style=dashed label="EXPRESSION"]
  259 -> 65 [style=dashed label="DECLARATOR"]
  259 -> 66 [style=dashed label="VARIABLE_DECLARATION"]
  259 -> 68 [style=dashed label="TYPE_SPECIFIER"]
  259 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  259 -> 72 [style=dashed label="ASSIGNMENT_STATEMENT"]
  259 -> 73 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  259 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  259 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  259 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  259 -> 77 [style=dashed label="UNARY_OPERATOR"]
  259 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  259 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  259 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  259 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  259 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  259 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  259 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  259 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  259 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  259 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  259 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  260 [label="State 260\n\l 56 SINGLE_CASE_STATEMENT: T_DEFAULT . T_COLON MULTIPLE_STATEMENTS\l 57                      | T_DEFAULT . T_COLON\l"]
  260 -> 268 [style=solid label="T_COLON"]
  261 [label="State 261\n\l 27 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 28      | . T_L_BRACE T_R_BRACE\l 29 MULTIPLE_STATEMENTS: . SINGLE_STATEMENT MULTIPLE_STATEMENTS\l 29                    | SINGLE_STATEMENT . MULTIPLE_STATEMENTS\l 30                    | . SINGLE_STATEMENT\l 30                    | SINGLE_STATEMENT .  [T_R_BRACE]\l 31 SINGLE_STATEMENT: . SCOPE\l 32                 | . EXPRESSION_STATEMENT\l 33                 | . JUMP_STATEMENT\l 34                 | . ITERATION_STATEMENT\l 35                 | . SELECTION_STATEMENT\l 36                 | . ENUMERATION\l 37                 | . TYPE_DEF\l 38                 | . STRUCT_DEFINITION\l 39                 | . STRUCT_DECLARATION\l 40 ENUMERATION: . T_ENUM T_IDENTIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 41            | . T_ENUM T_IDENTIFIER T_COLON TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 46 SELECTION_STATEMENT: . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 47                    | . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l 48                    | . T_ELSE SINGLE_STATEMENT\l 49                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS WRAPPED_CASE_STATEMENTS\l 50                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 58 SINGLE_CASE_STATEMENT: SINGLE_STATEMENT .  [T_BREAK, T_CASE, T_CHAR, T_CONTINUE, T_DEFAULT, T_DO, T_DOUBLE, T_ELSE, T_ENUM, T_FLOAT, T_FOR, T_IF, T_INT, T_LONG, T_RETURN, T_SHORT, T_SIGNED, T_SIZEOF, T_STRUCT, T_SWITCH, T_TYPEDEF, T_UNSIGNED, T_VOID, T_WHILE, T_AND, T_NOT, T_INVERT, T_MINUS, T_PLUS, T_MULT, T_INC_OP, T_DEC_OP, T_SEMICOLON, T_L_BRACE, T_R_BRACE, T_L_PARENTHESIS, T_IDENTIFIER, T_INT_CONST, T_FLOAT_CONST, T_CHAR_CONST, T_STRING_CONST, T_BOOL]\l 59 ITERATION_STATEMENT: . T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 60                    | . T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l 61                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 62                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT T_R_PARENTHESIS SINGLE_STATEMENT\l 63 JUMP_STATEMENT: . T_RETURN T_SEMICOLON\l 64               | . T_RETURN EXPRESSION T_SEMICOLON\l 65               | . T_BREAK T_SEMICOLON\l 66               | . T_CONTINUE T_SEMICOLON\l 67 EXPRESSION_STATEMENT: . T_SEMICOLON\l 68                     | . EXPRESSION T_SEMICOLON\l 69 EXPRESSION: . VARIABLE_DECLARATION\l 70           | . ASSIGNMENT_STATEMENT\l 71           | . MATH_OR_BITWISE_EXPRESSION\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 87 TYPE_DEF: . T_TYPEDEF TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l 99 STRUCT_DEFINITION: . T_STRUCT T_IDENTIFIER T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON\l100 STRUCT_DECLARATION: . T_STRUCT TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l105 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | . DECLARATOR\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  261 -> 29 [style=solid label="T_BREAK"]
  261 -> 1 [style=solid label="T_CHAR"]
  261 -> 30 [style=solid label="T_CONTINUE"]
  261 -> 31 [style=solid label="T_DO"]
  261 -> 2 [style=solid label="T_DOUBLE"]
  261 -> 32 [style=solid label="T_ELSE"]
  261 -> 3 [style=solid label="T_ENUM"]
  261 -> 4 [style=solid label="T_FLOAT"]
  261 -> 33 [style=solid label="T_FOR"]
  261 -> 34 [style=solid label="T_IF"]
  261 -> 5 [style=solid label="T_INT"]
  261 -> 6 [style=solid label="T_LONG"]
  261 -> 35 [style=solid label="T_RETURN"]
  261 -> 7 [style=solid label="T_SHORT"]
  261 -> 8 [style=solid label="T_SIGNED"]
  261 -> 36 [style=solid label="T_SIZEOF"]
  261 -> 37 [style=solid label="T_STRUCT"]
  261 -> 38 [style=solid label="T_SWITCH"]
  261 -> 10 [style=solid label="T_TYPEDEF"]
  261 -> 11 [style=solid label="T_UNSIGNED"]
  261 -> 12 [style=solid label="T_VOID"]
  261 -> 39 [style=solid label="T_WHILE"]
  261 -> 40 [style=solid label="T_AND"]
  261 -> 41 [style=solid label="T_NOT"]
  261 -> 42 [style=solid label="T_INVERT"]
  261 -> 43 [style=solid label="T_MINUS"]
  261 -> 44 [style=solid label="T_PLUS"]
  261 -> 45 [style=solid label="T_MULT"]
  261 -> 46 [style=solid label="T_INC_OP"]
  261 -> 47 [style=solid label="T_DEC_OP"]
  261 -> 48 [style=solid label="T_SEMICOLON"]
  261 -> 13 [style=solid label="T_L_BRACE"]
  261 -> 50 [style=solid label="T_L_PARENTHESIS"]
  261 -> 51 [style=solid label="T_IDENTIFIER"]
  261 -> 52 [style=solid label="T_INT_CONST"]
  261 -> 53 [style=solid label="T_FLOAT_CONST"]
  261 -> 54 [style=solid label="T_CHAR_CONST"]
  261 -> 55 [style=solid label="T_STRING_CONST"]
  261 -> 15 [style=solid label="T_BOOL"]
  261 -> 56 [style=dashed label="SCOPE"]
  261 -> 123 [style=dashed label="MULTIPLE_STATEMENTS"]
  261 -> 58 [style=dashed label="SINGLE_STATEMENT"]
  261 -> 59 [style=dashed label="ENUMERATION"]
  261 -> 60 [style=dashed label="SELECTION_STATEMENT"]
  261 -> 61 [style=dashed label="ITERATION_STATEMENT"]
  261 -> 62 [style=dashed label="JUMP_STATEMENT"]
  261 -> 63 [style=dashed label="EXPRESSION_STATEMENT"]
  261 -> 64 [style=dashed label="EXPRESSION"]
  261 -> 65 [style=dashed label="DECLARATOR"]
  261 -> 66 [style=dashed label="VARIABLE_DECLARATION"]
  261 -> 67 [style=dashed label="TYPE_DEF"]
  261 -> 68 [style=dashed label="TYPE_SPECIFIER"]
  261 -> 69 [style=dashed label="STRUCT_DEFINITION"]
  261 -> 70 [style=dashed label="STRUCT_DECLARATION"]
  261 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  261 -> 72 [style=dashed label="ASSIGNMENT_STATEMENT"]
  261 -> 73 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  261 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  261 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  261 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  261 -> 77 [style=dashed label="UNARY_OPERATOR"]
  261 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  261 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  261 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  261 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  261 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  261 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  261 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  261 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  261 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  261 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  261 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  261 -> "261R30" [label="[T_R_BRACE]", style=solid]
 "261R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  261 -> "261R58d" [label="[T_BREAK, T_CHAR, T_CONTINUE, T_DO, T_DOUBLE, T_ELSE, T_ENUM, T_FLOAT, T_FOR, T_IF, T_INT, T_LONG, T_RETURN, T_SHORT, T_SIGNED, T_SIZEOF, T_STRUCT, T_SWITCH, T_TYPEDEF, T_UNSIGNED, T_VOID, T_WHILE, T_AND, T_NOT, T_INVERT, T_MINUS, T_PLUS, T_MULT, T_INC_OP, T_DEC_OP, T_SEMICOLON, T_L_BRACE, T_R_BRACE, T_L_PARENTHESIS, T_IDENTIFIER, T_INT_CONST, T_FLOAT_CONST, T_CHAR_CONST, T_STRING_CONST, T_BOOL]", style=solid]
 "261R58d" [label="R58", fillcolor=5, shape=diamond, style=filled]
  261 -> "261R58" [style=solid]
 "261R58" [label="R58", fillcolor=3, shape=diamond, style=filled]
  262 [label="State 262\n\l 51 WRAPPED_CASE_STATEMENTS: T_L_BRACE MULTIPLE_CASE_STATEMENTS . T_R_BRACE\l"]
  262 -> 269 [style=solid label="T_R_BRACE"]
  263 [label="State 263\n\l 27 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 28      | . T_L_BRACE T_R_BRACE\l 31 SINGLE_STATEMENT: . SCOPE\l 32                 | . EXPRESSION_STATEMENT\l 33                 | . JUMP_STATEMENT\l 34                 | . ITERATION_STATEMENT\l 35                 | . SELECTION_STATEMENT\l 36                 | . ENUMERATION\l 37                 | . TYPE_DEF\l 38                 | . STRUCT_DEFINITION\l 39                 | . STRUCT_DECLARATION\l 40 ENUMERATION: . T_ENUM T_IDENTIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 41            | . T_ENUM T_IDENTIFIER T_COLON TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 46 SELECTION_STATEMENT: . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 47                    | . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l 48                    | . T_ELSE SINGLE_STATEMENT\l 49                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS WRAPPED_CASE_STATEMENTS\l 50                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 52 MULTIPLE_CASE_STATEMENTS: . SINGLE_CASE_STATEMENT MULTIPLE_CASE_STATEMENTS\l 52                         | SINGLE_CASE_STATEMENT . MULTIPLE_CASE_STATEMENTS\l 53                         | . SINGLE_CASE_STATEMENT\l 53                         | SINGLE_CASE_STATEMENT .  [T_R_BRACE]\l 54 SINGLE_CASE_STATEMENT: . T_CASE EXPRESSION T_COLON MULTIPLE_STATEMENTS\l 55                      | . T_CASE EXPRESSION T_COLON\l 56                      | . T_DEFAULT T_COLON MULTIPLE_STATEMENTS\l 57                      | . T_DEFAULT T_COLON\l 58                      | . SINGLE_STATEMENT\l 59 ITERATION_STATEMENT: . T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 60                    | . T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l 61                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 62                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT T_R_PARENTHESIS SINGLE_STATEMENT\l 63 JUMP_STATEMENT: . T_RETURN T_SEMICOLON\l 64               | . T_RETURN EXPRESSION T_SEMICOLON\l 65               | . T_BREAK T_SEMICOLON\l 66               | . T_CONTINUE T_SEMICOLON\l 67 EXPRESSION_STATEMENT: . T_SEMICOLON\l 68                     | . EXPRESSION T_SEMICOLON\l 69 EXPRESSION: . VARIABLE_DECLARATION\l 70           | . ASSIGNMENT_STATEMENT\l 71           | . MATH_OR_BITWISE_EXPRESSION\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 87 TYPE_DEF: . T_TYPEDEF TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l 99 STRUCT_DEFINITION: . T_STRUCT T_IDENTIFIER T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON\l100 STRUCT_DECLARATION: . T_STRUCT TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l105 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | . DECLARATOR\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  263 -> 29 [style=solid label="T_BREAK"]
  263 -> 259 [style=solid label="T_CASE"]
  263 -> 1 [style=solid label="T_CHAR"]
  263 -> 30 [style=solid label="T_CONTINUE"]
  263 -> 260 [style=solid label="T_DEFAULT"]
  263 -> 31 [style=solid label="T_DO"]
  263 -> 2 [style=solid label="T_DOUBLE"]
  263 -> 32 [style=solid label="T_ELSE"]
  263 -> 3 [style=solid label="T_ENUM"]
  263 -> 4 [style=solid label="T_FLOAT"]
  263 -> 33 [style=solid label="T_FOR"]
  263 -> 34 [style=solid label="T_IF"]
  263 -> 5 [style=solid label="T_INT"]
  263 -> 6 [style=solid label="T_LONG"]
  263 -> 35 [style=solid label="T_RETURN"]
  263 -> 7 [style=solid label="T_SHORT"]
  263 -> 8 [style=solid label="T_SIGNED"]
  263 -> 36 [style=solid label="T_SIZEOF"]
  263 -> 37 [style=solid label="T_STRUCT"]
  263 -> 38 [style=solid label="T_SWITCH"]
  263 -> 10 [style=solid label="T_TYPEDEF"]
  263 -> 11 [style=solid label="T_UNSIGNED"]
  263 -> 12 [style=solid label="T_VOID"]
  263 -> 39 [style=solid label="T_WHILE"]
  263 -> 40 [style=solid label="T_AND"]
  263 -> 41 [style=solid label="T_NOT"]
  263 -> 42 [style=solid label="T_INVERT"]
  263 -> 43 [style=solid label="T_MINUS"]
  263 -> 44 [style=solid label="T_PLUS"]
  263 -> 45 [style=solid label="T_MULT"]
  263 -> 46 [style=solid label="T_INC_OP"]
  263 -> 47 [style=solid label="T_DEC_OP"]
  263 -> 48 [style=solid label="T_SEMICOLON"]
  263 -> 13 [style=solid label="T_L_BRACE"]
  263 -> 50 [style=solid label="T_L_PARENTHESIS"]
  263 -> 51 [style=solid label="T_IDENTIFIER"]
  263 -> 52 [style=solid label="T_INT_CONST"]
  263 -> 53 [style=solid label="T_FLOAT_CONST"]
  263 -> 54 [style=solid label="T_CHAR_CONST"]
  263 -> 55 [style=solid label="T_STRING_CONST"]
  263 -> 15 [style=solid label="T_BOOL"]
  263 -> 56 [style=dashed label="SCOPE"]
  263 -> 270 [style=dashed label="SINGLE_STATEMENT"]
  263 -> 59 [style=dashed label="ENUMERATION"]
  263 -> 60 [style=dashed label="SELECTION_STATEMENT"]
  263 -> 271 [style=dashed label="MULTIPLE_CASE_STATEMENTS"]
  263 -> 263 [style=dashed label="SINGLE_CASE_STATEMENT"]
  263 -> 61 [style=dashed label="ITERATION_STATEMENT"]
  263 -> 62 [style=dashed label="JUMP_STATEMENT"]
  263 -> 63 [style=dashed label="EXPRESSION_STATEMENT"]
  263 -> 64 [style=dashed label="EXPRESSION"]
  263 -> 65 [style=dashed label="DECLARATOR"]
  263 -> 66 [style=dashed label="VARIABLE_DECLARATION"]
  263 -> 67 [style=dashed label="TYPE_DEF"]
  263 -> 68 [style=dashed label="TYPE_SPECIFIER"]
  263 -> 69 [style=dashed label="STRUCT_DEFINITION"]
  263 -> 70 [style=dashed label="STRUCT_DECLARATION"]
  263 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  263 -> 72 [style=dashed label="ASSIGNMENT_STATEMENT"]
  263 -> 73 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  263 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  263 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  263 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  263 -> 77 [style=dashed label="UNARY_OPERATOR"]
  263 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  263 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  263 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  263 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  263 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  263 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  263 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  263 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  263 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  263 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  263 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  263 -> "263R53" [style=solid]
 "263R53" [label="R53", fillcolor=3, shape=diamond, style=filled]
  264 [label="State 264\n\l 41 ENUMERATION: T_ENUM T_IDENTIFIER T_COLON TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON .\l"]
  264 -> "264R41" [style=solid]
 "264R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  265 [label="State 265\n\l 60 ITERATION_STATEMENT: T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON .\l"]
  265 -> "265R60" [style=solid]
 "265R60" [label="R60", fillcolor=3, shape=diamond, style=filled]
  266 [label="State 266\n\l 61 ITERATION_STATEMENT: T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT .\l"]
  266 -> "266R61" [style=solid]
 "266R61" [label="R61", fillcolor=3, shape=diamond, style=filled]
  267 [label="State 267\n\l 54 SINGLE_CASE_STATEMENT: T_CASE EXPRESSION . T_COLON MULTIPLE_STATEMENTS\l 55                      | T_CASE EXPRESSION . T_COLON\l"]
  267 -> 272 [style=solid label="T_COLON"]
  268 [label="State 268\n\l 27 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 28      | . T_L_BRACE T_R_BRACE\l 29 MULTIPLE_STATEMENTS: . SINGLE_STATEMENT MULTIPLE_STATEMENTS\l 30                    | . SINGLE_STATEMENT\l 31 SINGLE_STATEMENT: . SCOPE\l 32                 | . EXPRESSION_STATEMENT\l 33                 | . JUMP_STATEMENT\l 34                 | . ITERATION_STATEMENT\l 35                 | . SELECTION_STATEMENT\l 36                 | . ENUMERATION\l 37                 | . TYPE_DEF\l 38                 | . STRUCT_DEFINITION\l 39                 | . STRUCT_DECLARATION\l 40 ENUMERATION: . T_ENUM T_IDENTIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 41            | . T_ENUM T_IDENTIFIER T_COLON TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 46 SELECTION_STATEMENT: . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 47                    | . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l 48                    | . T_ELSE SINGLE_STATEMENT\l 49                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS WRAPPED_CASE_STATEMENTS\l 50                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 56 SINGLE_CASE_STATEMENT: T_DEFAULT T_COLON . MULTIPLE_STATEMENTS\l 57                      | T_DEFAULT T_COLON .  [T_BREAK, T_CASE, T_CHAR, T_CONTINUE, T_DEFAULT, T_DO, T_DOUBLE, T_ELSE, T_ENUM, T_FLOAT, T_FOR, T_IF, T_INT, T_LONG, T_RETURN, T_SHORT, T_SIGNED, T_SIZEOF, T_STRUCT, T_SWITCH, T_TYPEDEF, T_UNSIGNED, T_VOID, T_WHILE, T_AND, T_NOT, T_INVERT, T_MINUS, T_PLUS, T_MULT, T_INC_OP, T_DEC_OP, T_SEMICOLON, T_L_BRACE, T_R_BRACE, T_L_PARENTHESIS, T_IDENTIFIER, T_INT_CONST, T_FLOAT_CONST, T_CHAR_CONST, T_STRING_CONST, T_BOOL]\l 59 ITERATION_STATEMENT: . T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 60                    | . T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l 61                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 62                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT T_R_PARENTHESIS SINGLE_STATEMENT\l 63 JUMP_STATEMENT: . T_RETURN T_SEMICOLON\l 64               | . T_RETURN EXPRESSION T_SEMICOLON\l 65               | . T_BREAK T_SEMICOLON\l 66               | . T_CONTINUE T_SEMICOLON\l 67 EXPRESSION_STATEMENT: . T_SEMICOLON\l 68                     | . EXPRESSION T_SEMICOLON\l 69 EXPRESSION: . VARIABLE_DECLARATION\l 70           | . ASSIGNMENT_STATEMENT\l 71           | . MATH_OR_BITWISE_EXPRESSION\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 87 TYPE_DEF: . T_TYPEDEF TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l 99 STRUCT_DEFINITION: . T_STRUCT T_IDENTIFIER T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON\l100 STRUCT_DECLARATION: . T_STRUCT TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l105 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | . DECLARATOR\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  268 -> 29 [style=solid label="T_BREAK"]
  268 -> 1 [style=solid label="T_CHAR"]
  268 -> 30 [style=solid label="T_CONTINUE"]
  268 -> 31 [style=solid label="T_DO"]
  268 -> 2 [style=solid label="T_DOUBLE"]
  268 -> 32 [style=solid label="T_ELSE"]
  268 -> 3 [style=solid label="T_ENUM"]
  268 -> 4 [style=solid label="T_FLOAT"]
  268 -> 33 [style=solid label="T_FOR"]
  268 -> 34 [style=solid label="T_IF"]
  268 -> 5 [style=solid label="T_INT"]
  268 -> 6 [style=solid label="T_LONG"]
  268 -> 35 [style=solid label="T_RETURN"]
  268 -> 7 [style=solid label="T_SHORT"]
  268 -> 8 [style=solid label="T_SIGNED"]
  268 -> 36 [style=solid label="T_SIZEOF"]
  268 -> 37 [style=solid label="T_STRUCT"]
  268 -> 38 [style=solid label="T_SWITCH"]
  268 -> 10 [style=solid label="T_TYPEDEF"]
  268 -> 11 [style=solid label="T_UNSIGNED"]
  268 -> 12 [style=solid label="T_VOID"]
  268 -> 39 [style=solid label="T_WHILE"]
  268 -> 40 [style=solid label="T_AND"]
  268 -> 41 [style=solid label="T_NOT"]
  268 -> 42 [style=solid label="T_INVERT"]
  268 -> 43 [style=solid label="T_MINUS"]
  268 -> 44 [style=solid label="T_PLUS"]
  268 -> 45 [style=solid label="T_MULT"]
  268 -> 46 [style=solid label="T_INC_OP"]
  268 -> 47 [style=solid label="T_DEC_OP"]
  268 -> 48 [style=solid label="T_SEMICOLON"]
  268 -> 13 [style=solid label="T_L_BRACE"]
  268 -> 50 [style=solid label="T_L_PARENTHESIS"]
  268 -> 51 [style=solid label="T_IDENTIFIER"]
  268 -> 52 [style=solid label="T_INT_CONST"]
  268 -> 53 [style=solid label="T_FLOAT_CONST"]
  268 -> 54 [style=solid label="T_CHAR_CONST"]
  268 -> 55 [style=solid label="T_STRING_CONST"]
  268 -> 15 [style=solid label="T_BOOL"]
  268 -> 56 [style=dashed label="SCOPE"]
  268 -> 273 [style=dashed label="MULTIPLE_STATEMENTS"]
  268 -> 58 [style=dashed label="SINGLE_STATEMENT"]
  268 -> 59 [style=dashed label="ENUMERATION"]
  268 -> 60 [style=dashed label="SELECTION_STATEMENT"]
  268 -> 61 [style=dashed label="ITERATION_STATEMENT"]
  268 -> 62 [style=dashed label="JUMP_STATEMENT"]
  268 -> 63 [style=dashed label="EXPRESSION_STATEMENT"]
  268 -> 64 [style=dashed label="EXPRESSION"]
  268 -> 65 [style=dashed label="DECLARATOR"]
  268 -> 66 [style=dashed label="VARIABLE_DECLARATION"]
  268 -> 67 [style=dashed label="TYPE_DEF"]
  268 -> 68 [style=dashed label="TYPE_SPECIFIER"]
  268 -> 69 [style=dashed label="STRUCT_DEFINITION"]
  268 -> 70 [style=dashed label="STRUCT_DECLARATION"]
  268 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  268 -> 72 [style=dashed label="ASSIGNMENT_STATEMENT"]
  268 -> 73 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  268 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  268 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  268 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  268 -> 77 [style=dashed label="UNARY_OPERATOR"]
  268 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  268 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  268 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  268 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  268 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  268 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  268 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  268 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  268 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  268 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  268 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  268 -> "268R57d" [label="[T_BREAK, T_CHAR, T_CONTINUE, T_DO, T_DOUBLE, T_ELSE, T_ENUM, T_FLOAT, T_FOR, T_IF, T_INT, T_LONG, T_RETURN, T_SHORT, T_SIGNED, T_SIZEOF, T_STRUCT, T_SWITCH, T_TYPEDEF, T_UNSIGNED, T_VOID, T_WHILE, T_AND, T_NOT, T_INVERT, T_MINUS, T_PLUS, T_MULT, T_INC_OP, T_DEC_OP, T_SEMICOLON, T_L_BRACE, T_L_PARENTHESIS, T_IDENTIFIER, T_INT_CONST, T_FLOAT_CONST, T_CHAR_CONST, T_STRING_CONST, T_BOOL]", style=solid]
 "268R57d" [label="R57", fillcolor=5, shape=diamond, style=filled]
  268 -> "268R57" [style=solid]
 "268R57" [label="R57", fillcolor=3, shape=diamond, style=filled]
  269 [label="State 269\n\l 51 WRAPPED_CASE_STATEMENTS: T_L_BRACE MULTIPLE_CASE_STATEMENTS T_R_BRACE .\l"]
  269 -> "269R51" [style=solid]
 "269R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  270 [label="State 270\n\l 58 SINGLE_CASE_STATEMENT: SINGLE_STATEMENT .\l"]
  270 -> "270R58" [style=solid]
 "270R58" [label="R58", fillcolor=3, shape=diamond, style=filled]
  271 [label="State 271\n\l 52 MULTIPLE_CASE_STATEMENTS: SINGLE_CASE_STATEMENT MULTIPLE_CASE_STATEMENTS .\l"]
  271 -> "271R52" [style=solid]
 "271R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  272 [label="State 272\n\l 27 SCOPE: . T_L_BRACE MULTIPLE_STATEMENTS T_R_BRACE\l 28      | . T_L_BRACE T_R_BRACE\l 29 MULTIPLE_STATEMENTS: . SINGLE_STATEMENT MULTIPLE_STATEMENTS\l 30                    | . SINGLE_STATEMENT\l 31 SINGLE_STATEMENT: . SCOPE\l 32                 | . EXPRESSION_STATEMENT\l 33                 | . JUMP_STATEMENT\l 34                 | . ITERATION_STATEMENT\l 35                 | . SELECTION_STATEMENT\l 36                 | . ENUMERATION\l 37                 | . TYPE_DEF\l 38                 | . STRUCT_DEFINITION\l 39                 | . STRUCT_DECLARATION\l 40 ENUMERATION: . T_ENUM T_IDENTIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 41            | . T_ENUM T_IDENTIFIER T_COLON TYPE_SPECIFIER T_L_BRACE MULTIPLE_ENUMERATORS T_R_BRACE T_SEMICOLON\l 46 SELECTION_STATEMENT: . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 47                    | . T_IF T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT SELECTION_STATEMENT\l 48                    | . T_ELSE SINGLE_STATEMENT\l 49                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS WRAPPED_CASE_STATEMENTS\l 50                    | . T_SWITCH T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 54 SINGLE_CASE_STATEMENT: T_CASE EXPRESSION T_COLON . MULTIPLE_STATEMENTS\l 55                      | T_CASE EXPRESSION T_COLON .  [T_BREAK, T_CASE, T_CHAR, T_CONTINUE, T_DEFAULT, T_DO, T_DOUBLE, T_ELSE, T_ENUM, T_FLOAT, T_FOR, T_IF, T_INT, T_LONG, T_RETURN, T_SHORT, T_SIGNED, T_SIZEOF, T_STRUCT, T_SWITCH, T_TYPEDEF, T_UNSIGNED, T_VOID, T_WHILE, T_AND, T_NOT, T_INVERT, T_MINUS, T_PLUS, T_MULT, T_INC_OP, T_DEC_OP, T_SEMICOLON, T_L_BRACE, T_R_BRACE, T_L_PARENTHESIS, T_IDENTIFIER, T_INT_CONST, T_FLOAT_CONST, T_CHAR_CONST, T_STRING_CONST, T_BOOL]\l 59 ITERATION_STATEMENT: . T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 60                    | . T_DO SINGLE_STATEMENT T_WHILE T_L_PARENTHESIS EXPRESSION T_R_PARENTHESIS T_SEMICOLON\l 61                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION T_R_PARENTHESIS SINGLE_STATEMENT\l 62                    | . T_FOR T_L_PARENTHESIS EXPRESSION_STATEMENT EXPRESSION_STATEMENT T_R_PARENTHESIS SINGLE_STATEMENT\l 63 JUMP_STATEMENT: . T_RETURN T_SEMICOLON\l 64               | . T_RETURN EXPRESSION T_SEMICOLON\l 65               | . T_BREAK T_SEMICOLON\l 66               | . T_CONTINUE T_SEMICOLON\l 67 EXPRESSION_STATEMENT: . T_SEMICOLON\l 68                     | . EXPRESSION T_SEMICOLON\l 69 EXPRESSION: . VARIABLE_DECLARATION\l 70           | . ASSIGNMENT_STATEMENT\l 71           | . MATH_OR_BITWISE_EXPRESSION\l 82 DECLARATOR: . STRUCT_ATTRIBUTE\l 83           | . T_IDENTIFIER\l 84           | . T_MULT T_IDENTIFIER\l 85           | . T_IDENTIFIER T_L_BRACKET MATH_OR_BITWISE_EXPRESSION T_R_BRACKET\l 86 VARIABLE_DECLARATION: . TYPE_SPECIFIER ASSIGNMENT_STATEMENT\l 87 TYPE_DEF: . T_TYPEDEF TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l 88 TYPE_SPECIFIER: . T_VOID\l 89               | . T_CHAR\l 90               | . T_SHORT\l 91               | . T_INT\l 92               | . T_LONG\l 93               | . T_FLOAT\l 94               | . T_DOUBLE\l 95               | . T_SIGNED\l 96               | . T_UNSIGNED\l 97               | . T_BOOL\l 98               | . T_IDENTIFIER\l 99 STRUCT_DEFINITION: . T_STRUCT T_IDENTIFIER T_L_BRACE MULTIPLE_ATTRIBUTES T_R_BRACE T_SEMICOLON\l100 STRUCT_DECLARATION: . T_STRUCT TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON\l101 STRUCT_ATTRIBUTE: . T_IDENTIFIER T_DOT T_IDENTIFIER\l105 ASSIGNMENT_STATEMENT: . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION T_COMMA ASSIGNMENT_STATEMENT\l106                     | . DECLARATOR T_EQ_ASSIGN ASSIGNMENT_STATEMENT\l107                     | . DECLARATOR T_EQ_ASSIGN MATH_OR_BITWISE_EXPRESSION\l108                     | . DECLARATOR\l109 MATH_OR_BITWISE_EXPRESSION: . CONDITIONAL_EXPRESSION\l110                           | . DECLARATOR ASSIGNMENT_OPERATOR MATH_OR_BITWISE_EXPRESSION\l111 PRIMARY_EXPRESSION: . DECLARATOR\l112                   | . T_INT_CONST\l113                   | . T_FLOAT_CONST\l114                   | . T_CHAR_CONST\l115                   | . T_STRING_CONST\l116                   | . T_L_PARENTHESIS MATH_OR_BITWISE_EXPRESSION T_R_PARENTHESIS\l117                   | . DECLARATOR WRAPPED_PARAMETERS\l118                   | . T_SIZEOF T_L_PARENTHESIS TYPE_SPECIFIER T_R_PARENTHESIS\l119                   | . T_SIZEOF T_L_PARENTHESIS DECLARATOR T_R_PARENTHESIS\l120 POSTFIX_EXPRESSION: . PRIMARY_EXPRESSION\l121                   | . POSTFIX_EXPRESSION T_INC_OP\l122                   | . POSTFIX_EXPRESSION T_DEC_OP\l123 UNARY_EXPRESSION: . POSTFIX_EXPRESSION\l124                 | . UNARY_OPERATOR UNARY_EXPRESSION\l125 UNARY_OPERATOR: . T_INC_OP\l126               | . T_DEC_OP\l127               | . T_AND\l128               | . T_PLUS\l129               | . T_MINUS\l130               | . T_INVERT\l131               | . T_NOT\l132 MULTIPLICATIVE_EXPRESSION: . UNARY_EXPRESSION\l133                          | . MULTIPLICATIVE_EXPRESSION T_MULT UNARY_EXPRESSION\l134                          | . MULTIPLICATIVE_EXPRESSION T_DIV UNARY_EXPRESSION\l135                          | . MULTIPLICATIVE_EXPRESSION T_MOD UNARY_EXPRESSION\l136 ADDITIVE_EXPRESSION: . MULTIPLICATIVE_EXPRESSION\l137                    | . ADDITIVE_EXPRESSION T_PLUS MULTIPLICATIVE_EXPRESSION\l138                    | . ADDITIVE_EXPRESSION T_MINUS MULTIPLICATIVE_EXPRESSION\l139 SHIFT_EXPRESSION: . ADDITIVE_EXPRESSION\l140                 | . SHIFT_EXPRESSION T_LSHIFT_OP ADDITIVE_EXPRESSION\l141                 | . SHIFT_EXPRESSION T_RSHIFT_OP ADDITIVE_EXPRESSION\l142 RELATIONAL_EXPRESSION: . SHIFT_EXPRESSION\l143                      | . RELATIONAL_EXPRESSION T_LT SHIFT_EXPRESSION\l144                      | . RELATIONAL_EXPRESSION T_GT SHIFT_EXPRESSION\l145                      | . RELATIONAL_EXPRESSION T_LE_OP SHIFT_EXPRESSION\l146                      | . RELATIONAL_EXPRESSION T_GE_OP SHIFT_EXPRESSION\l147 EQUALITY_EXPRESSION: . RELATIONAL_EXPRESSION\l148                    | . EQUALITY_EXPRESSION T_EQ_OP RELATIONAL_EXPRESSION\l149                    | . EQUALITY_EXPRESSION T_NE_OP RELATIONAL_EXPRESSION\l150 BITWISE_AND_EXPRESSION: . EQUALITY_EXPRESSION\l151                       | . BITWISE_AND_EXPRESSION T_AND EQUALITY_EXPRESSION\l152 BITWISE_XOR_EXPRESSION: . BITWISE_AND_EXPRESSION\l153                       | . BITWISE_XOR_EXPRESSION T_XOR BITWISE_AND_EXPRESSION\l154 BITWISE_OR_EXPRESSION: . BITWISE_XOR_EXPRESSION\l155                      | . BITWISE_OR_EXPRESSION T_OR BITWISE_OR_EXPRESSION\l156 BOOLEAN_AND_EXPRESSION: . BITWISE_OR_EXPRESSION\l157                       | . BOOLEAN_AND_EXPRESSION T_AND_OP BITWISE_OR_EXPRESSION\l158 BOOLEAN_OR_EXPRESSION: . BOOLEAN_AND_EXPRESSION\l159                      | . BOOLEAN_OR_EXPRESSION T_OR_OP BOOLEAN_AND_EXPRESSION\l160 CONDITIONAL_EXPRESSION: . BOOLEAN_OR_EXPRESSION\l"]
  272 -> 29 [style=solid label="T_BREAK"]
  272 -> 1 [style=solid label="T_CHAR"]
  272 -> 30 [style=solid label="T_CONTINUE"]
  272 -> 31 [style=solid label="T_DO"]
  272 -> 2 [style=solid label="T_DOUBLE"]
  272 -> 32 [style=solid label="T_ELSE"]
  272 -> 3 [style=solid label="T_ENUM"]
  272 -> 4 [style=solid label="T_FLOAT"]
  272 -> 33 [style=solid label="T_FOR"]
  272 -> 34 [style=solid label="T_IF"]
  272 -> 5 [style=solid label="T_INT"]
  272 -> 6 [style=solid label="T_LONG"]
  272 -> 35 [style=solid label="T_RETURN"]
  272 -> 7 [style=solid label="T_SHORT"]
  272 -> 8 [style=solid label="T_SIGNED"]
  272 -> 36 [style=solid label="T_SIZEOF"]
  272 -> 37 [style=solid label="T_STRUCT"]
  272 -> 38 [style=solid label="T_SWITCH"]
  272 -> 10 [style=solid label="T_TYPEDEF"]
  272 -> 11 [style=solid label="T_UNSIGNED"]
  272 -> 12 [style=solid label="T_VOID"]
  272 -> 39 [style=solid label="T_WHILE"]
  272 -> 40 [style=solid label="T_AND"]
  272 -> 41 [style=solid label="T_NOT"]
  272 -> 42 [style=solid label="T_INVERT"]
  272 -> 43 [style=solid label="T_MINUS"]
  272 -> 44 [style=solid label="T_PLUS"]
  272 -> 45 [style=solid label="T_MULT"]
  272 -> 46 [style=solid label="T_INC_OP"]
  272 -> 47 [style=solid label="T_DEC_OP"]
  272 -> 48 [style=solid label="T_SEMICOLON"]
  272 -> 13 [style=solid label="T_L_BRACE"]
  272 -> 50 [style=solid label="T_L_PARENTHESIS"]
  272 -> 51 [style=solid label="T_IDENTIFIER"]
  272 -> 52 [style=solid label="T_INT_CONST"]
  272 -> 53 [style=solid label="T_FLOAT_CONST"]
  272 -> 54 [style=solid label="T_CHAR_CONST"]
  272 -> 55 [style=solid label="T_STRING_CONST"]
  272 -> 15 [style=solid label="T_BOOL"]
  272 -> 56 [style=dashed label="SCOPE"]
  272 -> 274 [style=dashed label="MULTIPLE_STATEMENTS"]
  272 -> 58 [style=dashed label="SINGLE_STATEMENT"]
  272 -> 59 [style=dashed label="ENUMERATION"]
  272 -> 60 [style=dashed label="SELECTION_STATEMENT"]
  272 -> 61 [style=dashed label="ITERATION_STATEMENT"]
  272 -> 62 [style=dashed label="JUMP_STATEMENT"]
  272 -> 63 [style=dashed label="EXPRESSION_STATEMENT"]
  272 -> 64 [style=dashed label="EXPRESSION"]
  272 -> 65 [style=dashed label="DECLARATOR"]
  272 -> 66 [style=dashed label="VARIABLE_DECLARATION"]
  272 -> 67 [style=dashed label="TYPE_DEF"]
  272 -> 68 [style=dashed label="TYPE_SPECIFIER"]
  272 -> 69 [style=dashed label="STRUCT_DEFINITION"]
  272 -> 70 [style=dashed label="STRUCT_DECLARATION"]
  272 -> 71 [style=dashed label="STRUCT_ATTRIBUTE"]
  272 -> 72 [style=dashed label="ASSIGNMENT_STATEMENT"]
  272 -> 73 [style=dashed label="MATH_OR_BITWISE_EXPRESSION"]
  272 -> 74 [style=dashed label="PRIMARY_EXPRESSION"]
  272 -> 75 [style=dashed label="POSTFIX_EXPRESSION"]
  272 -> 76 [style=dashed label="UNARY_EXPRESSION"]
  272 -> 77 [style=dashed label="UNARY_OPERATOR"]
  272 -> 78 [style=dashed label="MULTIPLICATIVE_EXPRESSION"]
  272 -> 79 [style=dashed label="ADDITIVE_EXPRESSION"]
  272 -> 80 [style=dashed label="SHIFT_EXPRESSION"]
  272 -> 81 [style=dashed label="RELATIONAL_EXPRESSION"]
  272 -> 82 [style=dashed label="EQUALITY_EXPRESSION"]
  272 -> 83 [style=dashed label="BITWISE_AND_EXPRESSION"]
  272 -> 84 [style=dashed label="BITWISE_XOR_EXPRESSION"]
  272 -> 85 [style=dashed label="BITWISE_OR_EXPRESSION"]
  272 -> 86 [style=dashed label="BOOLEAN_AND_EXPRESSION"]
  272 -> 87 [style=dashed label="BOOLEAN_OR_EXPRESSION"]
  272 -> 88 [style=dashed label="CONDITIONAL_EXPRESSION"]
  272 -> "272R55d" [label="[T_BREAK, T_CHAR, T_CONTINUE, T_DO, T_DOUBLE, T_ELSE, T_ENUM, T_FLOAT, T_FOR, T_IF, T_INT, T_LONG, T_RETURN, T_SHORT, T_SIGNED, T_SIZEOF, T_STRUCT, T_SWITCH, T_TYPEDEF, T_UNSIGNED, T_VOID, T_WHILE, T_AND, T_NOT, T_INVERT, T_MINUS, T_PLUS, T_MULT, T_INC_OP, T_DEC_OP, T_SEMICOLON, T_L_BRACE, T_L_PARENTHESIS, T_IDENTIFIER, T_INT_CONST, T_FLOAT_CONST, T_CHAR_CONST, T_STRING_CONST, T_BOOL]", style=solid]
 "272R55d" [label="R55", fillcolor=5, shape=diamond, style=filled]
  272 -> "272R55" [style=solid]
 "272R55" [label="R55", fillcolor=3, shape=diamond, style=filled]
  273 [label="State 273\n\l 56 SINGLE_CASE_STATEMENT: T_DEFAULT T_COLON MULTIPLE_STATEMENTS .\l"]
  273 -> "273R56" [style=solid]
 "273R56" [label="R56", fillcolor=3, shape=diamond, style=filled]
  274 [label="State 274\n\l 54 SINGLE_CASE_STATEMENT: T_CASE EXPRESSION T_COLON MULTIPLE_STATEMENTS .\l"]
  274 -> "274R54" [style=solid]
 "274R54" [label="R54", fillcolor=3, shape=diamond, style=filled]
}
